export declare enum FileExtensionEnum {
    CSV = ".csv",
    XLSX = ".xlsx",
    KML = ".kml",
    JPEG = ".jpeg",
    JPG = ".jpg",
    PNG = ".png",
    SVG = ".svg",
    WEBP = ".webp"
}
export declare enum FileMimeTypeEnum {
    CSV = "text/csv",
    XLS = "application/vnd.ms-excel",
    XLSX = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    KML = "application/xml",
    JPEG = "image/jpeg",
    PNG = "image/png",
    SVG = "image/svg+xml",
    WEBP = "image/webp"
}
export declare const fileMimeToExtensionMap: Record<string, FileExtensionEnum[]>;
export declare const fileExtensionToMimeTypeMap: Record<string, FileMimeTypeEnum>;
export declare const isValidExtensionsFileType: ({ value, validExtension }: {
    value: string;
    validExtension?: string[];
}) => boolean;
/**
 * Returns an accept object of mimeTypes to extensions on allowed MIME types.
 * Example usage: accept={getAcceptedFileTypes(fileTypes)}
 */
export declare const getAcceptedFileTypes: (fileTypes?: FileMimeTypeEnum[]) => Record<string, string[]>;
