"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require(".");
class EnumContainer extends Object {
    constructor() {
        super();
        this.id_n = 0;
        this.enum_ary = new Array();
        this.enumById_map = new Map();
        this.enumByName_map = new Map();
    }
    add(p) {
        if (p.enumBase instanceof _1.EnumBase) {
            let enumItem = p.enumBase;
            let id_i = enumItem.getId();
            let name_s = enumItem.getName();
            if (this.enumById_map.get(id_i)) {
                let error = new Error(`Duplicate id: ${id_i}, name: ${enumItem.getName()}`);
                throw error;
            }
            if (this.enumByName_map.get(name_s)) {
                let error = new Error(`Duplicate name: ${id_i}, name: ${enumItem.getName()}`);
                throw error;
            }
            this.enum_ary.push(p.enumBase);
            this.enumById_map.set(id_i, p.enumBase);
            this.enumByName_map.set(name_s, p.enumBase);
        }
    }
    getAll() {
        return (this.enum_ary);
    }
    getById(p) {
        let enumItem = undefined;
        enumItem = this.enumById_map.get(p.id);
        return (enumItem);
    }
    getByName(p) {
        let enumItem = undefined;
        enumItem = this.enumByName_map.get(p.name);
        return (enumItem);
    }
    getNextId() {
        return (this.id_n++);
    }
}
//# sourceMappingURL=EnumContainer.js.map