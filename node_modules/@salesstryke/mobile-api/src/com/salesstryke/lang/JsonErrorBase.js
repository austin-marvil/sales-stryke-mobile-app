"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonErrorBase = void 0;
const ErrorIdType_1 = require("../jsonApi/ErrorIdType");
const ErrorBase_1 = require("./ErrorBase");
class JsonErrorBase extends ErrorBase_1.ErrorBase {
    constructor(message_s, userUUID_s, errorIdType, securityAttributeUUID_s, namespace_s = "", methodName_s = "", i18nKey_s = "", uiUUID_s = "") {
        // 'Error' breaks prototype chain here
        super(message_s);
        this.errorIdType = ErrorIdType_1.ErrorIdType.NONE;
        this.i18nKey_s = "";
        // private methodName_s:               string = "";
        // private namespace_s:                string = "";
        this.securityAttributeUUID_s = "";
        this.uiUUID_s = "";
        this.userUUID_s = "";
        this.errorIdType = errorIdType;
        this.i18nKey_s = i18nKey_s;
        this.securityAttributeUUID_s = securityAttributeUUID_s;
        this.namespace_s = namespace_s;
        this.methodName_s = methodName_s;
        this.uiUUID_s = uiUUID_s;
        this.userUUID_s = userUUID_s;
        // restore prototype chain   
        Object.setPrototypeOf(this, new.target.prototype);
    }
    getClassName() {
        return (JsonErrorBase.NAMESPACE);
    }
    static getClassName() {
        return (JsonErrorBase.NAMESPACE);
    }
    getErrorIdType() {
        return (this.errorIdType);
    }
    getI18nKey() {
        return (this.i18nKey_s);
    }
    // getMethodName(): string {
    //   return(this.methodName_s);
    // }
    // getNamespace(): string {
    //   return(this.namespace_s);
    // }
    getSecurityAttributeUUID() {
        return (this.securityAttributeUUID_s);
    }
    getUIUUID() {
        return (this.uiUUID_s);
    }
    getUserUUID() {
        return (this.userUUID_s);
    }
    setI18nKey(i18nKey_s) {
        this.i18nKey_s = i18nKey_s;
        return (this);
    }
    setSecurityAttributeUUID(securityAttributeUUID_s) {
        this.securityAttributeUUID_s = securityAttributeUUID_s;
        return (this);
    }
    setUIUUID(uiUUID_s) {
        this.uiUUID_s = uiUUID_s;
        return (this);
    }
    setUserUUID(userUUID_s) {
        this.userUUID_s = userUUID_s;
        return (this);
    }
}
exports.JsonErrorBase = JsonErrorBase;
JsonErrorBase.NAMESPACE = "com.salesstryke.lang.JsonApiMetaError";
//# sourceMappingURL=JsonErrorBase.js.map