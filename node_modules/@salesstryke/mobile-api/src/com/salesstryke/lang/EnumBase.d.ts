export declare class EnumContainer extends Object {
    private id_n;
    private enum_ary;
    private enumById_map;
    private enumByName_map;
    constructor();
    add(p: {
        enumBase: any;
    }): void;
    getAll(): Array<any>;
    getById(p: {
        id: number;
    }): any | undefined;
    getByName(p: {
        name: string;
    }): any | undefined;
    getNextId(): number;
}
export declare class EnumBase<T> extends Object {
    private static enumContainer_map;
    private enumContainer;
    private id_i;
    private name_s;
    private namespace_s;
    /**
     * ```
     * idOverride: This is meant to FORCE the id.
     * ```
     */
    constructor(p: {
        idOverride?: number;
        name: string;
        namespace: string;
    });
    getAll(): Array<T>;
    getById(p: {
        id: number;
    }): T | undefined;
    getByName(p: {
        name: string;
    }): T | undefined;
    getId(): number;
    getName(): string;
    getNamespace(): string;
}
