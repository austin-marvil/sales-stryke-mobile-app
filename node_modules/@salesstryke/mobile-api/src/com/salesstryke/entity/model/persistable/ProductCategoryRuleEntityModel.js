"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductCategoryRuleEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ProductCategoryRule';
class ProductCategoryRuleEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('f8a58a09-0c28-4715-ac44-b119bf445471')
            .setDataModelName('ProductCategoryRule')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('b6f2c908-979d-4b85-b9d6-077a790b2976');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('074625ce-740a-45fe-be6d-050b5a72d451'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('4e8ccb52-e6cd-447b-bba8-abe4efd33295'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('e1474df6-d8a3-40bd-bba5-a3f3aa7f4298'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('ac3edbcc-3e23-4fcb-b8de-f85b473584f7'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('40a00a5d-2381-4308-8e90-f79db44e2e9e'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('f682dd17-2076-4edb-8ee8-dce44874ffff'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'e3bf7fe0-04ce-4566-a525-4f2ae03b7909'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('eb6e16a9-cdb2-4007-89f8-c7c75eed8112'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('dfd7df37-8c9b-429d-ad89-04240f951f30'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeStartDate',
            attributeUUID: '50399ba8-dec9-4c6b-868f-75e456e10bc5',
            comment: 'Active start date.'
        }));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeEndDate',
            attributeUUID: '0e16577c-950e-406a-96d7-6c2b97984f09',
            comment: 'Active end date.'
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '39b8d942-0825-4bf9-8169-97c4bc8b0e7d',
            comment: 'The name for this tax type.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '39bb1753-60d7-4dde-bb2b-dbe88aaa5aee',
            comment: 'The description for this tax type.',
            validator: zod_1.z.string().max(5000, 'Description is too long')
        }));
        // multiplier
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'multiplier',
            attributeUUID: '2ea2819d-26a2-423c-ad82-7fb9c013bdb2',
            comment: 'Multiplier.'
        }));
        // rules
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'rules',
            attributeUUID: '5e33cc10-88a8-47e1-8584-2adba13e3359',
            comment: 'Rules.'
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: '727f2bc3-802e-4e9c-a892-5f6c41b21c46',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            validator: zod_1.z.string(),
            isMongoRequired: false
        }));
        /**
         * Workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: 'fb27e9c8-5176-48cf-b193-d2a6f84c3ef9',
            comment: 'The workspace.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
        }));
    }
    static getInstance() {
        return (ProductCategoryRuleEntityModel.INSTANCE);
    }
}
exports.ProductCategoryRuleEntityModel = ProductCategoryRuleEntityModel;
ProductCategoryRuleEntityModel.INSTANCE = new ProductCategoryRuleEntityModel();
//# sourceMappingURL=ProductCategoryRuleEntityModel.js.map