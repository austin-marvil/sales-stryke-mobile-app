"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartServiceDayOfWeekEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.CartServiceDayOfWeek';
class CartServiceDayOfWeekEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('cec7c43e-7012-4725-b072-ae0630cbf8cd')
            .setDataModelName('CartServiceDayOfWeek')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('0018c58b-2bfc-41d7-a092-2729cb9d48aa');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('046a94ed-962a-45fc-adbb-56161ef877ae'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('1d9d0624-7961-4191-821d-107858a82851'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('80bbeb7b-9e9f-4ce4-816c-3814714ee218'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('949f3ade-67af-4b9b-a385-98c47beb1933'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('be7b25dc-5954-4929-b05d-2996db25bef3'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('23845097-ad7d-4a9a-930b-3dda4a73d4e5'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '368e3eeb-448f-440d-9b2b-2b13135f445b'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('6ef234e3-a2d3-48cb-951b-64c4400b66c3'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('663926fb-9bb8-4ced-8a3a-ba5b438478a4'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '681e17d5-67f0-4b87-8792-cdb64259fd63',
            comment: 'The name.',
            isMongoRequired: false,
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '9f439a04-f9a0-4d38-b25c-04c18bd83a83',
            comment: 'The description.',
            isMongoRequired: false,
            validator: zod_1.z.string().max(1000, 'Description is to long'),
        }));
        // cartItem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'cartItem',
            attributeUUID: 'bc06f57a-b67a-4155-980e-deac451ccb17',
            comment: 'The cart item.',
            foreignRefEntityNamespace: persistable_1.CartItem.metaDataForCartItem.namespace,
            validator: zod_1.z.string(),
        }));
        // monday
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'monday',
            attributeUUID: '464e9cb1-ea4c-43e1-a46c-1c46e445c732',
            comment: 'Boolean value for the day Monday.'
        }));
        // tuesday
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'tuesday',
            attributeUUID: 'c5a27bd7-70c5-4e57-b15f-f15992abeaf2',
            comment: 'Boolean value for the day Tuesday.'
        }));
        // wednesday
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'wednesday',
            attributeUUID: '2f07343d-e530-419f-b25b-afa7ae0b3ece',
            comment: 'Boolean value for the day wWdnesday.'
        }));
        // thursday
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'thursday',
            attributeUUID: '81def366-cb73-4c76-a19e-8b1edec228fd',
            comment: 'Boolean value for the day Thursday.'
        }));
        // friday
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'friday',
            attributeUUID: 'c954319e-63b6-48dd-90e5-ca1659ddd52d',
            comment: 'Boolean value for the day Friday.'
        }));
        // saturday
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'saturday',
            attributeUUID: '96e4fe2f-e849-4812-ab37-af49ddaf2b77',
            comment: 'Boolean value for the day Saturday.'
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : '5dbec9f3-f5ef-4cd9-9b0e-cbf7241aa21d',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '79891697-975e-446d-af62-e4ee5978fa04',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (CartServiceDayOfWeekEntityModel.INSTANCE);
    }
}
exports.CartServiceDayOfWeekEntityModel = CartServiceDayOfWeekEntityModel;
CartServiceDayOfWeekEntityModel.INSTANCE = new CartServiceDayOfWeekEntityModel();
//# sourceMappingURL=CartServiceDayOfWeekEntityModel.js.map