"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const persistable_1 = require("../../classes/persistable");
const SettingOrganization_1 = require("../../classes/persistable/SettingOrganization");
const SettingWorkspace_1 = require("../../classes/persistable/SettingWorkspace");
const SettingNotification_1 = require("../../classes/persistable/SettingNotification");
const TypeReference_1 = require("../../../data/entity/TypeReference");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.Setting';
class SettingEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('6892462b-8dc1-492a-b915-363de0601ddc')
            .setDataModelName('Setting')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('8af722d2-775a-4144-af27-71a2913e3c2b');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('a04caab9-ed61-4d4f-a024-9dba5727ee84'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('44eecdff-59d8-4aca-b7b1-06ef1147e1d6'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('9d9e575e-b7ae-4dba-acf3-ad6ff8fc3833'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('de026109-c3df-4f53-8762-c5d6d55a87c5'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('11658358-1f88-4e65-bea9-e654fc05fc75'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('d1099ad7-e8bb-40ae-a227-a42fef0b153f'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'c15aa25d-197f-4513-b7f8-561408a424cf'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('a8860f9d-4618-4c19-bd56-8a007353f61c'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('b92d4466-82ef-4a07-860c-7c1ad91196ed'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // organization
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: '8fa03a0f-d20b-446d-af53-9fa4e4470352',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace
        }));
        // isDefault
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isDefault',
            attributeUUID: '9f82f1a8-5e11-496c-970f-62594d231d66',
            comment: 'is Default.',
            isMongoRequired: false
        }));
        // displayedName
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'displayedName',
            attributeUUID: 'a1b2c3d4-e5f6-7890-abcd-ef1234567890',
            comment: 'The Display name for the organization or group.',
            isMongoRequired: false,
            isMongoIndexed: false,
        }));
        // logo
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'logo',
            attributeUUID: 'a1b2c3d4-e5f6-7890-abcd-ef1234567890',
            comment: 'The HTML URL for the Organization logo.',
            isMongoRequired: false,
            isMongoIndexed: false,
        }));
        // logoWidth
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableInteger2({
            attributeName: 'logoWidth',
            attributeUUID: '12345678-90ab-cdef-1234-567890abcdef',
            comment: 'The width of the Organization logo in pixels.',
        }));
        // logoHeight
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableInteger2({
            attributeName: 'logoHeight',
            attributeUUID: 'abcdef12-3456-7890-abcd-ef1234567890',
            comment: 'The height of the Organization logo in pixels.',
        }));
        // typography
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'typography',
            attributeUUID: 'c1ace5b5-7342-49c7-9e3c-936d7e8c9f26',
            comment: 'Setting for typography, such as font family and size.',
            isMongoRequired: false,
            variableType: new TypeReference_1.TypeReference({
                typeName: 'Object'
            })
        }));
        // settingOrganization
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'settingOrganization',
            attributeUUID: '249d934d-ff48-4c31-93b9-fb01342eb20d',
            comment: 'Organization setting',
            foreignRefEntityNamespace: SettingOrganization_1.SettingOrganization.metaDataForSettingOrganization.namespace,
            isMongoRequired: false
        }));
        // settingWorkspace
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'settingWorkspace',
            attributeUUID: 'b3ba8f9b-eaad-4ea7-a207-63bb66b73a45',
            comment: 'Workspace setting.',
            foreignRefEntityNamespace: SettingWorkspace_1.SettingWorkspace.metaDataForSettingWorkspace.namespace,
            isMongoRequired: false
        }));
        // settingNotification
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'settingNotification',
            attributeUUID: '3d924f23-7601-4bfc-8c03-7418fe651c1a',
            comment: 'Notification setting',
            foreignRefEntityNamespace: SettingNotification_1.SettingNotification.metaDataForSettingNotification.namespace,
            isMongoRequired: false
        }));
        // add other setting
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : '7748b804-4de1-4326-9884-ee94a90b13de',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '44517112-6dd3-4a5c-a55b-9940bc03a6e7',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (SettingEntityModel.INSTANCE);
    }
}
exports.SettingEntityModel = SettingEntityModel;
SettingEntityModel.INSTANCE = new SettingEntityModel();
//# sourceMappingURL=SettingEntityModel.js.map