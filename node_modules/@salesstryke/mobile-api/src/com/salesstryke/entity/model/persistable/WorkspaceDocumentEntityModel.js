"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceDocumentEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const TypeReference_1 = require("../../../data/entity/TypeReference");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const NamespaceUtils_1 = require("../../../utils/NamespaceUtils");
const Organization_1 = require("../../classes/persistable/Organization");
const Workspace_1 = require("../../classes/persistable/Workspace");
const WorkspaceDocumentAttribute_1 = require("../../classes/persistable/WorkspaceDocumentAttribute");
const ENTITY_CLASS_NAMESPACE = "com.salesstryke.entity.classes.persistable.WorkspaceDocument";
class WorkspaceDocumentEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        let simpleName_s = NamespaceUtils_1.NamespaceUtils.namespaceToSimpleName(ENTITY_CLASS_NAMESPACE);
        entityModel
            .setCrudCreateAuthorizationUUID('fc5cba51-9c84-4df6-b335-1178a78e2b08')
            .setDataModelName(simpleName_s)
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIncludeInHistory(true)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('6f4b9bba-312f-46f8-88fb-bf05d922778d');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('bd4e3b4e-ed06-432a-8a33-e62d0ec01bbf'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('40b6cdc5-cfbf-4126-bb97-65e7f0ee3a1b'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('0c702a32-d362-4f3f-b772-c429f3ca10e6'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('3b80a6f2-ffaa-4cd9-b6a2-71ff7b4690ce'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('e94d7038-8b78-4091-8e0f-23e745014f71'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('5c94fd76-8154-46be-8c77-366ffc7c6df0'));
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate('dsrSyncDate', 'bb58b741-aea4-4508-8b77-65aa273966d6', // uuid
        'The date that the document was synced for the DSR date.'));
        // geoLatitude
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'geoLatitude',
            attributeUUID: '738d6cdc-2a97-4dae-8edd-dca1032d20e3',
            comment: 'The geo coordinate latitude.',
            isMongoRequired: false,
        }));
        // geoLongitude
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'geoLongitude',
            attributeUUID: 'fc0e99c3-f170-4f25-9bd4-6bf2f40a3d48',
            comment: 'The geo coordinate longitude.',
            isMongoRequired: false,
        }));
        // geoReverseJson
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'geoReverseJson',
            attributeUUID: '38725765-59e0-4c73-a8f7-230192bfb85e',
            comment: 'The reverse geo code lookup.',
            isMongoRequired: false,
        }));
        // geoServiceAddressLookupJson
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'geoServiceAddressLookupJson',
            attributeUUID: 'de8144d4-fd66-4ddb-aba9-4eb217ff9cf2',
            comment: 'The address JSON that is return when using an address such as Google Map, MS Azure, etc.',
            isMongoRequired: false,
        }));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('0c24e573-6cae-4286-9b78-3fab19b2eb10'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'da32af22-dd11-4c40-9bb7-d372819cad87'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('f4ce08b8-f869-4eae-bdb0-136f548fa4ca'));
        // removeFromRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRemoveFromRelationship('bc4e2a53-41ae-4572-84e5-fde3d5e198de'));
        // grandTotal
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableCurrency('grandTotal', '638f58a3-232a-410d-a4c9-00d474cbba54', 'The grand total cost for the document.'));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'cc094099-75ed-4b3e-a3cd-8656d42fdae3', // uuid
            comment: 'The name of the document'
        }));
        /**
         * organization oid
         * The Tenant Organization this workspace belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            attributeUUID: 'ae70c247-be7f-4de0-b8a2-631cb0b22998',
            comment: 'The tenant Organization.'
        }));
        // pandaDocDetailJson
        // Type use to be PersistableJsonString
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'pandaDocDetailJson',
            attributeUUID: 'dbc94bea-7272-11ed-8647-07e5ae2c5fb6', // uuid
            comment: 'A JSON text that represents the PandaDoc Detail returned from the PandaDoc API.',
            isMongoRequired: false,
            variableType: new TypeReference_1.TypeReference({
                typeName: 'Object'
            })
        }));
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'overwritePandaDocDetailJson',
            attributeUUID: '974412d9-4814-4dc7-9945-a5628de61b9b',
            comment: 'A overwrite pandaDocDetailJson',
            isMongoRequired: false,
            variableType: new TypeReference_1.TypeReference({
                typeName: 'Object'
            })
        }));
        // pandaDocID
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'pandaDocID',
            attributeUUID: 'a5c44d56-21ac-44e0-bed0-72b621a718ea', // uuid
            comment: 'The PandaDocument id',
            isMongoRequired: false,
        }));
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'softPakTaxBodyCode',
            attributeUUID: '81b64ae3-d009-4096-bb46-7c3112bd1d30',
            comment: 'SoftPak tax body code for the document.',
            isMongoRequired: false,
            isMongoIndexed: false,
        }));
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate('pandaDocModifiedDate', '4c9c9407-d15d-4509-91d9-f1b6ce45c004', // uuid
        'The PandaDoc modified date.'));
        // pandaDocStatus
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableInteger('pandaDocStatus', '1447ca12-be99-449d-98a9-efc9b810305e', // uuid
        'The PandaDocument status, DRAFT = 0, COMPLETED = 2, VIEWED = 5, WAITINGPAY = 9, PAID = 10, VOIDED = 11, DECLINED = 12').setMongoIsRequired(false));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType('8ed9422c-a8ce-48d0-971c-2ea3c53f9480'));
        // routingSoftwareSyncStatus
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableInteger2({
            attributeName: 'routingSoftwareSyncStatus',
            attributeUUID: '05b4d425-c248-4ad0-bff5-7afb4e75abf5', // uuid
            comment: 'The routingSoftwareSyncStatus status',
            includeInHistory: true,
        }).setMongoIsRequired(false));
        // routingSoftwareCustomerId
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'routingSoftwareCustomerId',
            attributeUUID: '1fdc57cf-7618-46a8-8690-6759a7296f39',
            comment: 'The customer id value that is returned from a successful post to the routing software customer import API. .',
            isMongoRequired: false,
        }));
        /**
         * Workspace oid
         * The workspace this template belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            foreignRefEntityNamespace: Workspace_1.Workspace.metaDataForWorkspace.namespace,
            attributeUUID: '5f4c8011-e935-4b99-9d43-978d1cef17b9',
            comment: 'The workspace this document belongs to.'
        }));
        /**
         * WorkspaceDocumentAttribute
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoVirtualArray("workspaceDocumentAttributes", "workspaceDocumentAttribute", WorkspaceDocumentAttribute_1.WorkspaceDocumentAttribute.metaDataForWorkspaceDocumentAttribute.namespace, //WorkspaceDocument.metaDataForWorkspaceDocument.namespace, //WorkspaceTemplate.metaDataForWorkspaceTemplate.namespace,
        WorkspaceDocumentAttribute_1.WorkspaceDocumentAttribute.metaDataForWorkspaceDocumentAttribute.mongoAttributes.workspaceDocument, //WorkspaceDocument.metaDataForWorkspaceDocument.mongoAttributes.workspace,//WorkspaceTemplate.metaDataForWorkspaceTemplate.mongoAttributes.workspace,
        '', // uuid
        'The workspace document attributes.', 1));
        ``;
    }
    static getInstance() {
        return (WorkspaceDocumentEntityModel.INSTANCE);
    }
}
exports.WorkspaceDocumentEntityModel = WorkspaceDocumentEntityModel;
WorkspaceDocumentEntityModel.INSTANCE = new WorkspaceDocumentEntityModel();
//# sourceMappingURL=WorkspaceDocumentEntityModel.js.map