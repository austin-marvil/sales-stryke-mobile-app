"use strict";
/*
    private jwtToken: string = "";
    private login: string = "";
    private password: string = "";
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityRoleEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const NamespaceUtils_1 = require("../../../utils/NamespaceUtils");
const Organization_1 = require("../../classes/persistable/Organization");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = "com.salesstryke.entity.classes.persistable.SecurityRole";
class SecurityRoleEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        let simpleName_s = NamespaceUtils_1.NamespaceUtils.namespaceToSimpleName(ENTITY_CLASS_NAMESPACE);
        entityModel
            .setCrudCreateAuthorizationUUID("b93db7fd-8519-4137-af54-d5ddc16918df")
            .setDataModelName(simpleName_s)
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID("ef44c380-38f2-47e5-b720-31a7a66543b9");
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('ac9d9352-a26c-4b4a-b453-48a591c81474'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState("9deb458f-4203-4366-b770-fa19dec72503"));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem("1d73ee4f-3d4f-4514-a98f-2a17d08ac7e7"));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey("63c77dfb-33fb-4067-824c-4c0a9660fea7"));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate("01806662-bac7-4534-a8dc-94a4f7f99172"));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId("289bb8ad-f21d-4505-9ee6-199c6069dd09"));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, "503374db-2c2d-4cad-872b-cf78250d220f"));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate("dc835043-e425-4058-9054-d728c51fd01c"));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType('1b342384-ec15-4cbe-a2bf-53fc203b0769'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship("9b848cfe-5bfc-4bad-b61e-4d6429ea242e"));
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRefArray({
            attributeName: 'securityPermissions',
            attributeNameSingular: 'securityPermission',
            attributeUUID: '62fd2fe4-de50-41b8-8aa4-fe235e8dfda9',
            comment: "MongoRefArray of SecurityPermission. Use .addSecurityPermission(securityPermission, PersistenceType.ATTACH); to add a MongoRefArray item. Use .removeSecurityPermission(securityPermission, PersistenceType.DETACH); to remove a MongoRefArray item.",
            foreignRefEntityNamespace: persistable_1.SecurityPermission.metaDataForSecurityPermission.namespace
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: "name",
            attributeUUID: "2b290c8c-6f04-4ea0-9e80-cb6171fafe90", // uuid
            comment: "The name of the role."
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: "description",
            attributeUUID: "7303fb4d-6e1e-45eb-b750-7b2cca610711", // uuid
            comment: "The description of the role."
        }));
        /**
         * organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            attributeUUID: '66db3d0d-bd2d-486d-a295-b7b9f2ef1ce3',
            comment: 'The Organization.',
            // isMongoRequired: false,
            // isMongoIndexed: false,
        }));
    }
    static getInstance() {
        return (SecurityRoleEntityModel.INSTANCE);
    }
}
exports.SecurityRoleEntityModel = SecurityRoleEntityModel;
SecurityRoleEntityModel.INSTANCE = new SecurityRoleEntityModel();
//# sourceMappingURL=SecurityRoleEntityModel.js.map