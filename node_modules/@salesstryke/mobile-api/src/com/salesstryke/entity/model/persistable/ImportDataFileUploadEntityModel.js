"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportDataFileUploadEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const ImportDataMap_1 = require("../../classes/persistable/ImportDataMap");
const Organization_1 = require("../../classes/persistable/Organization");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ImportDataFileUpload';
class ImportDataFileUploadEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('ce7999d9-abc7-4cc4-8111-c33e2e567bc1')
            .setDataModelName('ImportDataFileUpload')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('458c8ffa-e21c-4850-b2fb-9fb3ab7d7f25');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('0396f1be-166b-406f-a13a-b9bcc267fdb0'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('8d291d26-74be-4dc0-abbf-3825db87e112'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('7b27ed85-40c9-4ce0-b28c-7d030bd3db3e'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('f0346c44-3d5b-4039-902b-a136dbe2844d'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('17c776f6-3989-4b36-a071-b786c8bcd13e'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('d7351538-92a6-4523-b8e2-c062b5bbc608'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '73e3bcbc-7ca9-4ef2-b6d4-cbd91478cd76'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('9a1fa390-e9c4-4231-ab0e-4550b224181f'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('41386d63-4aa7-4b9b-84b0-eaf5ac349243'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // // boolean
        // this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableBoolean2({
        //     attributeName   : 'aBoolean',
        //     attributeUUID   : 'ad23a32e-d95b-44ac-96c1-aa09b82bbf86',
        //     comment         : 'The name of a boolean value.'
        // }));
        // // number
        // this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableNumber2({
        //     attributeName   : 'aNumber',
        //     attributeUUID   : 'd4d88768-8400-48ca-a164-ebdaa368ea15',
        //     comment         : 'The name of a number value.'
        // }));
        // fileName
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'fileName',
            attributeUUID: 'b4e83d45-f0c3-4a9c-af27-4805fc980e49',
            comment: 'The import file name.',
            validator: zod_1.z.string()
        }));
        // ImportDataMap OID
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'importDataMap',
            attributeUUID: 'da8cb9db-8f0b-445e-9351-e3ee62433d79',
            comment: 'The ImportDataMap for the data.',
            foreignRefEntityNamespace: ImportDataMap_1.ImportDataMap.metaDataForImportDataMap.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: 'e2f035e9-2da7-47d7-88ea-1d627f79da8e',
            comment: 'The organization.',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            isMongoIndexed: true,
            isMongoRequired: true,
            validator: zod_1.z.string()
        }));
        // PresignedUrl
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'presignedUrl',
            attributeUUID: 'e2f035e9-2da7-47d7-88ea-1d627f79da8e',
            comment: 'The pre signed url for s3.',
            validator: zod_1.z.string()
        }));
        // s3BucketName
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 's3BucketName',
            attributeUUID: 'e2f035e9-2da7-47d7-88ea-1d627f79da8e',
            comment: 'The S3 Bucket name.',
            validator: zod_1.z.string()
        }));
        // name (original file name)
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '5f6ce181-cb24-4b76-b842-d3a3acdb98ee',
            comment: 'The original file name.',
            validator: zod_1.z.string()
        }));
        // importStatus (objectId, TBD)
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'importStatus',
            attributeUUID: 'e6ca5920-6075-4398-8c6d-ae27f0f0ef7d',
            comment: 'The import status.'
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '1610d52c-e5a3-4b79-9471-fda705af39f6',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (ImportDataFileUploadEntityModel.INSTANCE);
    }
}
exports.ImportDataFileUploadEntityModel = ImportDataFileUploadEntityModel;
ImportDataFileUploadEntityModel.INSTANCE = new ImportDataFileUploadEntityModel();
//# sourceMappingURL=ImportDataFileUploadEntityModel.js.map