"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingSoftwareTypeEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const persistable_1 = require("../../classes/persistable");
const zod_1 = require("zod");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.RoutingSoftwareType';
class RoutingSoftwareTypeEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('fd2cf8e0-385f-4e70-8a2a-b3a0cd316d60')
            .setDataModelName('RoutingSoftwareType')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('2bb05f4b-e35f-4d38-8c6d-add9e25d4f96');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('5ef24a7d-613f-4f35-a9e7-301d2bc018f6'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('e5889267-ac24-4909-b57d-31f3d323aa7d'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('a9a9ad4d-fb26-4270-834f-067ef844e8ce'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('7c565434-bfcd-4ec4-9475-6b946e85ccd8'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('9a0fcbdc-c17b-47d2-a500-cb1b5268e7e9'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('7ac0fe0a-30eb-4a43-97e4-ea881dd06af3'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '3e15a080-0800-48e9-80f9-7e8e60df4fe2'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('f7a53974-3814-4528-bb18-00d5e518fa23'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('717e9b88-f3ed-4c83-995d-2811ef5b8824'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: '6742bf53-4c79-40a9-b94d-328509fe8e7f',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            validator: zod_1.z.string(),
            isMongoIndexed: true,
            isMongoRequired: false
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '9dbae984-3a08-431a-9791-ebec256c9f04',
            comment: 'The name of routing software type.'
        }));
    }
    static getInstance() {
        return (RoutingSoftwareTypeEntityModel.INSTANCE);
    }
}
exports.RoutingSoftwareTypeEntityModel = RoutingSoftwareTypeEntityModel;
RoutingSoftwareTypeEntityModel.INSTANCE = new RoutingSoftwareTypeEntityModel();
//# sourceMappingURL=RoutingSoftwareTypeEntityModel.js.map