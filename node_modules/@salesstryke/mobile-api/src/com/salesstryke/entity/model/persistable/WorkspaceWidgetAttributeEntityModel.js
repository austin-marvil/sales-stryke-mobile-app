"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceWidgetAttributeEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const NamespaceUtils_1 = require("../../../utils/NamespaceUtils");
const Organization_1 = require("../../classes/persistable/Organization");
const WidgetAttributeType_1 = require("../../classes/persistable/WidgetAttributeType");
const WorkspaceWidget_1 = require("../../classes/persistable/WorkspaceWidget");
const ENTITY_CLASS_NAMESPACE = "com.salesstryke.entity.classes.persistable.WorkspaceWidgetAttribute";
class WorkspaceWidgetAttributeEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        let simpleName_s = NamespaceUtils_1.NamespaceUtils.namespaceToSimpleName(ENTITY_CLASS_NAMESPACE);
        entityModel
            .setCrudCreateAuthorizationUUID('33b42fd2-4a01-4183-894e-382d90944c38')
            .setDataModelName(simpleName_s)
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('467d5b2a-837d-414e-84c6-da1eeaf4ff20');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('d54b8fa3-0525-47c7-84f7-e430543ca677'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('58263094-1e1c-4e53-86ef-5d3c54d720b6'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('ed540ef3-e085-41c1-aa02-fbc8b15a9fa4'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('5c76b835-f2ed-497e-a791-e0fa578b3821'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('f40bd98e-d7c7-4ef2-9143-5c539316f946'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('00b400f6-098d-403c-a2c7-7f66947bfafa'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('9af833d1-3af2-4b06-9544-8146e0cd6575'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '4e5ae111-6278-4486-a2c6-559be7870e05'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('309dc38a-8a1e-4556-adca-8faf6d73fba0'));
        // removeFromRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRemoveFromRelationship('bed1d1c3-322e-45b9-88d7-4c661262ea1f'));
        // defaultValue
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'defaultValue',
            attributeUUID: 'd1ed0690-af79-4d3d-804e-4bb5dd96b84c', // uuid
            comment: 'The default value of the attribute.',
            isMongoRequired: false,
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '3fe66d2d-b232-4990-94fb-10a11dbc9d99', // uuid
            comment: 'The description of the widget.'
        }));
        // isActive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isActive',
            attributeUUID: '92cab43c-baef-4772-968b-36a66f81d1f3',
            comment: 'Identifies if the widget is active.'
        }));
        // label
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'label',
            attributeUUID: '6fb8cbc3-3a07-4041-aa1f-e47a9ba163d3', // uuid
            comment: 'The label for the attribute.'
        }));
        // labelI18nKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'labelI18nKey',
            attributeUUID: 'a798e1f4-59a1-4948-b8ff-29880facc221', // uuid
            comment: 'The label I18N key for the attribute.',
            isMongoRequired: false,
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'c4fa5237-267b-4790-83d6-d139904375a7', // uuid
            comment: 'The widget name.'
        }));
        // pandaDocKeyName
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'pandaDocKeyName',
            attributeUUID: 'c6c6bf17-eb7b-464d-9ea5-e97e16277e61', // uuid
            comment: 'The pandaDocKeyName attribute name.'
        }));
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'regexValidation',
            attributeUUID: '36da3216-9978-4a26-a078-0a548469330c', // uuid
            comment: 'An regex for validation of a value of the attribute.',
            isMongoRequired: false,
        }));
        // regexValidationErrorMessage
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'regexValidationErrorMessage',
            attributeUUID: '15ab8e14-ece6-4df1-adef-3b3c33d5a08b', // uuid
            comment: 'An error message for validation of a value of the attribute.',
            isMongoRequired: false,
        }));
        // regexValidationErrorMessageI18nKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'regexValidationErrorMessageI18nKey',
            attributeUUID: '9c71b579-909c-47fe-901e-b1969f90eba0', // uuid
            comment: 'An error message for validation of a value of the attribute.',
            isMongoRequired: false,
        }));
        // salesStrykeKeyName
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'salesStrykeKeyName',
            attributeUUID: '4321de71-0b85-46e1-be61-7eefbf5ce157', // uuid
            comment: 'The salesStrykeKeyName attribute name.'
        }));
        /**
         * WorkspaceWidget oid
         * The workspace this template belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: "workspaceWidget",
            foreignRefEntityNamespace: WorkspaceWidget_1.WorkspaceWidget.metaDataForWorkspaceWidget.namespace,
            attributeUUID: 'd883860b-3e56-48e4-b03a-1fc1370b6082',
            comment: "The workspace widget this view belongs to."
        }));
        /**
         * WidgetAttributeType oid
         * The Widget this view belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: "widgetAttributeType",
            foreignRefEntityNamespace: WidgetAttributeType_1.WidgetAttributeType.metaDataForWidgetAttributeType.namespace,
            attributeUUID: '5e3ceba3-e83b-42f4-a82b-95f07afe612f',
            comment: "The WidgetAttributeType this attribute belongs to."
        }));
        /**
         * organization oid
         * The Tenant Organization this workspace belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            attributeUUID: 'c54f17f8-edf2-4726-94e3-d40ec1cfa874',
            comment: 'The tenant Organization.'
        }));
    }
    static getInstance() {
        return (WorkspaceWidgetAttributeEntityModel.INSTANCE);
    }
}
exports.WorkspaceWidgetAttributeEntityModel = WorkspaceWidgetAttributeEntityModel;
WorkspaceWidgetAttributeEntityModel.INSTANCE = new WorkspaceWidgetAttributeEntityModel();
//# sourceMappingURL=WorkspaceWidgetAttributeEntityModel.js.map