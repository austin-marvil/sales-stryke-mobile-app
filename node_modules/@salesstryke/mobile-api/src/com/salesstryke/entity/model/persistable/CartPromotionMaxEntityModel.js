"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartPromotionMaxEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.CartPromotionMax';
class CartPromotionMaxEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('7cfe80de-e4ee-4ba8-9829-da7344f6e02f')
            .setDataModelName('CartPromotionMax')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('35b85c5b-ad2f-4771-bbdb-bd1c6cdc4714');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('a73cda5b-9f43-4537-a125-633704422212'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('938f22fd-d153-45de-af20-14c464144276'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('fab1c26b-b3cd-441e-a4fc-c23ee9d398fd'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('7a4a8a2e-ac32-472d-9747-d4252041664d'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('89be847d-0b37-46d8-a3b6-585d49e69a0b'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('1b124ee9-2085-4c1f-8c7c-1f587fe666fc'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '1d9c3c11-d146-46b3-89de-b50b2f39c38e'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('721f6498-ad94-400b-837c-9cef90daa93c'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('8a1438a9-0302-455f-87fb-f80da8d84434'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // cartItem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'cartItem',
            attributeUUID: 'c996784c-693d-42ca-bd19-66f0e7a198dd',
            comment: 'The cart item.',
            foreignRefEntityNamespace: persistable_1.CartItem.metaDataForCartItem.namespace,
            validator: zod_1.z.string(),
        }));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeStartDate',
            attributeUUID: 'b285e126-65d3-441a-86fc-905985188b5e',
            comment: 'Active start date.',
            validator: zod_1.z.date(),
        }));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeEndDate',
            attributeUUID: 'c0b1ed21-46a1-4aa2-95bf-982a82b055b7',
            comment: 'Active end date.',
            validator: zod_1.z.date(),
        }));
        // amountOff
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'amountOff',
            attributeUUID: 'b5d99b53-7d2c-472c-bfc2-a2818edb2232',
            comment: 'Flat amount off',
            isMongoRequired: false,
            validator: zod_1.z.number(),
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'aee8bad8-cb5a-45cf-8014-7395b905abf21',
            comment: 'The name for this promotion.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '36fb5a92-cc65-4b72-a214-9e059128f6c5',
            comment: 'The description for this promotion.',
            validator: zod_1.z.string().max(5000, "Description is too long"),
        }));
        // percentageOff
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'percentageOff',
            attributeUUID: '39e09a32-d0c5-4a20-8762-b7bdbe983cf1',
            comment: 'Promotion percentage off.',
            isMongoRequired: false,
            validator: zod_1.z.number(),
        }));
        // promoPrice
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'promoPrice',
            attributeUUID: 'c88aefbe-1883-4e02-9489-ddbead49224a',
            comment: 'Promotion Price.',
            isMongoRequired: false,
            validator: zod_1.z.number(),
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: 'edf54822-b380-4291-8abf-93c069a98bf0',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            validator: zod_1.z.string(),
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '6055866a-8eb8-4672-a56f-c804738766c5',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (CartPromotionMaxEntityModel.INSTANCE);
    }
}
exports.CartPromotionMaxEntityModel = CartPromotionMaxEntityModel;
CartPromotionMaxEntityModel.INSTANCE = new CartPromotionMaxEntityModel();
//# sourceMappingURL=CartPromotionMaxEntityModel.js.map