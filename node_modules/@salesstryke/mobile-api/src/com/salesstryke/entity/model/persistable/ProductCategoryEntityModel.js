"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductCategoryEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ProductCategory';
class ProductCategoryEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('7e46098b-0e7f-4cca-8c7f-0e5e591a15e0')
            .setDataModelName('ProductCategory')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('44faf0cb-5b63-4b48-93a8-6c3df4aecc35');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('5cd3f4ba-bfaa-4517-8612-d45ed4de2756'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('460d4e1d-c6e6-4933-a69f-a8e70f8186b5'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('12eee6a2-c521-4857-acf4-7f741bbd202a'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('c2498dcb-00e6-4088-9099-acba539dd3ba'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('8c60649c-9658-4719-a2ca-06017edefd31'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('af0d3f7a-3592-4694-adab-70ff5eab987b'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'f418a19c-f07f-4ccf-a422-d1fd1f227970'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('82480ebb-63ca-4f5b-9a3c-2b25a104efcb'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('0cbe6618-7d7d-4793-a957-89ad59840ed8'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '12e9ca3c-d11a-4413-a3cb-36e93fc15441',
            comment: 'The name.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '47bf45d9-8629-4e81-bee9-10678d0520a8',
            comment: 'The description.',
            validator: zod_1.z.string().max(1000, 'Description is to long'),
        }));
        // parentId
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'parentId',
            attributeUUID: 'f56a2c98-a0c1-471a-b191-13f954d93f4e',
            comment: 'The parent category.',
            foreignRefEntityNamespace: persistable_1.ProductCategory.metaDataForProductCategory.namespace,
            isMongoIndexed: true,
            isMongoRequired: false
        }));
        // isActive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isActive',
            attributeUUID: '7aa42f63-e16a-468c-bf5c-066968d30909',
            comment: 'Is active.',
            isMongoRequired: false
        }));
        // label
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'label',
            attributeUUID: '17a0c986-f18e-4d0c-a1f2-1afa51d6ffca',
            comment: 'The label for this product category.',
            validator: zod_1.z.string(),
            isMongoRequired: false
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: '5ff41328-4648-4971-828d-8aeeb5a6cb63',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * Workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: 'a4ce049b-77bb-43ec-9912-072931f6c867',
            comment: 'The workspace.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : 'c22b4089-0a45-4c68-bde6-1be1a22670e6',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (ProductCategoryEntityModel.INSTANCE);
    }
}
exports.ProductCategoryEntityModel = ProductCategoryEntityModel;
ProductCategoryEntityModel.INSTANCE = new ProductCategoryEntityModel();
//# sourceMappingURL=ProductCategoryEntityModel.js.map