"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingIntegrationTypeEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.SettingIntegrationType';
class SettingIntegrationTypeEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('44528d04-760c-41d0-9453-47372da89583')
            .setDataModelName('SettingIntegrationType')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('03e7727e-2adb-455e-a25f-a7f9fe9cf658');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('ad4af5a5-f6a9-4fb9-9565-b648c0cc9870'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('2a6ba158-1491-4828-84ba-ad014845b3b8'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('db109757-5617-4dc2-aecc-f208c07223b4'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('9a5ee93e-0d4e-4c66-bbb8-4197b4c05575'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('a94e9896-f22e-4d83-9c2d-10ff5e77841e'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('b83707ef-4ba5-4bc2-b765-c4b9fe04ad55'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '1cc79c2e-97d5-4ef7-9c3f-6347ae340b23'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('15c771fa-b8c3-45b0-93c9-d0b578d02cc6'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('1e7a71c1-5c59-4794-8de8-eb90a4f12e0b'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '65ed5934-658d-4a17-9e19-868845883fca',
            comment: 'The name.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '8860064e-619e-4545-80d9-895dce605415',
            comment: 'The description.',
            validator: zod_1.z.string().max(1000, 'Description is too long'),
        }));
        /**
         * Organization
         */
        // this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
        //     attributeName             : 'organization',
        //     attributeUUID             : 'e34e01aa-04bd-4509-ad7f-bab7b79d231c',
        //     comment                   : 'The organization.',
        //     foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
        //     isMongoIndexed            : true,
        //     isMongoRequired           : false
        // }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : 'a9f8d101-a35b-41c5-b7ef-0b9a5e078918',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (SettingIntegrationTypeEntityModel.INSTANCE);
    }
}
exports.SettingIntegrationTypeEntityModel = SettingIntegrationTypeEntityModel;
SettingIntegrationTypeEntityModel.INSTANCE = new SettingIntegrationTypeEntityModel();
//# sourceMappingURL=SettingIntegrationTypeEntityModel.js.map