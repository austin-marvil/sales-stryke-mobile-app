"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CnsSegmentEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const Import_1 = require("../../../data/entity/Import");
const TypeReference_1 = require("../../../data/entity/TypeReference");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const CnsCampaignList_1 = require("../../classes/persistable/CnsCampaignList");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.CnsSegment';
class CnsSegmentEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('207521b1-66b6-4bcb-b0ef-4ceeae0bab46')
            .setDataModelName('CnsSegment')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('85d758fb-ac5b-457d-b72e-39a08fd05593')
            .addImport({
            import: new Import_1.Import({
                moduleSpecifier: 'react-querybuilder',
                namedBindings: [
                    new Import_1.NamedBinding({ propertyName: 'RuleGroupType' })
                ]
            })
        });
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('8e742293-989a-46e6-8428-530902d9139d'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('243f3918-e1df-40d4-9921-2e6b6678442d'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('ce29d8a6-ae3b-4f44-b5e4-28bc5c171155'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('6bd9a402-773c-4b19-bc12-20ba21a99241'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('2b6c1e4f-b5b8-45ce-a755-8a3385da2ca4'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('36700511-beeb-4e23-85f8-ea2f6778d38c'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'a19aeb8d-81fb-4eb4-a19a-c41c2ea65011'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('0d2e0cad-ec8e-408f-9017-14850439a41a'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('2ddc3098-d3cc-4289-8fc1-8c485ff654e4'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // json string
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'ruleGroup',
            attributeUUID: '68a00f2a-4bb3-490b-8c97-6267dca58578',
            comment: 'The rule group for react query.',
            variableType: new TypeReference_1.TypeReference({
                typeName: 'RuleGroupType'
            }),
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'f6733dd5-e7f6-4c7b-9232-a4f7c9447747',
            comment: 'The name of the CNS Campaign.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '6e218817-32b6-4336-bea7-08bf99f08275',
            comment: 'The description of the CNS Campaign.',
            validator: zod_1.z.string().max(5000, "Description is too long"),
        }));
        // cnsSegmentList
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'cnsSegmentList',
            attributeUUID: '4a843e2b-15f6-4ff0-85bb-dd27b77d4f8d',
            comment: 'CNS Segment created from campaign.',
            foreignRefEntityNamespace: CnsCampaignList_1.CnsCampaignList.metaDataForCnsCampaignList.namespace,
            isMongoRequired: false
        }));
        // awsData
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'awsData',
            attributeUUID: 'ffffdfe2-e2ce-4dc3-bdcb-018216caef29',
            comment: 'AWS Data, such as the id.',
            isMongoRequired: false,
            validator: zod_1.z.string(),
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : '65a6f1e6-0fb2-415d-8d95-42d0381a8ced',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '10207ef4-217a-4ee0-9aa1-66a572676842',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (CnsSegmentEntityModel.INSTANCE);
    }
}
exports.CnsSegmentEntityModel = CnsSegmentEntityModel;
CnsSegmentEntityModel.INSTANCE = new CnsSegmentEntityModel();
//# sourceMappingURL=CnsSegmentEntityModel.js.map