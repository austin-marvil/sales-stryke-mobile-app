"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SoftPakSizeAndChargeCodeEntityModel = void 0;
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const NamespaceUtils_1 = require("../../../utils/NamespaceUtils");
const Organization_1 = require("../../classes/persistable/Organization");
// No implementation
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.SoftPakSizeAndChargeCode';
class SoftPakSizeAndChargeCodeEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        let simpleName_s = NamespaceUtils_1.NamespaceUtils.namespaceToSimpleName(ENTITY_CLASS_NAMESPACE);
        entityModel
            .setCrudCreateAuthorizationUUID('3cd83d2c-be50-44e4-93ed-2877a506b791')
            .setDataModelName(simpleName_s)
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('c619ffb0-5f0c-49a1-9037-5a268a57bc53');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('96f89732-318e-48de-9d83-705fcf4f46dd'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('95c59ca0-25ec-4254-862e-cfa62ab09a05'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('ab3e76c9-f765-4841-ac22-31cf123463a3'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('0a320e5e-f02f-4bcc-b64a-1b23f59e6c6e'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('8d491782-d744-42ec-8bf9-f5aa1608f74c'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('39ba0410-0d80-4e2a-9b5a-beec06a0033e'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('b0b19d5a-2f6c-48d7-9769-99e4203989fe'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'fcb759d9-e59f-4c38-997c-e54dd41e4abb'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('79e7cd73-ffc6-467f-bbdd-4f6357c7f3bf'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType('dcc205e8-161d-4f6e-a1a2-87d573f3d84d'));
        // removeFromRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRemoveFromRelationship('153b4c73-5ab6-4ecf-8048-a7dbed6ef693'));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '1f044193-6d5c-4581-8aa3-b63ceec73081', // uuid
            comment: 'The charge code description.'
        }));
        /**
         * Organizationn
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            attributeUUID: 'b6a370e7-52c5-4152-ba74-c2dad5f2b74c',
            comment: 'The organization.'
        }));
        // serviceType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'serviceType',
            attributeUUID: 'a5aa1eec-952f-4d05-94d9-009f75bfa754', // uuid
            comment: 'The service type. Typically something like RS for Recycle Service, TS for Trash Service, etc.'
        }));
        // size
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'size',
            attributeUUID: '147b437a-5fc5-4e94-bd77-4618df53208f', // uuid
            comment: 'The service size. 40 can indicate 40yrd dumpster, 96 can indicate 96 gallon cart.'
        }));
    }
    static getInstance() {
        return (SoftPakSizeAndChargeCodeEntityModel.INSTANCE);
    }
}
exports.SoftPakSizeAndChargeCodeEntityModel = SoftPakSizeAndChargeCodeEntityModel;
SoftPakSizeAndChargeCodeEntityModel.INSTANCE = new SoftPakSizeAndChargeCodeEntityModel();
//# sourceMappingURL=SoftPakSizeAndChargeCodeEntityModel.js.map