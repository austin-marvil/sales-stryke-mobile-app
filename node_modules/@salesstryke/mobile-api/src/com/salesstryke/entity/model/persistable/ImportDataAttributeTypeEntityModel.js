"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportDataAttributeTypeEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ImportDataAttributeType';
class ImportDataAttributeTypeEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('2723e2af-008f-4594-b3dd-0daa9c0f29a9')
            .setDataModelName('ImportDataAttributeType')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('2e58e85e-7299-4e00-a980-b382452d00ef');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('635c9357-7cc2-478b-b1ba-6d210c3af3cf'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('19f010ad-6411-4793-a4ce-7097f51a1a55'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('62d6e35d-c8f7-497d-855e-3ff74ac6fbd2'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('da9a428a-30a5-4d04-b3b6-586a0d9c31cb'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('8551f9af-9fd5-44a4-abe9-e4d5e9b4390d'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('9381a338-26b0-4799-bd56-6a0ba3f7c2c2'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '9f08d609-2ee9-436e-b941-6a4dfec33c1f'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('7df7d170-859a-4d8b-8775-50f467aaa798'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('e961bef5-1931-4d9b-ae42-6fe57fff1da1'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: '74ffea95-a50f-4470-800f-bb2dc4b0409b' }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: 'da56301f-91b5-4e13-845d-292a6b465198',
            comment: 'The description of the ImportDataMapType.',
            validator: zod_1.z.string().max(5000, "Description is too long"),
        }));
        // isActive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isActive',
            attributeUUID: 'af7ee183-5994-4b01-bd17-b0ef053c1d6c',
            comment: 'Is the type active.'
        }));
        // isIndexed
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isIndexed',
            attributeUUID: 'd81bf0f0-d99c-11ee-a3cb-325096b39f47',
            comment: 'The the Attribute in ImportData indexed in MongoDB.'
        }));
        // isReserved
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isReserved',
            attributeUUID: 'd81bf3c0-d99c-11ee-a649-325096b39f47',
            comment: 'The the Attribute in ImportData reserved for internal usage only?'
        }));
        // importDataAttributeName
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'importDataAttributeName',
            attributeUUID: 'd81bf4ec-d99c-11ee-aadf-325096b39f47',
            comment: 'The value for an attribute in ImportData, such as stringIndexedVar1.'
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'd81bf4ec-d99c-11ee-aadf-325096b39f47',
            comment: 'The name of the type.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
    }
    static getInstance() {
        return (ImportDataAttributeTypeEntityModel.INSTANCE);
    }
}
exports.ImportDataAttributeTypeEntityModel = ImportDataAttributeTypeEntityModel;
ImportDataAttributeTypeEntityModel.INSTANCE = new ImportDataAttributeTypeEntityModel();
//# sourceMappingURL=ImportDataAttributeTypeEntityModel.js.map