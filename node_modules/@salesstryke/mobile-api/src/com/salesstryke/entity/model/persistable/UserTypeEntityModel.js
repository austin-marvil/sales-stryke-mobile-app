"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserTypeEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const ENTITY_CLASS_NAMESPACE = "com.salesstryke.entity.classes.persistable.UserType";
class UserTypeEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        //this.setAddPersistableAttributes(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID("597d8cb6-8cc1-4e19-afcc-dadeab81a1cb")
            .setCrudOverWriteSourceCode(false)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setDataModelName("UserType")
            .setIsGraphUpdateable(true)
            .setUUID("c8f5a497-db78-4bbc-b470-41ec7c43671b");
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('91f49403-141f-4678-bed0-7b0480b2daec'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState("8ec6ad60-b365-4471-9690-a3da46a087da"));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem("608f5b31-1e8b-4c9c-a495-2797ddb04e74"));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey("aca89c12-4b2d-4705-bf78-1f1b59bec5a4"));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate("b0dd8c00-9b16-4751-a159-3b49dd78a7f8"));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId("f0cb0374-8cae-4fb2-a4a8-30cc54ced7ec"));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, "8dd94937-6223-4b58-9c2a-49e73f1312fa"));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate("c9d19154-8c69-4aeb-a017-9d14e5958a72"));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: "description",
            attributeUUID: "c12ef2e8-00cd-4cbf-b730-d694e982d269",
            comment: "The description for the user type.",
            validator: zod_1.z.string().max(5000, 'Description is too long')
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: "name",
            attributeUUID: "4fae865a-bc84-455c-9600-312a065b9097",
            comment: "The name of the user type.",
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(/^[a-zA-Z\s]+$/, "Name must only contain alphabets and spaces")
        }));
    }
    static getInstance() {
        return (UserTypeEntityModel.INSTANCE);
    }
}
exports.UserTypeEntityModel = UserTypeEntityModel;
UserTypeEntityModel.INSTANCE = new UserTypeEntityModel();
//# sourceMappingURL=UserTypeEntityModel.js.map