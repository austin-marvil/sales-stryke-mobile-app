"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductCategoryImageEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ProductCategoryImage';
class ProductCategoryImageEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('2cbee0ef-111f-45f4-8c75-9f6caf1765da')
            .setDataModelName('ProductCategoryImage')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('f4e5e708-8980-448b-a346-8cf8bb88e44b');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('aa74db24-eca2-4819-a0de-21107acd8497'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('3cb94cb1-8de4-47d3-9291-034a3b0d17af'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('abeadc79-645a-4fa7-b585-3c563d99aa4b'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('bbb6dfb8-5fb1-4677-a7e0-fb165ec82409'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('2d47a7ef-e3b0-4e75-975e-f4baf6c0562f'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('c0d0ecc8-de8c-4865-a1d1-338a58802c46'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '21e78623-8c37-42c7-bff9-6c4171a94563'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('540ee72c-6e0e-44e0-9dd8-792a8345c72d'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('5c4097db-a466-4257-8a55-b6b2a75d3dff'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeStartDate',
            attributeUUID: 'af9fa43e-5042-4d5d-a3c7-8718ec969c0a',
            comment: 'Active start date.'
        }));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeEndDate',
            attributeUUID: '96c80f7f-4d3d-4a39-9e9c-9ea6a5cd7b17',
            comment: 'Active end date.'
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '302cd318-a131-43fb-bf7b-cc345d9b4fef',
            comment: 'The name.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '402d99ff-4972-4832-bcc3-56c06e13ab91',
            comment: 'The description.',
            validator: zod_1.z.string().max(5000, 'Description is too long')
        }));
        // imagePath
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'imagePath',
            attributeUUID: '23c47bd3-98ff-48eb-8b7a-d33e59e7c40b',
            comment: 'The image path.',
            validator: zod_1.z.string()
        }));
        // productCategory
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'productCategory',
            attributeUUID: 'bc06f57a-b67a-4155-980e-deac451ccb17',
            comment: 'The product category.',
            foreignRefEntityNamespace: persistable_1.ProductCategory.metaDataForProductCategory.namespace,
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: '631bf166-0651-4d97-80d4-7ac15bc21b31',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            validator: zod_1.z.string(),
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * Workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: '7e51d8fa-c928-4a71-b674-9c1e0d354f12',
            comment: 'The workspace.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '1fc28e38-aadb-4742-ab47-8d578bfffedc',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (ProductCategoryImageEntityModel.INSTANCE);
    }
}
exports.ProductCategoryImageEntityModel = ProductCategoryImageEntityModel;
ProductCategoryImageEntityModel.INSTANCE = new ProductCategoryImageEntityModel();
//# sourceMappingURL=ProductCategoryImageEntityModel.js.map