"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingIntegrationEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const Organization_1 = require("../../classes/persistable/Organization");
const SettingIntegrationType_1 = require("../../classes/persistable/SettingIntegrationType");
const SettingToken_1 = require("../../classes/persistable/SettingToken");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.SettingIntegration';
class SettingIntegrationEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('78ba7810-f8d6-493b-8111-942c012cc5a8')
            .setDataModelName('SettingIntegration')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('508e5265-9224-4faa-abae-34fe0577952f');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('eb36b9f3-803f-4425-a63e-d287ccfc0aa3'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('349c3201-9595-4282-be8c-643cee24b540'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('af989e3c-2534-4058-9804-84115658868f'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('21e6cc5a-c9e1-49c3-816f-100301a870c5'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('f9736fe6-f575-40a9-b797-94767726b9c2'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('4b9ade3e-9654-4921-a6c2-21aebcb65fc3'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '37e6e9b7-ab4f-426f-a60a-aa7d93313516'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('476ea64f-a54a-455c-9cd4-dbb84877017e'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('73647a79-a79e-48f2-893f-f3955e892d9b'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // // name
        // this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableString2({
        //     attributeName   : 'name',
        //     attributeUUID   : '27d40bb2-7950-4695-9034-a3db23934eca',
        //     comment         : 'The name of the integration.',
        // }));
        // integrationVersion
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'integrationVersion',
            attributeUUID: 'c1d3e4f5-6a7b-8c9d-0e1f-2a3b4c5d6e7f',
            comment: 'The version of the integration.',
            isMongoRequired: false,
            isMongoIndexed: true,
        }));
        /////////////
        // softpak //
        /////////////
        // softpakCompanyId
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'softpakCompanyId',
            attributeUUID: '1a01c50e-d1ab-4440-b570-e6560ffa0ff4',
            comment: 'The softpak company ID.',
            isMongoRequired: false,
        }));
        // softpakRobotApiEndpoint
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'softpakRobotApiEndpoint',
            attributeUUID: '1a01c50e-d1ab-4440-b570-e6560ffa0ff4',
            comment: 'The softpak robot API endpoint.',
            isMongoRequired: false,
        }));
        // softpakRobotApiLogin
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'softpakRobotApiLogin',
            attributeUUID: 'bee18a30-3a91-4735-8cd6-9f0534b5d506',
            comment: 'The softpak robot API login.',
            isMongoRequired: false,
        }));
        // softpakRobotApiPassword
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'softpakRobotApiPassword',
            attributeUUID: '450fe36a-6adf-4ab2-a5dc-b3bc7a38cb74',
            comment: 'The softpak robot API password.',
            isMongoRequired: false,
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: 'b9defbcd-4992-4792-b409-1c43eb618fe7',
            comment: 'The organization.',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * settingIntegrationType
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'settingIntegrationType',
            attributeUUID: 'e34e01aa-04bd-4509-ad7f-bab7b79d231c',
            comment: 'The settingIntegrationType.',
            foreignRefEntityNamespace: SettingIntegrationType_1.SettingIntegrationType.metaDataForSettingIntegrationType.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * setttingToken
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'settingToken',
            attributeUUID: 'e34e01aa-04bd-4509-ad7f-bab7b79d231c',
            comment: 'The settingToken.',
            foreignRefEntityNamespace: SettingToken_1.SettingToken.metaDataForSettingToken.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        // integrationErrorEmail
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRefArray({
            attributeName: 'integrationErrorEmails',
            attributeNameSingular: 'integrationErrorEmail',
            comment: 'The email address to send integration error notifications to.',
            foreignRefEntityNamespace: persistable_1.EmailAddress.metaDataForEmailAddress.namespace,
            attributeUUID: '20b83564-9de0-4b43-b280-3be89d1b0da3'
        }).setMongoRefArrayAllowDuplicate(false));
    }
    static getInstance() {
        return (SettingIntegrationEntityModel.INSTANCE);
    }
}
exports.SettingIntegrationEntityModel = SettingIntegrationEntityModel;
SettingIntegrationEntityModel.INSTANCE = new SettingIntegrationEntityModel();
//# sourceMappingURL=SettingIntegrationEntityModel.js.map