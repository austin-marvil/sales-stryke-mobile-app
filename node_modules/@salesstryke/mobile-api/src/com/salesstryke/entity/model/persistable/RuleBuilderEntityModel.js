"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuleBuilderEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const Import_1 = require("../../../data/entity/Import");
const TypeReference_1 = require("../../../data/entity/TypeReference");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.RuleBuilder';
class RuleBuilderEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('09d1e2a3-240f-4aa8-b6f6-efc3c92c88d3')
            .setDataModelName('RuleBuilder')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('1b01deda-b59f-4bb6-903c-77439ee5751b')
            .addImport({
            import: new Import_1.Import({
                moduleSpecifier: 'react-querybuilder',
                namedBindings: [
                    new Import_1.NamedBinding({ propertyName: 'RuleGroupType' })
                ]
            })
        });
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('19688758-b8cf-4d7e-8e85-5caabe9a2df5'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('f3e631ad-5f01-4a6b-8e91-96522ff9c23c'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('b2227895-c796-4452-8ab6-e0d35bb1333c'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('8a7acaad-9ae5-488c-97db-fcfb8ae983ca'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('5babc435-d324-4dff-825c-f1bee138b725'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('80cf9bc6-8720-452b-b517-9a59b467cdd0'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '033b750e-a077-4e44-ac52-6d2999549722'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('e67524bc-5b92-4f20-95dc-f80b20ffb770'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('e9b0b12f-dc69-43f0-a980-656b962e8141'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // json string
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'ruleGroup',
            attributeUUID: '68a00f2a-4bb3-490b-8c97-6267dca58578',
            comment: 'The rule group for react query.',
            variableType: new TypeReference_1.TypeReference({
                typeName: 'RuleGroupType'
            })
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'ffffdfe2-e2ce-4dc3-bdcb-018216caef29',
            comment: 'The name of the RuleBuilder.',
            validator: zod_1.z.string()
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: 'a6e817af-3a4e-43c0-986f-e71893ab2cb7',
            comment: 'The description.',
            validator: zod_1.z.string().max(1000, 'Description is to long'),
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : 'a15e4000-9fbb-497c-ba02-24967357e1fc',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '34b912ae-c095-4121-b99a-e5f9148e330c',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (RuleBuilderEntityModel.INSTANCE);
    }
}
exports.RuleBuilderEntityModel = RuleBuilderEntityModel;
RuleBuilderEntityModel.INSTANCE = new RuleBuilderEntityModel();
//# sourceMappingURL=RuleBuilderEntityModel.js.map