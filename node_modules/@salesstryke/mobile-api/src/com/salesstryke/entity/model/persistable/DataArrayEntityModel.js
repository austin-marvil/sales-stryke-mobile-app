"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataArrayEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const Import_1 = require("../../../data/entity/Import");
const TypeReference_1 = require("../../../data/entity/TypeReference");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.DataArray';
class DataArrayEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('41ab30c4-0f73-497e-a0a1-33f14a64d509')
            .setDataModelName('DataArray')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('e3ff2d86-acfd-4f91-a145-66d22bdef669')
            .addImport({
            import: new Import_1.Import({
                moduleSpecifier: '../../type/BooleanArray.type',
                namedBindings: [
                    new Import_1.NamedBinding({ propertyName: 'TBooleanArray' })
                ]
            })
        })
            .addImport({
            import: new Import_1.Import({
                moduleSpecifier: '../../type/NumberArray.type',
                namedBindings: [
                    new Import_1.NamedBinding({ propertyName: 'TNumberArray' })
                ]
            })
        })
            .addImport({
            import: new Import_1.Import({
                moduleSpecifier: '../../type/PrimitiveArray.type',
                namedBindings: [
                    new Import_1.NamedBinding({ propertyName: 'TPrimitiveArray' })
                ]
            })
        })
            .addImport({
            import: new Import_1.Import({
                moduleSpecifier: '../../type/StringArray.type',
                namedBindings: [
                    new Import_1.NamedBinding({ propertyName: 'TStringArray' })
                ]
            })
        });
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('abeb69e6-01fe-4e52-86d1-66d272f9bdb8'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('23cbd431-2178-4aeb-a98f-a1e9d432ae38'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('95219ad6-7f55-4685-a43c-29fb8fc68971'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('9414a52d-34af-48ca-a4d6-2fa60de0086c'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('ab7b96ff-fecf-4948-8d17-804402819438'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('606b68aa-9646-4949-abd8-ade95f359a4e'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '8196592c-2375-4919-a9ff-da90d9ce261e'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('08d375f3-0db5-4ad4-9f9c-ae6fc36cd527'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('74b703ea-c674-4dc9-b57b-bd0ca7d777fc'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // boolean
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'booleanArray',
            attributeUUID: '46c2a4c8-7a95-4e98-8071-1a37258a8dfe',
            comment: 'Aarray of boolean values.',
            isMongoIndexed: false,
            isMongoRequired: false,
            variableType: new TypeReference_1.TypeReference({
                typeName: 'TBooleanArray'
            })
        }));
        // number
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'numberArray',
            attributeUUID: 'c6a17a88-c476-4ff9-ba38-3f6c9716cef4',
            comment: 'Aarray of number values.',
            isMongoIndexed: false,
            isMongoRequired: false,
            variableType: new TypeReference_1.TypeReference({
                typeName: 'TNumberArray'
            })
        }));
        // string
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'stringArray',
            attributeUUID: 'f6ce1121-3e18-4e36-b8a8-86f32f1856b0',
            comment: 'Aarray of string values.',
            isMongoIndexed: false,
            isMongoRequired: false,
            variableType: new TypeReference_1.TypeReference({
                typeName: 'TStringArray'
            })
        }));
        // primitive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'primitiveArray',
            attributeUUID: 'a7d1ad14-2fbd-4531-98ba-91d77b650a77',
            comment: 'Aarray of primitive values.',
            isMongoIndexed: false,
            isMongoRequired: false,
            variableType: new TypeReference_1.TypeReference({
                typeName: 'TPrimitiveArray'
            })
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : '0d85024c-c7a7-4c52-83d4-ac5c7828d382',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '0d0a3e64-8ee1-45bf-8d66-b5147def66db',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (DataArrayEntityModel.INSTANCE);
    }
}
exports.DataArrayEntityModel = DataArrayEntityModel;
DataArrayEntityModel.INSTANCE = new DataArrayEntityModel();
//# sourceMappingURL=DataArrayEntityModel.js.map