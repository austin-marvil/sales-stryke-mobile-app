"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartProductRuleEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const CartItem_1 = require("../../classes/persistable/CartItem");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.CartProductRule';
class CartProductRuleEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('32af246c-b7e6-4a62-87bc-345d80da627b')
            .setDataModelName('CartProductRule')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('d4265aac-b883-4904-8ce0-813b97d4c14e');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('70270a75-ef20-4eac-b413-7c0d1951ae32'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('fb924c7d-b820-440c-a24e-b46e1e40a625'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('d5e8573e-54ab-429f-a66e-b7b431976778'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('30dbd519-80eb-40fb-b7c6-2a69232531e6'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('3efe7c6f-fb7e-41a0-b3fb-052f06356197'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('d9cae26c-de7e-4958-ac40-b04f68906346'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '37bd82f0-0848-490f-aefe-a2427ca65790'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('0a615222-ae75-4396-8a3d-e5131cd5b7b7'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('1027b7a6-598d-40f8-9bfa-06472406608e'));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '734442d2-1c87-403f-bade-622be91ebeca',
            comment: 'The name.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: 'f2d6a1e2-ea5f-4276-ae08-bbc4aeebd027',
            comment: 'The description.',
            validator: zod_1.z.string().max(1000, 'Description is to long'),
        }));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeStartDate',
            attributeUUID: 'e2c8a438-d1a0-464f-af63-6fe125e3386d',
            comment: 'Active start date.',
            validator: zod_1.z.date(),
        }));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeEndDate',
            attributeUUID: '2cf39102-c692-46ac-9df6-27c77f2d8c64',
            comment: 'Active end date.',
            validator: zod_1.z.date(),
        }));
        // byRuleQuantity
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'byRuleQuantity',
            attributeUUID: '66414c66-fbc2-4e0f-8191-3c2d34334581',
            comment: 'quantity by rule.',
            isMongoRequired: false,
            validator: zod_1.z.number().int(),
        }));
        // cartItem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'cartItem',
            attributeUUID: 'bc06f57a-b67a-4155-980e-deac451ccb17',
            comment: 'The cart item.',
            foreignRefEntityNamespace: CartItem_1.CartItem.metaDataForCartItem.namespace,
            validator: zod_1.z.string(),
        }));
        // TODO
        // productRuleTypeId
        // this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
        //     attributeName             : 'productRuleTypeId',
        //     attributeUUID             : 'bc06f57a-b67a-4155-980e-deac451ccb17',
        //     comment                   : 'The organization.',
        //     foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
        // }));
        // productId
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRefArray({
            attributeName: 'products',
            attributeNameSingular: 'product',
            comment: 'List of product.',
            foreignRefEntityNamespace: persistable_1.Product.metaDataForProduct.namespace,
            attributeUUID: 'cad2df9a-ff7b-4fa0-ad2b-3dfc30e9707a'
        })
            .setMongoRefArrayAllowDuplicate(false));
        // rules
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'rules',
            attributeUUID: '5bd622e3-d502-407b-b466-f2a1d0a696f0',
            comment: 'Rules.',
            validator: zod_1.z.string(),
        }));
        // rulesBuilderjson
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'rulesBuilderjson',
            attributeUUID: '2e1a2ae3-8a0b-47c8-ac75-b17e13e51c80',
            comment: 'Rules builder json.',
            validator: zod_1.z.string(),
        }));
        // ruleOrderIndex
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'ruleOrderIndex',
            attributeUUID: 'eb877343-9689-4957-bf39-ea323d358ba5',
            comment: 'Index of the rule',
            validator: zod_1.z.number().int(),
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : '00223580-9ce1-490e-97b6-6e3c24010eda',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '61112c61-55e8-448b-8bc8-bec49641e5be',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (CartProductRuleEntityModel.INSTANCE);
    }
}
exports.CartProductRuleEntityModel = CartProductRuleEntityModel;
CartProductRuleEntityModel.INSTANCE = new CartProductRuleEntityModel();
//# sourceMappingURL=CartProductRuleEntityModel.js.map