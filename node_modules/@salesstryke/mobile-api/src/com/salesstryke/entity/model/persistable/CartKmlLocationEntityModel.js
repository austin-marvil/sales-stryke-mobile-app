"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartKmlLocationEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.CartKmlLocation';
class CartKmlLocationEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('8ed0263a-87be-494a-bf00-286245849156')
            .setDataModelName('CartKmlLocation')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('3b48fd0c-d9d3-48fe-81cd-34d300632936');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('cacf4e9e-dbc2-4bec-8235-ecbc5fce9c48'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('eed91bf8-5aac-4ef5-afc5-02639dfb6bfc'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('dfb1e1cb-a410-4a0a-87f8-7925e6b8e12f'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('094b558f-c42a-4d38-a760-83665fdb5118'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('b6ffb28f-fa76-42ef-8336-c4dd3f37702e'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('e7b0c90d-b095-40ed-85e9-3f55b57487a3'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'b70723f8-db11-41ee-90ef-08ae7b6f0a87'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('92f12def-35ae-4913-8165-78ebe19b896c'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('084da03f-9e5d-4f9a-a4e7-87a7d6068164'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '94be970a-ad47-4f19-b431-11540bca0a68',
            comment: 'The name.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '0d077965-e4ae-45bc-8c8e-b0e251870a78',
            comment: 'The description.',
            validator: zod_1.z.string().max(1000, 'Description is to long'),
        }));
        // cartItem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'cartItem',
            attributeUUID: '9348675a-a2c1-4ed0-acf2-0b3c041c0355',
            comment: 'The cart item.',
            foreignRefEntityNamespace: persistable_1.CartItem.metaDataForCartItem.namespace,
            validator: zod_1.z.string(),
        }));
        // kmlLayer
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kmlLayer',
            attributeUUID: '38f792ab-496f-4325-b6f3-9e2566cb2ce0',
            comment: 'KML Layer.',
            foreignRefEntityNamespace: persistable_1.KmlLayer.metaDataForKmlLayer.namespace,
            validator: zod_1.z.string(),
        }));
        // kmlGeometry
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kmlGeometry',
            attributeUUID: '9cfbdcc8-ab2a-4b41-b683-aa2591961692',
            comment: 'KML Polygon.',
            foreignRefEntityNamespace: persistable_1.KmlGeometry.metaDataForKmlGeometry.namespace,
            validator: zod_1.z.string(),
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: '9faab1e4-4dbc-4037-8164-f801d1a68bf2',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            validator: zod_1.z.string(),
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: 'fddb0665-fbc3-4265-8bfe-2012f013f21a',
            comment: 'The workspace this kml location belong to.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
            isMongoIndexed: true,
            isMongoRequired: false
        }));
    }
    static getInstance() {
        return (CartKmlLocationEntityModel.INSTANCE);
    }
}
exports.CartKmlLocationEntityModel = CartKmlLocationEntityModel;
CartKmlLocationEntityModel.INSTANCE = new CartKmlLocationEntityModel();
//# sourceMappingURL=CartKmlLocationEntityModel.js.map