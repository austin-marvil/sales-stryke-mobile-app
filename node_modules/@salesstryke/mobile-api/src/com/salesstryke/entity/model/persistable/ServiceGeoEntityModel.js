"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceGeoEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ServiceGeo';
class ServiceGeoEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('1b2a8ee4-f930-4898-8208-f8575d9007e5')
            .setDataModelName('ServiceGeo')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('9f3b0014-958a-4b1f-8e3f-8d17b81f8295');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('5d2011ee-0604-49af-b46c-6a4f2cc13bb1'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('b49808d5-7dc5-4fd8-8437-a4791ec7b45d'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('4fa1c6f8-1618-4d63-b199-d0ad15351a9a'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('fd1fec4b-b0b8-43f8-8c93-c2668a68b969'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('dd891e0a-7d8f-4979-a355-f579485908d9'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('c3274cfa-a189-4df2-8024-6225fa725858'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '2f24ce47-97da-4741-8ffc-821ca2db9a8a'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('2a7b7840-8df4-40c0-8664-1e572293e204'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('be448f5a-9967-4a5c-aaa5-be3131354cd1'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '12f55df6-0625-4297-a899-2ebe622ab851',
            comment: 'The name.',
            isMongoRequired: false,
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '5023d320-18ab-46e0-ab7a-80b108e49af2',
            comment: 'The description.',
            isMongoRequired: false,
            validator: zod_1.z.string().max(1000, 'Description is to long'),
        }));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeStartDate',
            attributeUUID: '6c89df4b-3c0e-491f-9fcf-e4189d38a390',
            comment: 'Active start date.'
        }));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeEndDate',
            attributeUUID: '69714c8e-2f9d-481f-8ff0-7c480b79e070',
            comment: 'Active end date.'
        }));
        // product
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'product',
            attributeUUID: 'bc06f57a-b67a-4155-980e-deac451ccb17',
            comment: 'The product.',
            foreignRefEntityNamespace: persistable_1.Product.metaDataForProduct.namespace,
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : 'a1f7af7b-8511-4604-8771-3d98d687f5de',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /**
         * Workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: '69714c8e-2f9d-481f-8ff0-7c480b79e070',
            comment: 'The workspace.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : 'b26d977e-4082-4859-9bbe-3f8edbba4672',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (ServiceGeoEntityModel.INSTANCE);
    }
}
exports.ServiceGeoEntityModel = ServiceGeoEntityModel;
ServiceGeoEntityModel.INSTANCE = new ServiceGeoEntityModel();
//# sourceMappingURL=ServiceGeoEntityModel.js.map