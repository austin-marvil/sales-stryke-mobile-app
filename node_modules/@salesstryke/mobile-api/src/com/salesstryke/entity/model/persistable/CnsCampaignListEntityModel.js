"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CnsCampaignListEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.CnsCampaignList';
class CnsCampaignListEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('b0c0deb5-37e3-4bc0-963d-7d79fe35e613')
            .setDataModelName('CnsCampaignList')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('a20cffd2-4f2c-48b1-823b-1f393863a170');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('508030e9-f1b9-4995-866e-b8e09295bf0d'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('760dc3d9-08a5-48d7-b0d8-553a51a9b6dc'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('5b67afe8-b988-4c2e-8e74-da024655bfc6'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('92586c25-3633-4bca-970c-080708648b1f'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('cbd85986-ea56-4fb5-8bf7-59f931998497'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('25fa427d-fa74-4448-a794-02351edf855a'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'f22ea48c-e3d7-438b-a41c-23d26cc1a9fd'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('5d622030-3802-4166-92e2-386b57d6fffd'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('b62fa561-1794-42c5-b455-4a10fb0ddf8d'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // isActive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isActive',
            attributeUUID: 'd8c0ceaa-790f-4c15-bbca-4f0bc6876c88',
            comment: 'Boolean for camapign list if it is active.'
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '0aefc85f-dccd-4a29-acc8-f94939884f3c',
            comment: 'Campaign list description.',
            validator: zod_1.z.string(),
        }));
        // expirationDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'expirationDate',
            attributeUUID: '2d6dbcf9-ccd7-4389-9e98-52abac6829eb',
            comment: 'Campaign list expiration date.',
            // isMongoRequired : true,
            isMongoRequired: false,
            validator: zod_1.z.string(),
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '43c2177d-72af-4f84-9138-6e34ebff38a4',
            comment: 'The name of the campaign list.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : 'ae419736-08fa-4c88-9d94-870c2dfc439e',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '6cee7b56-a1e5-4efc-aa73-647991c3aac8',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (CnsCampaignListEntityModel.INSTANCE);
    }
}
exports.CnsCampaignListEntityModel = CnsCampaignListEntityModel;
CnsCampaignListEntityModel.INSTANCE = new CnsCampaignListEntityModel();
//# sourceMappingURL=CnsCampaignListEntityModel.js.map