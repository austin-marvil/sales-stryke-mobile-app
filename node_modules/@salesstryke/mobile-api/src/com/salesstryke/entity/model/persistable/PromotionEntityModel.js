"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromotionEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.Promotion';
class PromotionEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('ce840b4d-02b7-49c1-a628-3cf49a219daa')
            .setDataModelName('Promotion')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('92896efc-031f-4ec1-8b62-5ed142778801');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('982fe1f1-c38a-46b9-9608-8084343091f2'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('e91670bc-0ee0-4640-ac40-5ed6738a683f'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('40f3bf3f-2111-42bb-be19-597645be675d'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('98688584-fed4-48c6-81a1-cb4672d31426'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('7544e86a-570d-43ee-b890-d7754ed69d65'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('f78c6e85-c56b-4617-979c-ac9a6de932ca'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '2067b7ed-9fd8-4904-88ef-3e9bf11fcde7'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('3eed0e25-4f4c-4681-a8c8-4695c706d27c'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('0fcc2272-b811-42ee-a48f-8d55610f236f'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeStartDate',
            attributeUUID: '39dd3688-841d-46a5-8aaf-16cbbc87bbb4',
            comment: 'Active start date.'
        }));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeEndDate',
            attributeUUID: 'fa3de96a-dec9-4a4b-b58a-940ea6d6f880',
            comment: 'Active end date.'
        }));
        // amountOff
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'amountOff',
            attributeUUID: '00d12248-127e-4821-969e-5c88d389e837',
            comment: 'Flat amount off',
            isMongoRequired: false
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'e9462787-984f-4c6c-9672-4b82dbf6a751',
            comment: 'The name for this promotion.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '5472aab0-27c6-4728-bc56-aadd30e835d9',
            comment: 'The description for this promotion.',
            validator: zod_1.z.string().max(5000, 'Description is too long')
        }));
        // isActive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isActive',
            attributeUUID: 'f667d371-46b4-40fb-a52c-ebf082192158',
            comment: 'Identifies if the promotion is active.'
        }));
        // percentageOff
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'percentageOff',
            attributeUUID: '70816f0d-bbc0-4cc2-a0af-cb3a54204c66',
            comment: 'Promotion percentage off.',
            isMongoRequired: false
        }));
        // product
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'product',
            attributeUUID: 'e5eebfc4-5606-495a-9144-13bf7b034a23',
            comment: 'The Product.',
            foreignRefEntityNamespace: persistable_1.Product.metaDataForProduct.namespace,
        }));
        // promoCode
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'promoCode',
            attributeUUID: '4a9a06d4-7fb5-4b23-891e-c548e6436b97',
            comment: 'Promotion Code.',
            isMongoRequired: false,
            validator: zod_1.z.string().max(255, 'Promotion code is too long')
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithoutSpace, 'Promotion code must contain only alphabets and numbers with no spaces')
        }));
        // promoPrice
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableNumber2({
            attributeName: 'promoPrice',
            attributeUUID: '786977c0-e93d-4c27-8e7c-fb9a70f6ec54',
            comment: 'Promotion Price.',
            isMongoRequired: false,
            validator: zod_1.z.string()
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: '52f593f0-4c39-45e7-97c5-132ec0b89b55',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '1fcee01c-ebdd-4fa8-a554-9e33716a716c',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (PromotionEntityModel.INSTANCE);
    }
}
exports.PromotionEntityModel = PromotionEntityModel;
PromotionEntityModel.INSTANCE = new PromotionEntityModel();
//# sourceMappingURL=PromotionEntityModel.js.map