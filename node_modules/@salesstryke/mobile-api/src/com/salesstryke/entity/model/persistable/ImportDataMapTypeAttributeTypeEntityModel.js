"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportDataMapTypeAttributeTypeEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const ImportDataAttributeType_1 = require("../../classes/persistable/ImportDataAttributeType");
const RuleBuilderField_1 = require("../../classes/persistable/RuleBuilderField");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ImportDataMapTypeAttributeType';
class ImportDataMapTypeAttributeTypeEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('2996f930-0aca-4d14-8142-baec2cb04708')
            .setDataModelName('ImportDataMapTypeAttributeType')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('58500a3e-2173-4b18-9377-9a41dca1ed4f');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('b1bab3f1-8602-464e-b1d1-061e464ca242'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('f20fcc92-8f0d-47dc-a4ad-bf1342bf7167'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('6c2110e5-48be-4e01-aa9e-cd0be15c309d'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('9a92b597-5b91-4abe-b825-da021fe8a7e7'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('1e5b4e13-daf8-4247-89e4-ad88d82437da'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('f4b8cdbf-a4be-4642-9b50-7d410af0a4f0'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '5836f23c-cee1-431a-8c9b-72246c458b21'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('30b8e2a7-dc14-40cc-a99d-b8a03073f8d0'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('5b21bc90-4fb5-47a5-a6fe-338869cca5ba'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: '44f75c57-29d2-4d7d-9bc1-c2953667e06c' }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '0000ef9c-ef9d-490e-9a03-88d65dfe4e3d',
            comment: 'The name.'
        }));
        //
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'importDataAttributeType',
            attributeUUID: '076c9f4d-7af8-4e66-826f-57e5c14ffe01',
            comment: 'The predefined value that identifes the attribute in the ImportData Entity.',
            foreignRefEntityNamespace: ImportDataAttributeType_1.ImportDataAttributeType.metaDataForImportDataAttributeType.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '79303819-2231-4ef7-b07b-277f85861994',
            comment: 'The name.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
        // ruleBuilderField
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'ruleBuilderField',
            attributeUUID: '076c9f4d-7af8-4e66-826f-57e5c14ffe01',
            comment: 'The predefined value that identifes the attribute in the ImportData Entity.',
            foreignRefEntityNamespace: RuleBuilderField_1.RuleBuilderField.metaDataForRuleBuilderField.namespace,
            isMongoRequired: false,
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : '',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            mongoIsIndexed            : true,
            mongoIsRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '4d8ec85f-789e-4892-af2b-67f7f4cc5630',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (ImportDataMapTypeAttributeTypeEntityModel.INSTANCE);
    }
}
exports.ImportDataMapTypeAttributeTypeEntityModel = ImportDataMapTypeAttributeTypeEntityModel;
ImportDataMapTypeAttributeTypeEntityModel.INSTANCE = new ImportDataMapTypeAttributeTypeEntityModel();
//# sourceMappingURL=ImportDataMapTypeAttributeTypeEntityModel.js.map