"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const Organization_1 = require("../../classes/persistable/Organization");
const WorkspaceTemplate_1 = require("../../classes/persistable/WorkspaceTemplate");
const WorkspaceDocument_1 = require("../../classes/persistable/WorkspaceDocument");
const RoutingSoftwareType_1 = require("../../classes/persistable/RoutingSoftwareType");
const RoutingSoftwareVersion_1 = require("../../classes/persistable/RoutingSoftwareVersion");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const zod_1 = require("zod");
const EmailAddress_1 = require("../../classes/persistable/EmailAddress");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.Workspace';
class WorkspaceEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        // let simpleName_s:   string = NamespaceUtils.namespaceToSimpleName(ENTITY_CLASS_NAMESPACE);
        entityModel
            .setCrudCreateAuthorizationUUID('e64ce3a6-085f-4f5a-b12e-f478de8cc232')
            .setDataModelName("Workspace")
            //.setIncludeInHistory(true)
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIncludeInHistory(true)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('ecb089a4-2fe3-482f-88cd-21dd04028d48');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('ae56dc53-d870-4bfd-a30c-c62f9fb8119f'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('7a1cf53b-62c5-4e5d-a503-4285e79cb824'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('41e9bdaf-6476-43cd-8cec-8846b7b5e0f7'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('c731ee0d-f537-45d2-b877-fc81952996bb'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('77205a83-8e07-47dc-adc4-05e4e64aa5ec'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('49ac5059-aeef-4bec-9713-41f72b2e4bc8'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, 'da7e6ede-ae50-433c-9fed-3b0c870e77f3'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('7d4c9f4a-3f32-4f4f-8311-20114f21d7e0'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('2744d551-a351-4170-95bd-4e926b265a96'));
        // deploymentDomainName
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'deploymentDomainName',
            attributeUUID: 'df6e212e-875a-458e-bb9c-337a3d7aaa8a', // uuid
            comment: 'The domain where the wiget will be deployed.',
            validator: zod_1.z.string().min(1, "Depolyment domain name cannot be empty")
                .max(255, "Depolyment domain name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Depolyment domain name cannot contain special characters")
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '5631a37f-545b-4038-b245-f88768765cb8', // uuid
            comment: 'The workspace description.',
            isMongoRequired: false,
            validator: zod_1.z.string().max(1000, "Description is too long")
        }));
        // isActive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isActive',
            attributeUUID: '1038f7e5-789c-4427-9230-fcfa5af6e252',
            comment: 'Identifies if the WorkSpace is active.'
        }));
        // isRoutingSoftwareSyncActive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isRoutingSoftwareSyncActive',
            attributeUUID: 'd38e3095-6936-453d-b5b1-431a975f136e',
            comment: `Identifies if the workspace is syncing to the routing software`
        }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'f81943b7-0670-4993-9b8c-b6a87d8bf0dc', // uuid
            comment: 'The data type',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
        // pandaDocAccessToken
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'pandaDocAccessToken',
            attributeUUID: '95bd9e74-0227-4267-87dc-e06980ef51ed', // uuid
            comment: 'The PandaDoc access_token.'
        }));
        // pandaDocRefreshToken
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'pandaDocRefreshToken',
            attributeUUID: '43cd8498-36cb-4429-ad3c-24c1f7710358', // uuid
            comment: 'The PandaDoc refresh_token.'
        }));
        // pandaDocClientId
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'pandaDocClientId',
            attributeUUID: 'd4c9a4a8-4539-4dc9-8581-2a2aaf25385d', // uuid
            comment: 'The PandaDoc client_id.'
        }));
        // pandaDocClientSecret
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'pandaDocClientSecret',
            attributeUUID: '5c18a356-c677-45a0-9725-eefdf1c1b09a', // uuid
            comment: 'The PandaDoc client_secret.'
        }));
        // pandaDocCronJobLockKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'pandaDocCronJobLockKey',
            attributeUUID: '726af914-7272-11ed-befa-e7c05ac719ad', // uuid
            comment: 'The cron job is currently on a system that has multiple instances running. Each thread has a random timer to request the lock, the first one in wins. This will be moved to another services as time permits.',
            isMongoRequired: false,
        }));
        // pandaDocLastSyncTimestamp
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'pandaDocLastSyncTimestamp',
            attributeUUID: '726af9fa-7272-11ed-befb-27fd71cc0dd4', // uuid
            comment: 'The timestamp that indicates how far back in time to query to sync data.',
            isMongoRequired: false,
        }));
        // routingSoftwareCronJobLockKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'routingSoftwareCronJobLockKey',
            attributeUUID: '726afa22-7272-11ed-befc-47e5310d80ac', // uuid
            comment: 'The cron job is currently on a system that has multiple instances running. Each thread has a random timer to request the lock, the first one in wins.',
            isMongoRequired: false,
        }));
        // routingSoftwareLastSyncTimestamp
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'routingSoftwareLastSyncTimestamp',
            attributeUUID: '726afa40-7272-11ed-befd-fb95cf129f70', // uuid
            comment: 'The timestamp that indicates how far back in time to query to sync data.',
            isMongoRequired: false,
        }));
        // routingSoftwareType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'routingSoftwareType',
            attributeUUID: '0b024aa2-9fcb-4b6e-9d90-021655529e48',
            comment: 'The RoutingSoftwareType.',
            foreignRefEntityNamespace: RoutingSoftwareType_1.RoutingSoftwareType.metaDataForRoutingSoftwareType.namespace,
            isMongoIndexed: true,
        }));
        // routingSoftwareVersion
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'routingSoftwareVersion',
            attributeUUID: '3e18fa45-5a34-4761-9e4f-cb22d99e407e',
            comment: 'The RoutingSoftwareVersion.',
            foreignRefEntityNamespace: RoutingSoftwareVersion_1.RoutingSoftwareVersion.metaDataForRoutingSoftwareVersion.namespace,
            isMongoIndexed: true,
        }));
        /**
         * organization oid
         * The Tenant Organization this workspace belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            attributeUUID: 'c7d82194-c90d-43c7-a17d-395421b48058',
            comment: 'The tenant Organization.'
        }));
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRefArray({
            attributeName: 'receiverEmails',
            attributeNameSingular: 'receiverEmail',
            comment: 'The email address to send email to.',
            foreignRefEntityNamespace: EmailAddress_1.EmailAddress.metaDataForEmailAddress.namespace,
            attributeUUID: '20b83564-9de0-4b43-b280-3be89d1b0da3'
        }).setMongoRefArrayAllowDuplicate(false));
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRefArray({
            attributeName: 'receiverEmailsBcc',
            attributeNameSingular: 'receiverEmailBcc',
            comment: 'The email address to send bcc email to.',
            foreignRefEntityNamespace: EmailAddress_1.EmailAddress.metaDataForEmailAddress.namespace,
            attributeUUID: '4cdaad6b-f7e3-4c46-a5a0-a01afe6fb222'
        }).setMongoRefArrayAllowDuplicate(false));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType('af87e3ca-3a13-413e-9bfb-9b9dd57b77f4'));
        // there could be thousands of workspaceDocument, so we don't want to load them all at once. 
        // rather, we will load them on demand.
        /**
         * WorkspaceDocuments
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoVirtualArray('workspaceDocuments', 'workspaceDocument', WorkspaceDocument_1.WorkspaceDocument.metaDataForWorkspaceDocument.namespace, WorkspaceDocument_1.WorkspaceDocument.metaDataForWorkspaceDocument.mongoAttributes.workspace, '6c3d5c78-d79a-4558-a164-e100d20c9520lk', // uuid
        'The documents for the workspace.', 1));
        /**
         * WorkspaceTemplates
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoVirtualArray('workspaceTemplates', 'workspaceTemplate', WorkspaceTemplate_1.WorkspaceTemplate.metaDataForWorkspaceTemplate.namespace, WorkspaceTemplate_1.WorkspaceTemplate.metaDataForWorkspaceTemplate.mongoAttributes.workspace, 'afdd500b-c65e-46a8-a985-ef1d522a122b', // uuid
        'The workspace templates for the workspace.', 1));
    }
    static getInstance() {
        return (WorkspaceEntityModel.INSTANCE);
    }
}
exports.WorkspaceEntityModel = WorkspaceEntityModel;
WorkspaceEntityModel.INSTANCE = new WorkspaceEntityModel();
//# sourceMappingURL=WorkspaceEntityModel.js.map