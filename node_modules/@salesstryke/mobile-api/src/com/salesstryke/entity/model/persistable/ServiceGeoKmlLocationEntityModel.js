"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceGeoKmlLocationEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ServiceGeoKmlLocation';
class ServiceGeoKmlLocationEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('3cd0612e-5cbd-44b2-a5e5-138eb1fb0000')
            .setDataModelName('ServiceGeoKmlLocation')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('87bc69b3-4d89-4312-a07e-4b4b6574058c');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('b0ebe32e-7c17-483b-bafd-1e84e84903ee'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('32bccace-66a9-4498-82b9-5b1d78007802'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('f29663a4-0e69-45b0-b4e4-7298d56e6749'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('f2c6fb41-0786-4f49-aa1d-a1335b503ed4'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('526d6e5a-24da-45c2-a357-bea3913b4e30'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('47211dce-b71f-4dd3-bf39-a6caa745ffb2'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '85bfe648-df8a-418e-b565-5d0b7f1d8f85'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('faafdde5-0b8e-44ea-8b57-1cd08ce2b86d'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('b6d11d38-97ee-45f7-acfe-459093c3a00e'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '3e1aca03-dcfb-4097-a684-1a593f4b9c37',
            comment: 'The name.',
            isMongoRequired: false,
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '22349e35-2d29-4537-82dc-9e82b4bc6c7b',
            comment: 'The description.',
            isMongoRequired: false,
            validator: zod_1.z.string().max(1000, 'Description is to long'),
        }));
        // kml
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kml',
            attributeUUID: 'ca26b436-28e2-433a-94fc-e6fe0431a925',
            comment: 'The KML.',
            foreignRefEntityNamespace: persistable_1.Kml.metaDataForKml.namespace,
        }));
        // kmlLayer
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kmlLayer',
            attributeUUID: '385fdf1a-7fd1-4d73-b1e1-78fb5bb34f7f',
            comment: 'The kml layer.',
            foreignRefEntityNamespace: persistable_1.KmlLayer.metaDataForKmlLayer.namespace,
        }));
        // kmlGeometry
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kmlGeometry',
            attributeUUID: '2752f66b-4046-4758-a763-1c5b3e363c04',
            comment: 'The kml polygon id.',
            foreignRefEntityNamespace: persistable_1.KmlGeometry.metaDataForKmlGeometry.namespace,
        }));
        // serviceGeo
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'serviceGeo',
            attributeUUID: 'bc06f57a-b67a-4155-980e-deac451ccb17',
            comment: 'The service geo.',
            foreignRefEntityNamespace: persistable_1.ServiceGeo.metaDataForServiceGeo.namespace,
        }));
        /**
         * workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: 'a1758d40-25d1-4eb5-b509-c7679a79c931',
            comment: 'The workspace this kml location belong to.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
            isMongoIndexed: true,
            isMongoRequired: false
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : 'bc262abc-18e9-4e44-a867-45358d4bb011',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '6f7532db-c6f2-47bb-95bf-3bf91978f59f',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (ServiceGeoKmlLocationEntityModel.INSTANCE);
    }
}
exports.ServiceGeoKmlLocationEntityModel = ServiceGeoKmlLocationEntityModel;
ServiceGeoKmlLocationEntityModel.INSTANCE = new ServiceGeoKmlLocationEntityModel();
//# sourceMappingURL=ServiceGeoKmlLocationEntityModel.js.map