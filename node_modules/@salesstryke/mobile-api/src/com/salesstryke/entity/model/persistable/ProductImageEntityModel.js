"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductImageEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ProductImage';
class ProductImageEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('8ee15c95-1b53-40bf-9f08-a3c29c476202')
            .setDataModelName('ProductImage')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('42489c38-9bc6-4d6f-b6de-d89b5d71e1ad');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('cd845908-bffe-4147-b7bb-210e686fd397'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('cd199ecb-0dc9-4681-8f48-5bce2b90c68d'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('30f91c0b-4879-426d-9bdd-ac3f95871f02'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('d3ddf8d4-564b-4de9-a1a7-cd7a2679ff07'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('3400bd1b-088b-4655-b7ad-cebe3d863983'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('6c8e7141-757f-4323-a2f0-4dd75daff4bb'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '7d509c10-cb4f-4af0-b79d-42ee75ddd7db'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('1d2aeb4b-7a68-4c49-8185-d8b3c1830873'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('94e6f393-76bd-4df7-b70f-68cff05e62c5'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'da085ca4-4e6d-4825-9a6d-759de753af15',
            comment: 'The name product image.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: 'af46159d-d750-4653-bb49-8b6091687c7c',
            comment: 'The description of product image.',
            validator: zod_1.z.string().max(5000, 'Description is too long')
        }));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeStartDate',
            attributeUUID: 'e9d6f64c-1029-47c4-88b8-6af8bcb62780',
            comment: 'Active start date.'
        }));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeEndDate',
            attributeUUID: 'b8e4e0c4-8f4c-44ef-8cd2-ca3a5d7514bb',
            comment: 'Active end date.'
        }));
        // imagePath
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'imagePath',
            attributeUUID: '59be6716-c783-4ed5-87ff-fd789e9b5e32',
            comment: 'The image url path.',
            validator: zod_1.z.string()
        }));
        // productCategory
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'productCategory',
            attributeUUID: 'b9a6b6e1-fb86-47c0-8516-06dba51daa41',
            comment: 'The product category id.',
            foreignRefEntityNamespace: persistable_1.ProductCategory.metaDataForProductCategory.namespace,
        }));
        // product
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'product',
            attributeUUID: '2d3bab41-502e-43f0-8d43-d1fe48102074',
            comment: 'The product id.',
            isMongoRequired: false,
            foreignRefEntityNamespace: persistable_1.Product.metaDataForProduct.namespace,
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: '9a6a1ecf-6fc2-46e7-b69d-92e85abe8312',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            validator: zod_1.z.string(),
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * Workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: 'c8da4e2f-7129-48b5-9f37-e68c1a7d2a5b',
            comment: 'The workspace.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : 'ea82cdde-3f06-4065-91ff-7ab0dcb78a1a',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (ProductImageEntityModel.INSTANCE);
    }
}
exports.ProductImageEntityModel = ProductImageEntityModel;
ProductImageEntityModel.INSTANCE = new ProductImageEntityModel();
//# sourceMappingURL=ProductImageEntityModel.js.map