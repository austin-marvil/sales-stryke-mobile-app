"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SoftPakTaxBodyCodeEntityModel = void 0;
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const NamespaceUtils_1 = require("../../../utils/NamespaceUtils");
const Organization_1 = require("../../classes/persistable/Organization");
const RoutingSoftwareVersion_1 = require("../../classes/persistable/RoutingSoftwareVersion");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.SoftPakTaxBodyCode';
class SoftPakTaxBodyCodeEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        let simpleName_s = NamespaceUtils_1.NamespaceUtils.namespaceToSimpleName(ENTITY_CLASS_NAMESPACE);
        entityModel
            .setCrudCreateAuthorizationUUID('296b19d3-2859-4608-9961-5ff6cdcbd0c9')
            .setDataModelName(simpleName_s)
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('04a1916b-64e4-40bf-bec9-cecefef7c487');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('062d00b5-28d1-4d6c-8d2d-7f9843f3700e'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('1ad91654-8edb-4ff5-b958-d620616d5f6e'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('f6662b7f-e62c-4aed-ba36-71aa081326a3'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('8394bda4-1982-493e-87d1-da3c628934b6'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('4fb0a5a3-7cd1-4745-92d7-f0567a02c1cd'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('db2af70d-06d5-4140-ae98-120405b18562'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('5bb6f9db-efa6-455c-ab2d-bae7d1cfaade'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '15d77953-1096-41e5-912a-8b4ad13285cf'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('46cbfb3a-2cf4-4328-9a9c-6bb8f1448cfa'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType('7ccf79e7-44d0-42d4-8f41-5ab1a0fd4a1f'));
        // removeFromRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRemoveFromRelationship('5bd73f92-357e-441c-bcfb-6c0f4cd92119'));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            attributeUUID: 'fcde322c-be8a-40c6-b557-deaefa96f178',
            comment: 'The organization.'
        }));
        // routingSoftwareVersion
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'routingSoftwareVersion',
            attributeUUID: '5abee711-1826-46cb-9d01-0eb06bc17a28',
            comment: 'The Routing Software Version.',
            foreignRefEntityNamespace: RoutingSoftwareVersion_1.RoutingSoftwareVersion.metaDataForRoutingSoftwareVersion.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        // taxBodyCode
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'taxBodyCode',
            attributeUUID: '56ca5386-f912-4f6d-9e29-f612e6ade478', // uuid
            comment: 'The 6 character tax body code.'
        }));
        // county
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'county',
            attributeUUID: 'b4cf5be2-4b02-4ea7-aee8-42f2a22f5caa', // uuid
            comment: 'The US county'
        }));
        // region
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'region',
            attributeUUID: '1f09eff5-6d37-4e50-871d-83076536a4e7', // uuid
            comment: 'The city, parish, township, etc.'
        }));
        // usState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'usState',
            attributeUUID: '7fa851c0-f317-41ab-8041-30c5f96599df', // uuid
            comment: 'The two character US state.'
        }));
    }
    static getInstance() {
        return (SoftPakTaxBodyCodeEntityModel.INSTANCE);
    }
}
exports.SoftPakTaxBodyCodeEntityModel = SoftPakTaxBodyCodeEntityModel;
SoftPakTaxBodyCodeEntityModel.INSTANCE = new SoftPakTaxBodyCodeEntityModel();
//# sourceMappingURL=SoftPakTaxBodyCodeEntityModel.js.map