"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentEntityModel = void 0;
const EntityBase_1 = require("../../../../data/entity/EntityBase");
const EntityType_1 = require("../../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../../utils/DataModelAttributeHelperUtil");
const Pricing_1 = require("../../../classes/record/pandadocapi/Pricing");
const Field_1 = require("../../../classes/record/pandadocapi/Field");
const Template_1 = require("../../../classes/record/pandadocapi/Template");
const Token_1 = require("../../../classes/record/pandadocapi/Token");
const GrandTotal_1 = require("../../../classes/record/pandadocapi/GrandTotal");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.record.pandadocapi.Document';
class DocumentEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        let entityModel = this.getEntityModel();
        entityModel
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setEntityType(EntityType_1.EntityType.RECORD)
            .setUUID('8d9bfde1-6aa6-4b7f-b94b-7d7c62576392');
        // date_created
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordDate('dateCreated', '886c5ea2-0897-4d75-81d3-27d505e1c177', // uuid
        'The created date of the document.'));
        // date_modified
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordDate('dateModified', '6e8da573-3f7a-47c1-a502-ca936a289102', // uuid
        'The modified date of the document.'));
        /**
         * fields
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordOneToMany('fields', 'field', Field_1.Field.metaDataForField.namespace, 'f94f1f76-035f-4549-89df-dc894f5d595f', // uuid
        "The fields for the document."));
        // grand_total
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordManyToOne('grandTotal', GrandTotal_1.GrandTotal.metaDataForGrandTotal.namespace, '34af073c-16eb-4ce5-97d6-0ffb7723b7fd', 'The grand total for the document.'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordString('id', 'd7c2d8b2-825a-48cb-be7c-7a667854e612', // uuid
        'The id of the document.'));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordString('name', '4a2277f4-420d-44b9-96c9-2e8ba7a40259', // uuid
        'The name of the document.'));
        // pricing
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordManyToOne('pricing', Pricing_1.Pricing.metaDataForPricing.namespace, 'b49c4e3e-f319-4c60-920d-4200fed0344c', 'The pricing.'));
        // status
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordString('status', '77d8c7b1-ccdc-438c-acd4-6276861dcfbc', // uuid
        'The status of the document.'));
        // template
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordManyToOne('template', Template_1.Template.metaDataForTemplate.namespace, '129ec819-6c9f-4cb3-be3c-848ea99f171a', 'The template that was used to create the document.'));
        // token
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRecordOneToMany('tokens', 'token', Token_1.Token.metaDataForToken.namespace, 'f09cb087-e683-433d-af4e-ebe1d27a5f02', 'The tokens for the document.'));
        // this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getRecordOneToMany(
        //     'fields',
        //     'field', 
        //     Field.metaDataForField.namespace,
        //     'f94f1f76-035f-4549-89df-dc894f5d595f', // uuid
        //     "The fields for the document."
        // )); 
    }
    static getInstance() {
        return (DocumentEntityModel.INSTANCE);
    }
}
exports.DocumentEntityModel = DocumentEntityModel;
DocumentEntityModel.INSTANCE = new DocumentEntityModel();
//# sourceMappingURL=DocumentEntityModel.js.map