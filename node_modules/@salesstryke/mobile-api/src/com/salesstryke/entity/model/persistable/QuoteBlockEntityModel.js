"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuoteBlockEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const NamespaceUtils_1 = require("../../../utils/NamespaceUtils");
const Organization_1 = require("../../classes/persistable/Organization");
const WorkspaceTemplate_1 = require("../../classes/persistable/WorkspaceTemplate");
const Product_1 = require("../../classes/persistable/Product");
const QuoteBlock_1 = require("../../classes/persistable/QuoteBlock");
const zod_1 = require("zod");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.QuoteBlock';
class QuoteBlockEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        let simpleName_s = NamespaceUtils_1.NamespaceUtils.namespaceToSimpleName(ENTITY_CLASS_NAMESPACE);
        entityModel
            .setCrudCreateAuthorizationUUID('756fe0c9-1ba4-4ef4-ad84-210d39193bcc')
            .setDataModelName(simpleName_s)
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('403a4750-8486-425e-a567-b16255b72716');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('0bef9525-93bb-421d-95ae-5ba65da7ab0d'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('8dcce8f0-cb72-4a4c-99f2-2aef5e269ef0'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('5f7ed188-1c33-4ffa-be1a-c7b8410bcef8'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('f7ff465c-3a8c-4e49-80f6-958231ea7fbd'));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate('activeEndDate', 'f53d1e5f-5c89-4371-9ff4-7f6d6e8dadaf', 'The active end date for the product attribute.'));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate('activeStartDate', 'd6312026-a46b-4b47-813c-979a36b5cb18', 'The active start date for the product attribute.'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('bdb9df58-fcfc-4a90-971f-e5aee96c03c5'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('04130917-12d9-4fbe-9eb9-f87e3c104c43'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('b3625e5b-e774-4895-ad04-d41faa9f0b40'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '842543ac-508e-4054-b735-b4690cf7968f'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('82248833-83b3-43f6-94d1-9245ee93044e'));
        // removeFromRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRemoveFromRelationship('968eb471-125a-4755-af17-2986308ea918'));
        /**
         * organization oid
         * The Tenant Organization this workspace belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            attributeUUID: 'fe494602-6247-49a0-a0e5-9f4fac60498f',
            comment: 'The tenant Organization.'
        }));
        /**
         * parentQuoteBlock
         * Many child QuoteBlock to One parent QuoteBlock
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'parentQuoteBlock',
            foreignRefEntityNamespace: QuoteBlock_1.QuoteBlock.metaDataForQuoteBlock.namespace,
            attributeUUID: 'd6d15b98-57f0-44ba-9f40-849c8e43db5b',
            comment: 'The Parent QuoteBlock.'
        }));
        /**
         * Product oid
         * The Product this QuoteBlock belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'product',
            foreignRefEntityNamespace: Product_1.Product.metaDataForProduct.namespace, //  SystemWidgetTemplate.metaDataForSystemWidgetTemplate.namespace,
            attributeUUID: '92a64a8a-801b-496f-b4cd-bd2452295195',
            comment: 'The Product this QuoteBlock belongs to.'
        })
            .setMongoIsRequired(false));
        /**
         * rootDescription
         * The top parent description for a quoteblock.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'rootDescription',
            attributeUUID: 'd05cb0c1-0590-4bcc-8b08-ccb30fedff34',
            comment: 'The top parent description for a quoteblock.',
            isMongoRequired: false,
            validator: zod_1.z.string().max(5000, 'Description is too long')
        }));
        /**
         * rootName
         * The top parent name for a quoteblock.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'rootName',
            attributeUUID: '89208ade-8461-4378-9678-a5c2f13bb2f3',
            comment: 'The top parent name for a quoteblock.',
            isMongoRequired: false,
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(/^[a-zA-Z\s]+$/, "Name must only contain alphabets and spaces")
        }));
        // uiDescription
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'uiDescription',
            attributeUUID: 'e5933855-53df-4adc-894f-0881437bbd0c',
            comment: 'The uiDescription of the product.',
            isMongoRequired: false,
            validator: zod_1.z.string().max(5000, 'Description is too long')
        }));
        // uiName
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'uiName',
            attributeUUID: 'ec7d55f2-383f-497d-bae3-aea778fb1399',
            comment: 'The uiName of the product.',
            isMongoRequired: false,
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(/^[a-zA-Z\s]+$/, "Name must only contain alphabets and spaces")
        }));
        // uiType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'uiType',
            attributeUUID: '9173ad94-db3c-4ab0-88a6-34cc9b13cdfc',
            comment: 'The uiType of the product. CHECKBOX, PRODUCT, RADIO, SELECT, TEXTAREA, TEXTFIELD'
        }));
        /**
         * WorkspaceTemplate oid
         * The workspace template this attribute belongs to.
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspaceTemplate',
            foreignRefEntityNamespace: WorkspaceTemplate_1.WorkspaceTemplate.metaDataForWorkspaceTemplate.namespace,
            attributeUUID: 'a0bd7038-eb85-4e50-ae02-a34d46ab1883',
            comment: 'The workspace template this attribute belongs to.'
        }), '6bdf016e-f47a-4317-99be-dce550545319' // mutatedFlagAttributeUUID_s
        );
    }
    static getInstance() {
        return (QuoteBlockEntityModel.INSTANCE);
    }
}
exports.QuoteBlockEntityModel = QuoteBlockEntityModel;
QuoteBlockEntityModel.INSTANCE = new QuoteBlockEntityModel();
//# sourceMappingURL=QuoteBlockEntityModel.js.map