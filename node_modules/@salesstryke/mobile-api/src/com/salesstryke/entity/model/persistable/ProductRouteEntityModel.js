"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductRouteEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const persistable_1 = require("../../classes/persistable");
const Route_1 = require("../../classes/persistable/Route");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.ProductRoute';
class ProductRouteEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('55896fe3-7cc9-4e98-9306-73f83864c4b8')
            .setDataModelName('ProductRoute')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('b41a25b3-2fdd-422f-b3e3-7d7ecf78dfb9');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('819538c0-ad3a-4d0d-881b-0ba630077d7c'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('d78db77e-29cc-46cd-89ce-de4880b9e42e'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('40c60502-2e1c-4631-b625-3a0dbbe3fd55'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('839c295b-2612-4bf4-8853-966e2453d3e8'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('7fb84baf-1c4a-42e1-8fe1-f0b0f1fa3a62'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('6df948d0-07ed-45d3-a331-f97b9e3e4088'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '6bd28d7e-f02b-42bb-b748-f686e306c52e'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('7baf80df-d5a4-4949-8b07-4e772c73a2c9'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('403b9c72-d3ac-4837-9c37-5defcd30f637'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        /**
         * Product
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'product',
            attributeUUID: '5168e0d5-516d-48e5-9c59-930f6e220aed',
            comment: 'The product.',
            foreignRefEntityNamespace: persistable_1.Product.metaDataForProduct.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * Route
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'route',
            attributeUUID: '426bda85-e4aa-4c61-af3a-fb608693a519',
            comment: 'The route.',
            foreignRefEntityNamespace: Route_1.Route.metaDataForRoute.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: 'e1f88933-a802-421f-9028-f1e822f043ec',
            comment: 'The organization.',
            foreignRefEntityNamespace: persistable_1.Organization.metaDataForOrganization.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /**
         * Workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: '6a313b40-8214-404d-8166-0c6bd8278fa0',
            comment: 'The workspace.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '3f1f4330-cec4-416b-b9ed-e6a02fe8c076',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (ProductRouteEntityModel.INSTANCE);
    }
}
exports.ProductRouteEntityModel = ProductRouteEntityModel;
ProductRouteEntityModel.INSTANCE = new ProductRouteEntityModel();
//# sourceMappingURL=ProductRouteEntityModel.js.map