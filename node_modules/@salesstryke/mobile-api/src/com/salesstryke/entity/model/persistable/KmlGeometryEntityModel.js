"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KmlGeometryEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const persistable_1 = require("../../classes/persistable");
const ProductKmlLocation_1 = require("../../classes/persistable/ProductKmlLocation");
const TypeReference_1 = require("../../../data/entity/TypeReference");
const Application_1 = require("../../classes/persistable/Application");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.KmlGeometry';
class KmlGeometryEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('b179b026-54d6-4d49-ad97-551e20a6ace3')
            .setDataModelName('KmlGeometry')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('55570aa0-ce53-4bae-a010-64f20cc0dfb3');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('975da0f2-dc93-4f8a-aec3-2da98b871dad'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('d1bc3690-3c3d-4d31-8c43-88669a6adb1f'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('d570440a-6e86-404d-b840-5d71a70bbb41'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('ab697c80-6582-4d62-b091-53732359f70c'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('76b3f119-6d73-4d03-9d9d-948e53f20996'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('af613d58-7712-469b-99ca-b42240356c51'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '2fd428c6-320d-4d70-b553-f22a777994e8'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('5e2f259f-c091-4b11-82e8-e6617668903b'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('cde30251-d583-44a9-9728-ccbb2bfe3a27'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // isActive
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableBoolean2({
            attributeName: 'isActive',
            attributeUUID: 'e297c832-34be-459c-a620-dcaaa20c8bc8',
            comment: 'Entity is active or not.',
            isMongoRequired: false,
            isMongoIndexed: false,
        }));
        // kmlLayer
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kmlLayer',
            attributeUUID: 'a1672ef4-40e5-4703-bbd9-0a481c2d8477',
            comment: 'The kml layer.',
            foreignRefEntityNamespace: persistable_1.KmlLayer.metaDataForKmlLayer.namespace,
            isMongoIndexed: true,
            isMongoRequired: false
        }));
        // activeStartDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeStartDate',
            attributeUUID: 'af033683-e343-4df0-9ac1-db0a0adf7489',
            comment: 'Active start date.',
            isMongoRequired: false,
        }));
        // activeEndDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'activeEndDate',
            attributeUUID: 'f5cce84a-c0e1-49d0-8158-2235ad9152dc',
            comment: 'Active end date.',
            isMongoRequired: false,
        }));
        // kml
        // this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
        //     attributeName             : 'kml',
        //     attributeUUID             : '73bab62e-b6cb-44a2-b3ec-fce8a7f0b2d8',
        //     comment                   : 'The kml.',
        //     foreignRefEntityNamespace : Kml.metaDataForKml.namespace,
        //     isMongoIndexed            : true,
        //     isMongoRequired           : false
        // }));
        // productPricingKmlLocation
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoVirtualArray('productPricingKmlLocations', 'productPricingKmlLocation', persistable_1.ProductPricingKmlLocation.metaDataForProductPricingKmlLocation.namespace, persistable_1.ProductPricingKmlLocation.metaDataForProductPricingKmlLocation.mongoAttributes.kmlGeometry, 'b88ff6f2-4888-4849-b20e-293912f4b1ae', // uuid
        'The product pricing kml location', 1));
        // kmlType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kmlType',
            attributeUUID: '0b79fdc0-0938-4861-b7ee-16a9c914b2f0',
            comment: 'The Kml layer type Id for this geometry.',
            foreignRefEntityNamespace: persistable_1.KmlType.metaDataForKmlType.namespace,
            isMongoIndexed: false,
            isMongoRequired: false
        }));
        // productColorKmlLocation
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoVirtualArray('productColorKmlLocations', 'productColorKmlLocation', persistable_1.ProductColorKmlLocation.metaDataForProductColorKmlLocation.namespace, persistable_1.ProductColorKmlLocation.metaDataForProductColorKmlLocation.mongoAttributes.kmlGeometry, '213990dc-2d11-4e55-bc4e-8c5f5789b065', 'The product color kml location', 1));
        // productCategoryKmlLocation
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoVirtualArray('productCategoryKmlLocations', 'productCategoryKmlLocation', persistable_1.ProductCategoryKmlLocation.metaDataForProductCategoryKmlLocation.namespace, persistable_1.ProductCategoryKmlLocation.metaDataForProductCategoryKmlLocation.mongoAttributes.kmlGeometry, '683b4546-4133-49bd-a36c-95dcbf58e719', 'The product category kml location', 1));
        // productKmlLocation
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoVirtualArray('productKmlLocations', 'productKmlLocation', ProductKmlLocation_1.ProductKmlLocation.metaDataForProductKmlLocation.namespace, ProductKmlLocation_1.ProductKmlLocation.metaDataForProductKmlLocation.mongoAttributes.kmlGeometry, '1bde90ec-94b0-4dcd-abf4-e1d44a4e4b4f', 'The product kml location', 1));
        // taxKmlLocation
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoVirtualArray('taxKmlLocations', 'taxKmlLocation', persistable_1.TaxKmlLocation.metaDataForTaxKmlLocation.namespace, persistable_1.TaxKmlLocation.metaDataForTaxKmlLocation.mongoAttributes.kml, 'c4640c39-726b-4269-806f-6706bb96a4a4', 'The tax kml location', 1));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: 'a104e365-bc48-4acb-a67a-a46b7ae0b36b',
            comment: 'The name of Kml Polygon',
            isMongoRequired: false,
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
            // .regex(Regex.alphanumericWithSpace, "Name cannot contain special characters")
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '60d082ed-ea1a-4645-8b56-8a36461d1ace',
            comment: 'The description.',
            validator: zod_1.z.string().max(1000, 'Description is to long'),
            isMongoRequired: false,
        }));
        // fillColor
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'fillColor',
            attributeUUID: 'eeb3e3bb-6ef4-4444-8b97-29b874b33270',
            comment: 'The fill color',
            validator: zod_1.z.string(),
            isMongoRequired: false
        }));
        // fillOpacity
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'fillOpacity',
            attributeUUID: '9f56839f-eca6-4d30-b5ea-d82b7b84b783',
            comment: 'The fill opacity',
            validator: zod_1.z.string(),
            isMongoRequired: false
        }));
        // geometryData
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableJsonString2({
            attributeName: 'geometryData',
            attributeUUID: 'ee35e9e3-2e59-4b01-a356-a2cb30e103f2',
            comment: 'The geometry data',
            // validator       : z.string(),
            variableType: new TypeReference_1.TypeReference({
                typeName: 'Object'
            }),
            isMongoRequired: false
        }));
        // geometryType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'geometryType',
            attributeUUID: 'b274b039-141e-4f52-bced-5157b45457e4',
            comment: 'The geometry shape type',
            validator: zod_1.z.string(),
            isMongoRequired: false
        }));
        // strokeColor
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'strokeColor',
            attributeUUID: '56abb457-dcd0-4a63-bfb8-e394dd236368',
            comment: 'The stroke color',
            validator: zod_1.z.string(),
            isMongoRequired: false
        }));
        // strokeOpacity
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'strokeOpacity',
            attributeUUID: '9f15c855-b23c-4daf-9cad-9da9f9acb1f3',
            comment: 'The stroke opacity',
            validator: zod_1.z.string(),
            isMongoRequired: false
        }));
        // strokeWeight
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'strokeWeight',
            attributeUUID: '9f15c855-b23c-4daf-9cad-9da9f9acb1f3',
            comment: 'The stroke weight',
            validator: zod_1.z.string(),
            isMongoRequired: false
        }));
        // application
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: "application",
            foreignRefEntityNamespace: Application_1.Application.metaDataForApplication.namespace,
            attributeUUID: 'd598c8e9-2ebf-4019-8a78-0a1e65e11448',
            comment: "The application kml geometry belong to.",
            isMongoRequired: false
        }));
        // workspace
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: "workspace",
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
            attributeUUID: 'dff9f3eb-4921-49a8-8ae2-f2cb1a031c06',
            comment: "The workspace this kml belong to.",
            isMongoRequired: false,
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : 'a1672ef4-40e5-4703-bbd9-0a481c2d8477',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : '29061007-ba9d-4ff7-afa3-da0c6c29aae9',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (KmlGeometryEntityModel.INSTANCE);
    }
}
exports.KmlGeometryEntityModel = KmlGeometryEntityModel;
KmlGeometryEntityModel.INSTANCE = new KmlGeometryEntityModel();
//# sourceMappingURL=KmlGeometryEntityModel.js.map