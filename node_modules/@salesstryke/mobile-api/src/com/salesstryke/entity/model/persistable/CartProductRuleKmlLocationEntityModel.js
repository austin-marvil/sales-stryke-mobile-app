"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartProductRuleKmlLocationEntityModel = void 0;
const zod_1 = require("zod");
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const RegularExpressionRegexConstUtil_1 = require("../../../utils/validation/RegularExpressionRegexConstUtil");
const persistable_1 = require("../../classes/persistable");
const ProductCategoryRule_1 = require("../../classes/persistable/ProductCategoryRule");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.CartProductRuleKmlLocation';
class CartProductRuleKmlLocationEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('86fa8025-8206-482a-b714-976c729aa3b9')
            .setDataModelName('CartProductRuleKmlLocation')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('1e1cab49-f602-4ffa-8230-d4f96084c5bd');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('f18c3192-8c79-42e7-bdcf-8e5937933591'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('59d0999f-d72b-4b66-8446-b665871c40ab'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('72e48298-740f-470f-b2e4-0d91561b63f4'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('cc60e9dc-f63a-4093-99a1-d11c72baa258'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('b4213816-2514-4938-a580-26dd7d2a6c0c'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('c5210c1a-2b76-4850-8b49-bf78fde677bf'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '127c264d-09e2-4916-87b7-3209f2fd2612'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('1fd92f88-06c3-45c6-88e1-bc5b7d0b4cf5'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('74489f6f-4fe4-4995-ae18-31a33481a5c3'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // name
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'name',
            attributeUUID: '43d28973-e246-47aa-9f3a-3e586d002ea2',
            comment: 'The name.',
            validator: zod_1.z.string().min(1, "Name cannot be empty")
                .max(255, "Name is too long")
                .regex(RegularExpressionRegexConstUtil_1.Regex.alphanumericWithSpace, "Name cannot contain special characters"),
        }));
        // description
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'description',
            attributeUUID: '35618404-d1db-4bc2-9a19-84f858cf99da',
            comment: 'The description.',
            validator: zod_1.z.string().max(1000, 'Description is to long'),
        }));
        // kmlLayer
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kmlLayer',
            attributeUUID: '684575c3-0756-4480-b0ab-f584098bb7bb',
            comment: 'The kml layer.',
            foreignRefEntityNamespace: persistable_1.KmlLayer.metaDataForKmlLayer.namespace,
            validator: zod_1.z.string(),
        }));
        // kmlGeometry
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'kmlGeometry',
            attributeUUID: 'f6d8de0f-9da0-4989-982e-26cc33f4bf1f',
            comment: 'The kml polygon id.',
            foreignRefEntityNamespace: persistable_1.KmlGeometry.metaDataForKmlGeometry.namespace,
            validator: zod_1.z.string(),
        }));
        // TODO CHECK IF its category rules
        // productRuleId
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'productRule',
            attributeUUID: '3fdff33b-1abf-4c42-bd7a-462edeb4c06c',
            comment: 'The product rule id.',
            foreignRefEntityNamespace: ProductCategoryRule_1.ProductCategoryRule.metaDataForProductCategoryRule.namespace,
            validator: zod_1.z.string(),
        }));
        /**
         * workspace
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'workspace',
            attributeUUID: '3ab9acb2-4f6e-44eb-b06a-812afce47d07',
            comment: 'The workspace this kml location belong to.',
            foreignRefEntityNamespace: persistable_1.Workspace.metaDataForWorkspace.namespace,
            isMongoIndexed: true,
            isMongoRequired: false
        }));
        /**
         * Organization
         */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName             : 'organization',
            attributeUUID             : 'ad13cc06-411c-4a06-9d2d-6c493cc2f021',
            comment                   : 'The organization.',
            foreignRefEntityNamespace : Organization.metaDataForOrganization.namespace,
            isMongoIndexed            : true,
            isMongoRequired           : true
        }));
        */
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : 'd2c7c21b-9761-479a-a4ac-c0980053f9dd',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (CartProductRuleKmlLocationEntityModel.INSTANCE);
    }
}
exports.CartProductRuleKmlLocationEntityModel = CartProductRuleKmlLocationEntityModel;
CartProductRuleKmlLocationEntityModel.INSTANCE = new CartProductRuleKmlLocationEntityModel();
//# sourceMappingURL=CartProductRuleKmlLocationEntityModel.js.map