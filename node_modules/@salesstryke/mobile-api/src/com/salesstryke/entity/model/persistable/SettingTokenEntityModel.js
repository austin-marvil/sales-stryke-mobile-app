"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingTokenEntityModel = void 0;
const EntityBase_1 = require("../../../data/entity/EntityBase");
const EntityType_1 = require("../../../data/entity/EntityType");
const DataModelAttributeHelperUtil_1 = require("../../../utils/DataModelAttributeHelperUtil");
const Organization_1 = require("../../classes/persistable/Organization");
const EmailAddress_1 = require("../../classes/persistable/EmailAddress");
const ENTITY_CLASS_NAMESPACE = 'com.salesstryke.entity.classes.persistable.SettingToken';
class SettingTokenEntityModel extends EntityBase_1.EntityBase {
    constructor() {
        super();
        this.setAddPersistableAttributes(true);
        this.setIsOrganizationRefRequired(true);
        let entityModel = this.getEntityModel();
        entityModel
            .setCrudCreateAuthorizationUUID('cd84ff00-aa6b-40ca-a2db-f848afbff87c')
            .setDataModelName('SettingToken')
            .setEntityType(EntityType_1.EntityType.PERSISTABLE)
            .setIsGraphUpdateable(true)
            .setNamespace(ENTITY_CLASS_NAMESPACE)
            .setUUID('ddc13961-6d9e-4595-8a7c-5a5176cd0f9e');
        // _jsonStateStr
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonStateStr('a899c453-b59f-4e5c-9e8b-74963c6ad551'));
        // _entityState
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getEntityState('62c10a29-5c62-4697-9f85-173a4733f711'));
        // _idSetBySystem
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIdSetBySystem('dc54963f-146d-4340-9368-00c2f859a26c'));
        // _initializedDataKey
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getIntializedDataKey('cfd12733-28fd-4332-9325-47a46da7a738'));
        // createdDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getCreatedDate('b385a1af-bddf-4e45-bddd-5ed6fe66b9ff'));
        // id
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getId('9cd9848c-48a8-4301-a401-4cbdefcd712c'));
        // jsonType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getJsonType(ENTITY_CLASS_NAMESPACE, '658e051d-6d91-4566-874a-bc345200e64a'));
        // modifiedDate
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getModifiedDate('8b6d2f41-5393-4d0b-a211-da291dddbd63'));
        // addToRelationship
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getAddToRelationship('f3294ad4-6709-4d94-b231-b65a9e0bc707'));
        // relationshipPersistableType
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getRelationshipPersistableType2({ uuid: 'relationshipPersistableTypeUUID' }));
        // token
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'token',
            attributeUUID: '122be3eb-9dcc-4d38-9497-d0f218743208',
            comment: 'The token',
        }));
        // refreshToken
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'refreshToken',
            attributeUUID: '1989d3b6-ac44-4768-8e42-7ce508ff9e24',
            comment: 'The refresh token',
            isMongoRequired: false,
        }));
        // expiration
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableDate2({
            attributeName: 'expiration',
            attributeUUID: 'f8b0c1d2-3e4f-4c1b-8f3d-2e5f6a7b8c9d',
            comment: 'The expiration date of the token.',
            isMongoRequired: false,
        }));
        // tokenType
        // this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableString2({
        //     attributeName   : 'tokenType',
        //     attributeUUID   : 'a2b3c4d5-e6f7-8a9b-0c1d-e2f3g4h5i6j7',
        //     comment         : 'The type of the token.',
        //     isMongoRequired : true,
        //     isMongoIndexed  : true,
        // }));
        // parentId - could be any entity ID that this token is associated with
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableString2({
            attributeName: 'parentId',
            attributeUUID: 'a1b2c3d4-e5f6-7a8b-9c0d-e1f2g3h4i5j6',
            comment: 'The parent ID',
        }));
        // notificationEmail
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRefArray({
            attributeName: 'notificationEmails',
            attributeNameSingular: 'notificationEmail',
            comment: 'The email address to send email to for expiration notifications.',
            foreignRefEntityNamespace: EmailAddress_1.EmailAddress.metaDataForEmailAddress.namespace,
            attributeUUID: '20b83564-9de0-4b43-b280-3be89d1b0da3'
        }).setMongoRefArrayAllowDuplicate(false));
        /**
         * Organization
         */
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelperUtil_1.DataModelAttributeHelper.getPersistableMongoRef2({
            attributeName: 'organization',
            attributeUUID: 'ab633fb9-83f9-4815-b0af-a9acb6d01e60',
            comment: 'The organization.',
            foreignRefEntityNamespace: Organization_1.Organization.metaDataForOrganization.namespace,
            isMongoIndexed: true,
            isMongoRequired: true
        }));
        /*
        this.getEntityModel().addEntityAttribute(DataModelAttributeHelper.getPersistableMongoRefArray(
            {
                attributeName              : "salesReportConfigParamValues",
                attributeNameSingular      : "salesReportConfigParamValue",
                attributeUUID              : 'b3dff5f9-9d9a-49dd-8c45-d1087228a748',
                comment                    : "The SalesReportConfigParamValue.",
                foreignRefEntityNamespace  : SalesReportConfigParamValue.metaDataForSalesReportConfigParamValue.namespace
            }
       ));
       */
    }
    static getInstance() {
        return (SettingTokenEntityModel.INSTANCE);
    }
}
exports.SettingTokenEntityModel = SettingTokenEntityModel;
SettingTokenEntityModel.INSTANCE = new SettingTokenEntityModel();
//# sourceMappingURL=SettingTokenEntityModel.js.map