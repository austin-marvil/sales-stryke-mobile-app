"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuoteBlock = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._activeEndDateIsMutated = "_activeEndDateIsMutated";
        this._activeStartDateIsMutated = "_activeStartDateIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._organizationIsMutated = "_organizationIsMutated";
        this._parentQuoteBlockIsMutated = "_parentQuoteBlockIsMutated";
        this._productIsMutated = "_productIsMutated";
        this._rootDescriptionIsMutated = "_rootDescriptionIsMutated";
        this._rootNameIsMutated = "_rootNameIsMutated";
        this._uiDescriptionIsMutated = "_uiDescriptionIsMutated";
        this._uiNameIsMutated = "_uiNameIsMutated";
        this._uiTypeIsMutated = "_uiTypeIsMutated";
        this._workspaceTemplateIsMutated = "_workspaceTemplateIsMutated";
        this.activeEndDate = "activeEndDate";
        this.activeStartDate = "activeStartDate";
        this.createdDate = "createdDate";
        this.id = "id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.parentQuoteBlock = "parentQuoteBlock";
        this.product = "product";
        this.rootDescription = "rootDescription";
        this.rootName = "rootName";
        this.uiDescription = "uiDescription";
        this.uiName = "uiName";
        this.uiType = "uiType";
        this.workspaceTemplate = "workspaceTemplate";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._activeEndDateIsMutated = "_activeEndDateIsMutated";
        this._activeStartDateIsMutated = "_activeStartDateIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._organizationIsMutated = "_organizationIsMutated";
        this._parentQuoteBlockIsMutated = "_parentQuoteBlockIsMutated";
        this._productIsMutated = "_productIsMutated";
        this._rootDescriptionIsMutated = "_rootDescriptionIsMutated";
        this._rootNameIsMutated = "_rootNameIsMutated";
        this._uiDescriptionIsMutated = "_uiDescriptionIsMutated";
        this._uiNameIsMutated = "_uiNameIsMutated";
        this._uiTypeIsMutated = "_uiTypeIsMutated";
        this._workspaceTemplateIsMutated = "_workspaceTemplateIsMutated";
        this.activeEndDate = "activeEndDate";
        this.activeStartDate = "activeStartDate";
        this.createdDate = "createdDate";
        this._id = "_id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.parentQuoteBlock = "parentQuoteBlock";
        this.product = "product";
        this.rootDescription = "rootDescription";
        this.rootName = "rootName";
        this.uiDescription = "uiDescription";
        this.uiName = "uiName";
        this.uiType = "uiType";
        this.workspaceTemplate = "workspaceTemplate";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.QuoteBlock";
        this.mongDataModeName = "QuoteBlock";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class QuoteBlock extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._activeEndDateIsMutated = false;
        this._activeStartDateIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._isRemoveFromRelationship = false;
        this._isRemoveFromRelationshipIsMutated = false;
        this._organizationIsMutated = false;
        this._parentQuoteBlockIsMutated = false;
        this._productIsMutated = false;
        this._rootDescriptionIsMutated = false;
        this._rootNameIsMutated = false;
        this._uiDescriptionIsMutated = false;
        this._uiNameIsMutated = false;
        this._uiTypeIsMutated = false;
        this._workspaceTemplateIsMutated = false;
        this.activeEndDate = null;
        this.activeStartDate = null;
        this.id = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.QuoteBlock";
        this.organization = null;
        this.parentQuoteBlock = null;
        this.product = null;
        this.rootDescription = null;
        this.rootName = null;
        this.uiDescription = null;
        this.uiName = null;
        this.uiType = null;
        this.workspaceTemplate = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._activeEndDateIsMutated = false;
        this._activeStartDateIsMutated = false;
        this._organizationIsMutated = false;
        this._parentQuoteBlockIsMutated = false;
        this._productIsMutated = false;
        this._rootDescriptionIsMutated = false;
        this._rootNameIsMutated = false;
        this._uiDescriptionIsMutated = false;
        this._uiNameIsMutated = false;
        this._uiTypeIsMutated = false;
        this._workspaceTemplateIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.QuoteBlock");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveEndDateMutated() {
        return (this._activeEndDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveStartDateMutated() {
        return (this._activeStartDateIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationship() {
        return (this._isRemoveFromRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationshipMutated() {
        return (this._isRemoveFromRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsParentQuoteBlockMutated() {
        return (this._parentQuoteBlockIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsProductMutated() {
        return (this._productIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRootDescriptionMutated() {
        return (this._rootDescriptionIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRootNameMutated() {
        return (this._rootNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsUiDescriptionMutated() {
        return (this._uiDescriptionIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsUiNameMutated() {
        return (this._uiNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsUiTypeMutated() {
        return (this._uiTypeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWorkspaceTemplateMutated() {
        return (this._workspaceTemplateIsMutated);
    }
    /**
     * The active end date for the product attribute.
     * @returns Date | null
     */
    getActiveEndDate() {
        return (this.activeEndDate);
    }
    /**
     * The active start date for the product attribute.
     * @returns Date | null
     */
    getActiveStartDate() {
        return (this.activeStartDate);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The tenant Organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * The Parent QuoteBlock.
     * @returns QuoteBlock | null
     */
    getParentQuoteBlock() {
        return (this.parentQuoteBlock);
    }
    /**
     * The Product this QuoteBlock belongs to.
     * @returns Product | null
     */
    getProduct() {
        return (this.product);
    }
    /**
     * The top parent description for a quoteblock.
     * @returns string | null
     */
    getRootDescription() {
        return (this.rootDescription);
    }
    /**
     * The top parent name for a quoteblock.
     * @returns string | null
     */
    getRootName() {
        return (this.rootName);
    }
    /**
     * The uiDescription of the product.
     * @returns string | null
     */
    getUiDescription() {
        return (this.uiDescription);
    }
    /**
     * The uiName of the product.
     * @returns string | null
     */
    getUiName() {
        return (this.uiName);
    }
    /**
     * The uiType of the product. CHECKBOX, PRODUCT, RADIO, SELECT, TEXTAREA, TEXTFIELD
     * @returns string | null
     */
    getUiType() {
        return (this.uiType);
    }
    /**
     * The workspace template this attribute belongs to.
     * @returns WorkspaceTemplate | null
     */
    getWorkspaceTemplate() {
        return (this.workspaceTemplate);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveEndDateMutated(_activeEndDateIsMutated) {
        this._activeEndDateIsMutated = _activeEndDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveStartDateMutated(_activeStartDateIsMutated) {
        this._activeStartDateIsMutated = _activeStartDateIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationship(_isRemoveFromRelationship) {
        if (this._isRemoveFromRelationship !== _isRemoveFromRelationship) {
            this._setIsRemoveFromRelationshipMutated(true);
        }
        this._isRemoveFromRelationship = _isRemoveFromRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationshipMutated(_isRemoveFromRelationshipIsMutated) {
        this._isRemoveFromRelationshipIsMutated = _isRemoveFromRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsParentQuoteBlockMutated(_parentQuoteBlockIsMutated) {
        this._parentQuoteBlockIsMutated = _parentQuoteBlockIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsProductMutated(_productIsMutated) {
        this._productIsMutated = _productIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRootDescriptionMutated(_rootDescriptionIsMutated) {
        this._rootDescriptionIsMutated = _rootDescriptionIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRootNameMutated(_rootNameIsMutated) {
        this._rootNameIsMutated = _rootNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsUiDescriptionMutated(_uiDescriptionIsMutated) {
        this._uiDescriptionIsMutated = _uiDescriptionIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsUiNameMutated(_uiNameIsMutated) {
        this._uiNameIsMutated = _uiNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsUiTypeMutated(_uiTypeIsMutated) {
        this._uiTypeIsMutated = _uiTypeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWorkspaceTemplateMutated(_workspaceTemplateIsMutated) {
        this._workspaceTemplateIsMutated = _workspaceTemplateIsMutated;
        return (this);
    }
    /**
* ```
     * The active end date for the product attribute.
* ```
     */
    setActiveEndDate(activeEndDate) {
        if (!this._getIsMutateSuppressed() && this.activeEndDate !== activeEndDate) {
            this._setIsActiveEndDateMutated(true);
        }
        this.activeEndDate = activeEndDate;
        return (this);
    }
    /**
* ```
     * The active start date for the product attribute.
* ```
     */
    setActiveStartDate(activeStartDate) {
        if (!this._getIsMutateSuppressed() && this.activeStartDate !== activeStartDate) {
            this._setIsActiveStartDateMutated(true);
        }
        this.activeStartDate = activeStartDate;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The tenant Organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * The Parent QuoteBlock.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setParentQuoteBlock(parentQuoteBlock, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.parentQuoteBlock !== parentQuoteBlock) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(parentQuoteBlock, persistanceType);
            this._setIsParentQuoteBlockMutated(true);
        }
        this.parentQuoteBlock = parentQuoteBlock;
        return (this);
    }
    /**
* ```
     * The Product this QuoteBlock belongs to.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setProduct(product, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.product !== product) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(product, persistanceType);
            this._setIsProductMutated(true);
        }
        this.product = product;
        return (this);
    }
    /**
* ```
     * The top parent description for a quoteblock.
* ```
     */
    setRootDescription(rootDescription) {
        if (!this._getIsMutateSuppressed() && this.rootDescription !== rootDescription) {
            this._setIsRootDescriptionMutated(true);
        }
        this.rootDescription = rootDescription;
        return (this);
    }
    /**
* ```
     * The top parent name for a quoteblock.
* ```
     */
    setRootName(rootName) {
        if (!this._getIsMutateSuppressed() && this.rootName !== rootName) {
            this._setIsRootNameMutated(true);
        }
        this.rootName = rootName;
        return (this);
    }
    /**
* ```
     * The uiDescription of the product.
* ```
     */
    setUiDescription(uiDescription) {
        if (!this._getIsMutateSuppressed() && this.uiDescription !== uiDescription) {
            this._setIsUiDescriptionMutated(true);
        }
        this.uiDescription = uiDescription;
        return (this);
    }
    /**
* ```
     * The uiName of the product.
* ```
     */
    setUiName(uiName) {
        if (!this._getIsMutateSuppressed() && this.uiName !== uiName) {
            this._setIsUiNameMutated(true);
        }
        this.uiName = uiName;
        return (this);
    }
    /**
* ```
     * The uiType of the product. CHECKBOX, PRODUCT, RADIO, SELECT, TEXTAREA, TEXTFIELD
* ```
     */
    setUiType(uiType) {
        if (!this._getIsMutateSuppressed() && this.uiType !== uiType) {
            this._setIsUiTypeMutated(true);
        }
        this.uiType = uiType;
        return (this);
    }
    /**
* ```
     * The workspace template this attribute belongs to.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setWorkspaceTemplate(workspaceTemplate, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.workspaceTemplate !== workspaceTemplate) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(workspaceTemplate, persistanceType);
            this._setIsWorkspaceTemplateMutated(true);
        }
        this.workspaceTemplate = workspaceTemplate;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_isRemoveFromRelationship',
            value: this._isRemoveFromRelationship
        });
        this._setCurrentState2({
            attributeName: 'activeEndDate',
            value: this.activeEndDate
        });
        this._setCurrentState2({
            attributeName: 'activeStartDate',
            value: this.activeStartDate
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setCurrentState2({
            attributeName: 'parentQuoteBlock',
            value: this.parentQuoteBlock
        });
        this._setCurrentState2({
            attributeName: 'product',
            value: this.product
        });
        this._setCurrentState2({
            attributeName: 'rootDescription',
            value: this.rootDescription
        });
        this._setCurrentState2({
            attributeName: 'rootName',
            value: this.rootName
        });
        this._setCurrentState2({
            attributeName: 'uiDescription',
            value: this.uiDescription
        });
        this._setCurrentState2({
            attributeName: 'uiName',
            value: this.uiName
        });
        this._setCurrentState2({
            attributeName: 'uiType',
            value: this.uiType
        });
        this._setCurrentState2({
            attributeName: 'workspaceTemplate',
            value: this.workspaceTemplate
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_isRemoveFromRelationship',
            value: this._isRemoveFromRelationship
        });
        this._setInitializedState2({
            attributeName: 'activeEndDate',
            value: this.activeEndDate
        });
        this._setInitializedState2({
            attributeName: 'activeStartDate',
            value: this.activeStartDate
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setInitializedState2({
            attributeName: 'parentQuoteBlock',
            value: this.parentQuoteBlock
        });
        this._setInitializedState2({
            attributeName: 'product',
            value: this.product
        });
        this._setInitializedState2({
            attributeName: 'rootDescription',
            value: this.rootDescription
        });
        this._setInitializedState2({
            attributeName: 'rootName',
            value: this.rootName
        });
        this._setInitializedState2({
            attributeName: 'uiDescription',
            value: this.uiDescription
        });
        this._setInitializedState2({
            attributeName: 'uiName',
            value: this.uiName
        });
        this._setInitializedState2({
            attributeName: 'uiType',
            value: this.uiType
        });
        this._setInitializedState2({
            attributeName: 'workspaceTemplate',
            value: this.workspaceTemplate
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this._isRemoveFromRelationship);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.activeEndDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.activeStartDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organization);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.parentQuoteBlock);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.product);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.rootDescription);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.rootName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.uiDescription);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.uiName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.uiType);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.workspaceTemplate);
        return (hashCode_n);
    }
}
exports.QuoteBlock = QuoteBlock;
QuoteBlock.metaDataForQuoteBlock = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.QuoteBlock", QuoteBlock);
//# sourceMappingURL=QuoteBlock.js.map