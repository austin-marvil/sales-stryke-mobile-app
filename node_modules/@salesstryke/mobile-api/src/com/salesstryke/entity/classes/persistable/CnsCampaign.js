"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CnsCampaign = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const EntityUtils_1 = require("../../../utils/entity/EntityUtils");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistenceType_1 = require("../../../data/PersistenceType");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._awsDataIsMutated = "_awsDataIsMutated";
        this._cnsCampaignListIsMutated = "_cnsCampaignListIsMutated";
        this._cnsCampaignTypeIsMutated = "_cnsCampaignTypeIsMutated";
        this._cnsMessageTemplateIsMutated = "_cnsMessageTemplateIsMutated";
        this._cnsSegmentIsMutated = "_cnsSegmentIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._endpointIsMutated = "_endpointIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._nameIsMutated = "_nameIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this.awsData = "awsData";
        this.cnsCampaignList = "cnsCampaignList";
        this.cnsCampaignType = "cnsCampaignType";
        this.cnsMessageTemplate = "cnsMessageTemplate";
        this.cnsSegment = "cnsSegment";
        this.createdDate = "createdDate";
        this.description = "description";
        this.endpoint = "endpoint";
        this.id = "id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._awsDataIsMutated = "_awsDataIsMutated";
        this._cnsCampaignListIsMutated = "_cnsCampaignListIsMutated";
        this._cnsCampaignTypeIsMutated = "_cnsCampaignTypeIsMutated";
        this._cnsMessageTemplateIsMutated = "_cnsMessageTemplateIsMutated";
        this._cnsSegmentIsMutated = "_cnsSegmentIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._endpointIsMutated = "_endpointIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._nameIsMutated = "_nameIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this.awsData = "awsData";
        this.cnsCampaignList = "cnsCampaignList";
        this.cnsCampaignType = "cnsCampaignType";
        this.cnsMessageTemplate = "cnsMessageTemplate";
        this.cnsSegment = "cnsSegment";
        this.createdDate = "createdDate";
        this.description = "description";
        this.endpoint = "endpoint";
        this._id = "_id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.CnsCampaign";
        this.mongDataModeName = "CnsCampaign";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class CnsCampaign extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._awsDataIsMutated = false;
        this._cnsCampaignListIsMutated = false;
        this._cnsCampaignTypeIsMutated = false;
        this._cnsMessageTemplateIsMutated = false;
        this._cnsSegmentIsMutated = false;
        this._descriptionIsMutated = false;
        this._endpointIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._nameIsMutated = false;
        this.awsData = null;
        this.cnsCampaignList = null;
        this.cnsCampaignType = null;
        this.cnsMessageTemplate = new Array();
        this.cnsSegment = null;
        this.description = null;
        this.endpoint = null;
        this.id = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.CnsCampaign";
        this.name = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._awsDataIsMutated = false;
        this._cnsCampaignListIsMutated = false;
        this._cnsCampaignTypeIsMutated = false;
        this._cnsMessageTemplateIsMutated = false;
        this._cnsSegmentIsMutated = false;
        this._descriptionIsMutated = false;
        this._endpointIsMutated = false;
        this._nameIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.CnsCampaign");
    }
    /**
     * Template that are use in this campaign.
     *
     * Default PersistenceType : PersistenceType.ATTACH
     */
    addCnsMessageTemplate(cnsMessageTemplate, persistanceType = PersistenceType_1.PersistenceType.ATTACH) {
        if (this._getIsTrackingMutations()) {
            cnsMessageTemplate._trackMutations();
        }
        cnsMessageTemplate._setRelationshipPersistableType(persistanceType.getId());
        this.cnsMessageTemplate.push(cnsMessageTemplate);
        return (this);
    }
    /**
     * Template that are use in this campaign.
     * If the Entity ID is null, will not be added.
     * Default PersistenceType : PersistenceType.DETACH
     */
    removeCnsMessageTemplate(cnsMessageTemplate, persistanceType = PersistenceType_1.PersistenceType.DETACH) {
        if (this._getIsTrackingMutations()) {
            cnsMessageTemplate._trackMutations();
        }
        if (persistanceType === PersistenceType_1.PersistenceType.NONE) {
            let index = this.cnsMessageTemplate.findIndex(obj => obj === cnsMessageTemplate);
            if (index !== -1) {
                this.cnsMessageTemplate.splice(index, 1);
            }
            cnsMessageTemplate._setRelationshipPersistableType(PersistenceType_1.PersistenceType.NONE.getId());
            return (this);
        }
        cnsMessageTemplate._setRelationshipPersistableType(persistanceType.getId());
        this.cnsMessageTemplate.push(cnsMessageTemplate);
        return (this);
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsAwsDataMutated() {
        return (this._awsDataIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCnsCampaignListMutated() {
        return (this._cnsCampaignListIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCnsCampaignTypeMutated() {
        return (this._cnsCampaignTypeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCnsMessageTemplateMutated() {
        return (this._cnsMessageTemplateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCnsSegmentMutated() {
        return (this._cnsSegmentIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDescriptionMutated() {
        return (this._descriptionIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsEndpointMutated() {
        return (this._endpointIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     * AWS Date for this cns campaign, such as the id.
     * @returns Object
     */
    getAwsData() {
        return EntityUtils_1.EntityUtils.jsonStringGetter({ value: this.awsData || '' });
    }
    /**
     * Campaign cnsCampaignList.
     * @returns CnsCampaignList | null
     */
    getCnsCampaignList() {
        return (this.cnsCampaignList);
    }
    /**
     * Campaign type.
     * @returns string | null
     */
    getCnsCampaignType() {
        return (this.cnsCampaignType);
    }
    /**
     * Template that are use in this campaign.
     * @returns Array<CnsMessageTemplate>
     */
    getCnsMessageTemplate() {
        return (this.cnsMessageTemplate);
    }
    /**
     * Campaign segment.
     * @returns CnsSegment | null
     */
    getCnsSegment() {
        return (this.cnsSegment);
    }
    /**
     * Campaign description.
     * @returns string | null
     */
    getDescription() {
        return (this.description);
    }
    /**
     * Data for endpoint, should the cnsCampaignType be endpoint.
     * @returns string | null
     */
    getEndpoint() {
        return (this.endpoint);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The name of the campaign.
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAwsDataMutated(_awsDataIsMutated) {
        this._awsDataIsMutated = _awsDataIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCnsCampaignListMutated(_cnsCampaignListIsMutated) {
        this._cnsCampaignListIsMutated = _cnsCampaignListIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCnsCampaignTypeMutated(_cnsCampaignTypeIsMutated) {
        this._cnsCampaignTypeIsMutated = _cnsCampaignTypeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCnsMessageTemplateMutated(_cnsMessageTemplateIsMutated) {
        this._cnsMessageTemplateIsMutated = _cnsMessageTemplateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCnsSegmentMutated(_cnsSegmentIsMutated) {
        this._cnsSegmentIsMutated = _cnsSegmentIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDescriptionMutated(_descriptionIsMutated) {
        this._descriptionIsMutated = _descriptionIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsEndpointMutated(_endpointIsMutated) {
        this._endpointIsMutated = _endpointIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     * AWS Date for this cns campaign, such as the id.
* ```
     */
    setAwsData(awsData) {
        if (!this._getIsMutateSuppressed() && this.awsData !== EntityUtils_1.EntityUtils.jsonStringSetter({ value: awsData })) {
            this._setIsAwsDataMutated(true);
        }
        this.awsData = EntityUtils_1.EntityUtils.jsonStringSetter({ value: awsData });
        return (this);
    }
    /**
* ```
     * Campaign cnsCampaignList.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setCnsCampaignList(cnsCampaignList, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.cnsCampaignList !== cnsCampaignList) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(cnsCampaignList, persistanceType);
            this._setIsCnsCampaignListMutated(true);
        }
        this.cnsCampaignList = cnsCampaignList;
        return (this);
    }
    /**
* ```
     * Campaign type.
* ```
     */
    setCnsCampaignType(cnsCampaignType) {
        if (!this._getIsMutateSuppressed() && this.cnsCampaignType !== cnsCampaignType) {
            this._setIsCnsCampaignTypeMutated(true);
        }
        this.cnsCampaignType = cnsCampaignType;
        return (this);
    }
    /**
* ```
     * Template that are use in this campaign.
* ```
     */
    setCnsMessageTemplate(cnsMessageTemplate) {
        if (!this._getIsMutateSuppressed() && this.cnsMessageTemplate !== cnsMessageTemplate) {
            this._setIsCnsMessageTemplateMutated(true);
        }
        this.cnsMessageTemplate = cnsMessageTemplate;
        return (this);
    }
    /**
* ```
     * Campaign segment.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setCnsSegment(cnsSegment, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.cnsSegment !== cnsSegment) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(cnsSegment, persistanceType);
            this._setIsCnsSegmentMutated(true);
        }
        this.cnsSegment = cnsSegment;
        return (this);
    }
    /**
* ```
     * Campaign description.
* ```
     */
    setDescription(description) {
        if (!this._getIsMutateSuppressed() && this.description !== description) {
            this._setIsDescriptionMutated(true);
        }
        this.description = description;
        return (this);
    }
    /**
* ```
     * Data for endpoint, should the cnsCampaignType be endpoint.
* ```
     */
    setEndpoint(endpoint) {
        if (!this._getIsMutateSuppressed() && this.endpoint !== endpoint) {
            this._setIsEndpointMutated(true);
        }
        this.endpoint = endpoint;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The name of the campaign.
* ```
     */
    setName(name) {
        if (!this._getIsMutateSuppressed() && this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setCurrentState2({
            attributeName: 'awsData',
            value: this.awsData
        });
        this._setCurrentState2({
            attributeName: 'cnsCampaignList',
            value: this.cnsCampaignList
        });
        this._setCurrentState2({
            attributeName: 'cnsCampaignType',
            value: this.cnsCampaignType
        });
        this._setCurrentState2({
            attributeName: 'cnsMessageTemplate',
            value: this.cnsMessageTemplate
        });
        this._setCurrentState2({
            attributeName: 'cnsSegment',
            value: this.cnsSegment
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'description',
            value: this.description
        });
        this._setCurrentState2({
            attributeName: 'endpoint',
            value: this.endpoint
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'name',
            value: this.name
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setInitializedState2({
            attributeName: 'awsData',
            value: this.awsData
        });
        this._setInitializedState2({
            attributeName: 'cnsCampaignList',
            value: this.cnsCampaignList
        });
        this._setInitializedState2({
            attributeName: 'cnsCampaignType',
            value: this.cnsCampaignType
        });
        this._setInitializedState2({
            attributeName: 'cnsMessageTemplate',
            value: this.cnsMessageTemplate
        });
        this._setInitializedState2({
            attributeName: 'cnsSegment',
            value: this.cnsSegment
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'description',
            value: this.description
        });
        this._setInitializedState2({
            attributeName: 'endpoint',
            value: this.endpoint
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'name',
            value: this.name
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.awsData);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.cnsCampaignList);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.cnsCampaignType);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.cnsMessageTemplate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.cnsSegment);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.description);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.endpoint);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.name);
        return (hashCode_n);
    }
}
exports.CnsCampaign = CnsCampaign;
CnsCampaign.metaDataForCnsCampaign = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.CnsCampaign", CnsCampaign);
//# sourceMappingURL=CnsCampaign.js.map