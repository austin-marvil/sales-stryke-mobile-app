"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Identity = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiRecordBase_1 = require("../../../jsonApi/JsonApiRecordBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
class EntityAttributes {
    constructor() {
        this._firstNameIsMutated = "_firstNameIsMutated";
        this._isAuthenticatedIsMutated = "_isAuthenticatedIsMutated";
        this._jwtTokenIsMutated = "_jwtTokenIsMutated";
        this._lastNameIsMutated = "_lastNameIsMutated";
        this._organizationIdIsMutated = "_organizationIdIsMutated";
        this.firstName = "firstName";
        this.isAuthenticated = "isAuthenticated";
        this.jwtToken = "jwtToken";
        this.lastName = "lastName";
        this.organizationId = "organizationId";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._firstNameIsMutated = "_firstNameIsMutated";
        this._isAuthenticatedIsMutated = "_isAuthenticatedIsMutated";
        this._jwtTokenIsMutated = "_jwtTokenIsMutated";
        this._lastNameIsMutated = "_lastNameIsMutated";
        this._organizationIdIsMutated = "_organizationIdIsMutated";
        this.firstName = "firstName";
        this.isAuthenticated = "isAuthenticated";
        this.jwtToken = "jwtToken";
        this.lastName = "lastName";
        this.organizationId = "organizationId";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.record.Identity";
        this.mongDataModeName = "Identity";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class Identity extends JsonApiRecordBase_1.JsonApiRecordBase {
    constructor(p) {
        super(p);
        this._firstNameIsMutated = false;
        this._isAuthenticatedIsMutated = false;
        this._jwtTokenIsMutated = false;
        this._lastNameIsMutated = false;
        this._organizationIdIsMutated = false;
        this.firstName = null;
        this.isAuthenticated = false;
        this.jwtToken = null;
        this.lastName = null;
        this.organizationId = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.record.Identity");
    }
    /**
     *
     * @returns boolean
     */
    _getIsFirstNameMutated() {
        return (this._firstNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAuthenticatedMutated() {
        return (this._isAuthenticatedIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsJwtTokenMutated() {
        return (this._jwtTokenIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLastNameMutated() {
        return (this._lastNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationIdMutated() {
        return (this._organizationIdIsMutated);
    }
    /**
     * The users first name.
     * @returns string | null
     */
    getFirstName() {
        return (this.firstName);
    }
    /**
     * The users first name.
     * @returns boolean
     */
    getIsAuthenticated() {
        return (this.isAuthenticated);
    }
    /**
     * The jwtToken for Authentication
     * @returns string | null
     */
    getJwtToken() {
        return (this.jwtToken);
    }
    /**
     * The users last name.
     * @returns string | null
     */
    getLastName() {
        return (this.lastName);
    }
    /**
     * The organization of the identity.
     * @returns string | null
     */
    getOrganizationId() {
        return (this.organizationId);
    }
    /**
* ```
     *
* ```
     */
    _setIsFirstNameMutated(_firstNameIsMutated) {
        this._firstNameIsMutated = _firstNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAuthenticatedMutated(_isAuthenticatedIsMutated) {
        this._isAuthenticatedIsMutated = _isAuthenticatedIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsJwtTokenMutated(_jwtTokenIsMutated) {
        this._jwtTokenIsMutated = _jwtTokenIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLastNameMutated(_lastNameIsMutated) {
        this._lastNameIsMutated = _lastNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationIdMutated(_organizationIdIsMutated) {
        this._organizationIdIsMutated = _organizationIdIsMutated;
        return (this);
    }
    /**
* ```
     * The users first name.
* ```
     */
    setFirstName(firstName) {
        if (this.firstName !== firstName) {
            this._setIsFirstNameMutated(true);
        }
        this.firstName = firstName;
        return (this);
    }
    /**
* ```
     * The users first name.
* ```
     */
    setIsAuthenticated(isAuthenticated) {
        if (this.isAuthenticated !== isAuthenticated) {
            this._setIsAuthenticatedMutated(true);
        }
        this.isAuthenticated = isAuthenticated;
        return (this);
    }
    /**
* ```
     * The jwtToken for Authentication
* ```
     */
    setJwtToken(jwtToken) {
        if (this.jwtToken !== jwtToken) {
            this._setIsJwtTokenMutated(true);
        }
        this.jwtToken = jwtToken;
        return (this);
    }
    /**
* ```
     * The users last name.
* ```
     */
    setLastName(lastName) {
        if (this.lastName !== lastName) {
            this._setIsLastNameMutated(true);
        }
        this.lastName = lastName;
        return (this);
    }
    /**
* ```
     * The organization of the identity.
* ```
     */
    setOrganizationId(organizationId) {
        if (this.organizationId !== organizationId) {
            this._setIsOrganizationIdMutated(true);
        }
        this.organizationId = organizationId;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'firstName',
            value: this.firstName
        });
        this._setCurrentState2({
            attributeName: 'isAuthenticated',
            value: this.isAuthenticated
        });
        this._setCurrentState2({
            attributeName: 'jwtToken',
            value: this.jwtToken
        });
        this._setCurrentState2({
            attributeName: 'lastName',
            value: this.lastName
        });
        this._setCurrentState2({
            attributeName: 'organizationId',
            value: this.organizationId
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'firstName',
            value: this.firstName
        });
        this._setInitializedState2({
            attributeName: 'isAuthenticated',
            value: this.isAuthenticated
        });
        this._setInitializedState2({
            attributeName: 'jwtToken',
            value: this.jwtToken
        });
        this._setInitializedState2({
            attributeName: 'lastName',
            value: this.lastName
        });
        this._setInitializedState2({
            attributeName: 'organizationId',
            value: this.organizationId
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.firstName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isAuthenticated);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.jwtToken);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.lastName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organizationId);
        return (hashCode_n);
    }
}
exports.Identity = Identity;
Identity.metaDataForIdentity = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.record.Identity", Identity);
//# sourceMappingURL=Identity.js.map