"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceTemplate = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistenceType_1 = require("../../../data/PersistenceType");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._activeEndDateIsMutated = "_activeEndDateIsMutated";
        this._activeStartDateIsMutated = "_activeStartDateIsMutated";
        this._decriptionIsMutated = "_decriptionIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isActiveIsMutated = "_isActiveIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._pandaDocTemplateUUIDIsMutated = "_pandaDocTemplateUUIDIsMutated";
        this._quoteBlockIsMutated = "_quoteBlockIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._workspaceIsMutated = "_workspaceIsMutated";
        this._workspaceTemplateAttributesIsMutated = "_workspaceTemplateAttributesIsMutated";
        this.activeEndDate = "activeEndDate";
        this.activeStartDate = "activeStartDate";
        this.createdDate = "createdDate";
        this.decription = "decription";
        this.id = "id";
        this.isActive = "isActive";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.pandaDocTemplateUUID = "pandaDocTemplateUUID";
        this.quoteBlock = "quoteBlock";
        this.workspace = "workspace";
        this.workspaceTemplateAttributes = "workspaceTemplateAttributes";
    }
}
class MongoVirtual {
    constructor() {
        this.workspaceTemplateAttributes = "workspaceTemplateAttributes";
    }
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._activeEndDateIsMutated = "_activeEndDateIsMutated";
        this._activeStartDateIsMutated = "_activeStartDateIsMutated";
        this._decriptionIsMutated = "_decriptionIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isActiveIsMutated = "_isActiveIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._pandaDocTemplateUUIDIsMutated = "_pandaDocTemplateUUIDIsMutated";
        this._quoteBlockIsMutated = "_quoteBlockIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._workspaceIsMutated = "_workspaceIsMutated";
        this._workspaceTemplateAttributesIsMutated = "_workspaceTemplateAttributesIsMutated";
        this.activeEndDate = "activeEndDate";
        this.activeStartDate = "activeStartDate";
        this.createdDate = "createdDate";
        this.decription = "decription";
        this._id = "_id";
        this.isActive = "isActive";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.pandaDocTemplateUUID = "pandaDocTemplateUUID";
        this.quoteBlock = "quoteBlock";
        this.workspace = "workspace";
        this.workspaceTemplateAttributes = "workspaceTemplateAttributes";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.WorkspaceTemplate";
        this.mongDataModeName = "WorkspaceTemplate";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class WorkspaceTemplate extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._activeEndDateIsMutated = false;
        this._activeStartDateIsMutated = false;
        this._decriptionIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isActiveIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._isRemoveFromRelationship = false;
        this._isRemoveFromRelationshipIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._pandaDocTemplateUUIDIsMutated = false;
        this._quoteBlockIsMutated = false;
        this._workspaceIsMutated = false;
        this._workspaceTemplateAttributesIsMutated = false;
        this.activeEndDate = null;
        this.activeStartDate = null;
        this.decription = null;
        this.id = null;
        this.isActive = undefined;
        this.jsonType = "com.salesstryke.entity.classes.persistable.WorkspaceTemplate";
        this.name = null;
        this.organization = null;
        this.pandaDocTemplateUUID = null;
        this.quoteBlock = null;
        this.workspace = null;
        this.workspaceTemplateAttributes = new Array();
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._activeEndDateIsMutated = false;
        this._activeStartDateIsMutated = false;
        this._decriptionIsMutated = false;
        this._isActiveIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._pandaDocTemplateUUIDIsMutated = false;
        this._quoteBlockIsMutated = false;
        this._workspaceIsMutated = false;
        this._workspaceTemplateAttributesIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.WorkspaceTemplate");
    }
    /**
     * The workspace template attributes.
     *
     * Default PersistenceType : PersistenceType.ATTACH
     */
    addWorkspaceTemplateAttribute(workspaceTemplateAttribute, persistanceType = PersistenceType_1.PersistenceType.ATTACH) {
        if (this._getIsTrackingMutations()) {
            workspaceTemplateAttribute._trackMutations();
        }
        workspaceTemplateAttribute._setRelationshipPersistableType(persistanceType.getId());
        this.workspaceTemplateAttributes.push(workspaceTemplateAttribute);
        return (this);
    }
    /**
     * The workspace template attributes.
     * If the Entity ID is null, will not be added.
     * Default PersistenceType : PersistenceType.DETACH
     */
    removeWorkspaceTemplateAttribute(workspaceTemplateAttribute, persistanceType = PersistenceType_1.PersistenceType.DETACH) {
        if (this._getIsTrackingMutations()) {
            workspaceTemplateAttribute._trackMutations();
        }
        if (persistanceType === PersistenceType_1.PersistenceType.NONE) {
            let index = this.workspaceTemplateAttributes.findIndex(obj => obj === workspaceTemplateAttribute);
            if (index !== -1) {
                this.workspaceTemplateAttributes.splice(index, 1);
            }
            workspaceTemplateAttribute._setRelationshipPersistableType(PersistenceType_1.PersistenceType.NONE.getId());
            return (this);
        }
        workspaceTemplateAttribute._setRelationshipPersistableType(persistanceType.getId());
        this.workspaceTemplateAttributes.push(workspaceTemplateAttribute);
        return (this);
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveEndDateMutated() {
        return (this._activeEndDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveStartDateMutated() {
        return (this._activeStartDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDecriptionMutated() {
        return (this._decriptionIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveMutated() {
        return (this._isActiveIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationship() {
        return (this._isRemoveFromRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationshipMutated() {
        return (this._isRemoveFromRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocTemplateUUIDMutated() {
        return (this._pandaDocTemplateUUIDIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsQuoteBlockMutated() {
        return (this._quoteBlockIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWorkspaceMutated() {
        return (this._workspaceIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWorkspaceTemplateAttributesMutated() {
        return (this._workspaceTemplateAttributesIsMutated);
    }
    /**
     * The template active end date.
     * @returns Date | null
     */
    getActiveEndDate() {
        return (this.activeEndDate);
    }
    /**
     * The template active start date.
     * @returns Date | null
     */
    getActiveStartDate() {
        return (this.activeStartDate);
    }
    /**
     * The workspace description.
     * @returns string | null
     */
    getDecription() {
        return (this.decription);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     * Identifies if the WorkSpace is active.
     * @returns boolean
     */
    getIsActive() {
        return ((this.isActive === undefined) ? false : this.isActive);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The data type
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * The tenant Organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * The PandaDoc Template UUID
     * @returns string | null
     */
    getPandaDocTemplateUUID() {
        return (this.pandaDocTemplateUUID);
    }
    /**
     * The quoteblock.
     * @returns QuoteBlock | null
     */
    getQuoteBlock() {
        return (this.quoteBlock);
    }
    /**
     * The workspace this template belongs to.
     * @returns Workspace | null
     */
    getWorkspace() {
        return (this.workspace);
    }
    /**
     * The workspace template attributes.
     * @returns Array<WorkspaceTemplateAttribute>
     */
    getWorkspaceTemplateAttributes() {
        return (this.workspaceTemplateAttributes);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveEndDateMutated(_activeEndDateIsMutated) {
        this._activeEndDateIsMutated = _activeEndDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveStartDateMutated(_activeStartDateIsMutated) {
        this._activeStartDateIsMutated = _activeStartDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDecriptionMutated(_decriptionIsMutated) {
        this._decriptionIsMutated = _decriptionIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveMutated(_isActiveIsMutated) {
        this._isActiveIsMutated = _isActiveIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationship(_isRemoveFromRelationship) {
        if (this._isRemoveFromRelationship !== _isRemoveFromRelationship) {
            this._setIsRemoveFromRelationshipMutated(true);
        }
        this._isRemoveFromRelationship = _isRemoveFromRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationshipMutated(_isRemoveFromRelationshipIsMutated) {
        this._isRemoveFromRelationshipIsMutated = _isRemoveFromRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocTemplateUUIDMutated(_pandaDocTemplateUUIDIsMutated) {
        this._pandaDocTemplateUUIDIsMutated = _pandaDocTemplateUUIDIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsQuoteBlockMutated(_quoteBlockIsMutated) {
        this._quoteBlockIsMutated = _quoteBlockIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWorkspaceMutated(_workspaceIsMutated) {
        this._workspaceIsMutated = _workspaceIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWorkspaceTemplateAttributesMutated(_workspaceTemplateAttributesIsMutated) {
        this._workspaceTemplateAttributesIsMutated = _workspaceTemplateAttributesIsMutated;
        return (this);
    }
    /**
* ```
     * The template active end date.
* ```
     */
    setActiveEndDate(activeEndDate) {
        if (!this._getIsMutateSuppressed() && this.activeEndDate !== activeEndDate) {
            this._setIsActiveEndDateMutated(true);
        }
        this.activeEndDate = activeEndDate;
        return (this);
    }
    /**
* ```
     * The template active start date.
* ```
     */
    setActiveStartDate(activeStartDate) {
        if (!this._getIsMutateSuppressed() && this.activeStartDate !== activeStartDate) {
            this._setIsActiveStartDateMutated(true);
        }
        this.activeStartDate = activeStartDate;
        return (this);
    }
    /**
* ```
     * The workspace description.
* ```
     */
    setDecription(decription) {
        if (!this._getIsMutateSuppressed() && this.decription !== decription) {
            this._setIsDecriptionMutated(true);
        }
        this.decription = decription;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     * Identifies if the WorkSpace is active.
* ```
     */
    setIsActive(isActive) {
        if (!this._getIsMutateSuppressed() && this.isActive !== isActive) {
            this._setIsActiveMutated(true);
        }
        this.isActive = isActive;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The data type
* ```
     */
    setName(name) {
        if (!this._getIsMutateSuppressed() && this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
* ```
     * The tenant Organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * The PandaDoc Template UUID
* ```
     */
    setPandaDocTemplateUUID(pandaDocTemplateUUID) {
        if (!this._getIsMutateSuppressed() && this.pandaDocTemplateUUID !== pandaDocTemplateUUID) {
            this._setIsPandaDocTemplateUUIDMutated(true);
        }
        this.pandaDocTemplateUUID = pandaDocTemplateUUID;
        return (this);
    }
    /**
* ```
     * The quoteblock.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setQuoteBlock(quoteBlock, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.quoteBlock !== quoteBlock) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(quoteBlock, persistanceType);
            this._setIsQuoteBlockMutated(true);
        }
        this.quoteBlock = quoteBlock;
        return (this);
    }
    /**
* ```
     * The workspace this template belongs to.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setWorkspace(workspace, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.workspace !== workspace) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(workspace, persistanceType);
            this._setIsWorkspaceMutated(true);
        }
        this.workspace = workspace;
        return (this);
    }
    /**
* ```
     * The workspace template attributes.
* ```
     */
    setWorkspaceTemplateAttributes(workspaceTemplateAttributes) {
        if (!this._getIsMutateSuppressed() && this.workspaceTemplateAttributes !== workspaceTemplateAttributes) {
            this._setIsWorkspaceTemplateAttributesMutated(true);
        }
        this.workspaceTemplateAttributes = workspaceTemplateAttributes;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_isRemoveFromRelationship',
            value: this._isRemoveFromRelationship
        });
        this._setCurrentState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setCurrentState2({
            attributeName: 'activeEndDate',
            value: this.activeEndDate
        });
        this._setCurrentState2({
            attributeName: 'activeStartDate',
            value: this.activeStartDate
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'decription',
            value: this.decription
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'isActive',
            value: this.isActive
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'name',
            value: this.name
        });
        this._setCurrentState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setCurrentState2({
            attributeName: 'pandaDocTemplateUUID',
            value: this.pandaDocTemplateUUID
        });
        this._setCurrentState2({
            attributeName: 'quoteBlock',
            value: this.quoteBlock
        });
        this._setCurrentState2({
            attributeName: 'workspace',
            value: this.workspace
        });
        this._setCurrentState2({
            attributeName: 'workspaceTemplateAttributes',
            value: this.workspaceTemplateAttributes
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_isRemoveFromRelationship',
            value: this._isRemoveFromRelationship
        });
        this._setInitializedState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setInitializedState2({
            attributeName: 'activeEndDate',
            value: this.activeEndDate
        });
        this._setInitializedState2({
            attributeName: 'activeStartDate',
            value: this.activeStartDate
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'decription',
            value: this.decription
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'isActive',
            value: this.isActive
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'name',
            value: this.name
        });
        this._setInitializedState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setInitializedState2({
            attributeName: 'pandaDocTemplateUUID',
            value: this.pandaDocTemplateUUID
        });
        this._setInitializedState2({
            attributeName: 'quoteBlock',
            value: this.quoteBlock
        });
        this._setInitializedState2({
            attributeName: 'workspace',
            value: this.workspace
        });
        this._setInitializedState2({
            attributeName: 'workspaceTemplateAttributes',
            value: this.workspaceTemplateAttributes
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this._isRemoveFromRelationship);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.activeEndDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.activeStartDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.decription);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isActive);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.name);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organization);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocTemplateUUID);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.quoteBlock);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.workspace);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.workspaceTemplateAttributes);
        return (hashCode_n);
    }
}
exports.WorkspaceTemplate = WorkspaceTemplate;
WorkspaceTemplate.metaDataForWorkspaceTemplate = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.WorkspaceTemplate", WorkspaceTemplate);
//# sourceMappingURL=WorkspaceTemplate.js.map