/**
 * This file is auto generated DO NOT EDIT.
 */
import { JsonApiRecordBase } from '../../../../jsonApi/JsonApiRecordBase';
declare class EntityAttributes {
    _apiIsMutated: string;
    _errorDataStringIsMutated: string;
    _errorMessageIsMutated: string;
    _namespaceIsMutated: string;
    _UUIDIsMutated: string;
    api: string;
    errorDataString: string;
    errorMessage: string;
    jsonType: string;
    namespace: string;
    UUID: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _apiIsMutated: string;
    _errorDataStringIsMutated: string;
    _errorMessageIsMutated: string;
    _namespaceIsMutated: string;
    _UUIDIsMutated: string;
    api: string;
    errorDataString: string;
    errorMessage: string;
    jsonType: string;
    namespace: string;
    UUID: string;
}
declare class MetaData {
    namespace: string;
    mongDataModeName: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class EmailNotificationError extends JsonApiRecordBase {
    static metaDataForEmailNotificationError: MetaData;
    private _apiIsMutated;
    private _errorDataStringIsMutated;
    private _errorMessageIsMutated;
    private _namespaceIsMutated;
    private _UUIDIsMutated;
    private api;
    private errorDataString;
    private errorMessage;
    private jsonType;
    private namespace;
    private UUID;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): EmailNotificationError;
    getClassName(): string;
    /**
     *
     * @returns boolean
     */
    _getIsApiMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsErrorDataStringMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsErrorMessageMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsNamespaceMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsUUIDMutated(): boolean;
    /**
     * api of the error
     * @returns string | null
     */
    getApi(): string | null;
    /**
     * errorDataString of the error
     * @returns string | null
     */
    getErrorDataString(): string | null;
    /**
     * errorMessage of the error
     * @returns string | null
     */
    getErrorMessage(): string | null;
    /**
     *
     * @returns string | null
     */
    getJsonType(): string | null;
    /**
     * namespace of the error
     * @returns string | null
     */
    getNamespace(): string | null;
    /**
     * UUID of the error
     * @returns string | null
     */
    getUUID(): string | null;
    /**
* ```
     *
* ```
     */
    _setIsApiMutated(_apiIsMutated: boolean): EmailNotificationError;
    /**
* ```
     *
* ```
     */
    _setIsErrorDataStringMutated(_errorDataStringIsMutated: boolean): EmailNotificationError;
    /**
* ```
     *
* ```
     */
    _setIsErrorMessageMutated(_errorMessageIsMutated: boolean): EmailNotificationError;
    /**
* ```
     *
* ```
     */
    _setIsNamespaceMutated(_namespaceIsMutated: boolean): EmailNotificationError;
    /**
* ```
     *
* ```
     */
    _setIsUUIDMutated(_UUIDIsMutated: boolean): EmailNotificationError;
    /**
* ```
     * api of the error
* ```
     */
    setApi(api: string | null): EmailNotificationError;
    /**
* ```
     * errorDataString of the error
* ```
     */
    setErrorDataString(errorDataString: string | null): EmailNotificationError;
    /**
* ```
     * errorMessage of the error
* ```
     */
    setErrorMessage(errorMessage: string | null): EmailNotificationError;
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType: string | null): EmailNotificationError;
    /**
* ```
     * namespace of the error
* ```
     */
    setNamespace(namespace: string | null): EmailNotificationError;
    /**
* ```
     * UUID of the error
* ```
     */
    setUUID(UUID: string | null): EmailNotificationError;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
