"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportNotificationUserSync = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
class EntityAttributes {
    constructor() {
        this._BillingAmountDueIsMutated = "_BillingAmountDueIsMutated";
        this._BillingCellPhoneNumberIsMutated = "_BillingCellPhoneNumberIsMutated";
        this._BillingCityIsMutated = "_BillingCityIsMutated";
        this._BillingCountyIsMutated = "_BillingCountyIsMutated";
        this._BillingDueDateIsMutated = "_BillingDueDateIsMutated";
        this._BillingDueNotificationDateIsMutated = "_BillingDueNotificationDateIsMutated";
        this._BillingEmailAddressIsMutated = "_BillingEmailAddressIsMutated";
        this._BillingFirstNameIsMutated = "_BillingFirstNameIsMutated";
        this._BillingLastNameIsMutated = "_BillingLastNameIsMutated";
        this._BillingPastDueAmountIsMutated = "_BillingPastDueAmountIsMutated";
        this._BillingStartDateIsMutated = "_BillingStartDateIsMutated";
        this._BillingStateIsMutated = "_BillingStateIsMutated";
        this._BillingZipCodeIsMutated = "_BillingZipCodeIsMutated";
        this._CustomerIdIsMutated = "_CustomerIdIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._ImportHashCodeIsMutated = "_ImportHashCodeIsMutated";
        this._ImportSyncManagerIsMutated = "_ImportSyncManagerIsMutated";
        this._ImportUserNotificationSyncIsMutated = "_ImportUserNotificationSyncIsMutated";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._IsActiveInClientSystemIsMutated = "_IsActiveInClientSystemIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._IsServiceAddressSameAsBillingAddressIsMutated = "_IsServiceAddressSameAsBillingAddressIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._LastRegistrationRequestSentDateIsMutated = "_LastRegistrationRequestSentDateIsMutated";
        this._SalesStrykeOrganizationIdIsMutated = "_SalesStrykeOrganizationIdIsMutated";
        this._ServiceBinDeliveryDateIsMutated = "_ServiceBinDeliveryDateIsMutated";
        this._ServiceBinQuantityIsMutated = "_ServiceBinQuantityIsMutated";
        this._ServiceBinSizeIsMutated = "_ServiceBinSizeIsMutated";
        this._ServiceBinTypeIsMutated = "_ServiceBinTypeIsMutated";
        this._ServiceCellPhoneNumberIsMutated = "_ServiceCellPhoneNumberIsMutated";
        this._ServiceCityIsMutated = "_ServiceCityIsMutated";
        this._ServiceCountyIsMutated = "_ServiceCountyIsMutated";
        this._ServiceEmailAddressIsMutated = "_ServiceEmailAddressIsMutated";
        this._ServiceFirstNameIsMutated = "_ServiceFirstNameIsMutated";
        this._ServiceLastNameIsMutated = "_ServiceLastNameIsMutated";
        this._ServiceRouteDayOfWeekIsMutated = "_ServiceRouteDayOfWeekIsMutated";
        this._ServiceRouteFrequencyIsMutated = "_ServiceRouteFrequencyIsMutated";
        this._ServiceRouteNotificationDateIsMutated = "_ServiceRouteNotificationDateIsMutated";
        this._ServiceRouteRouteIsMutated = "_ServiceRouteRouteIsMutated";
        this._ServiceStartDateIsMutated = "_ServiceStartDateIsMutated";
        this._ServiceStateIsMutated = "_ServiceStateIsMutated";
        this._ServiceStopDateIsMutated = "_ServiceStopDateIsMutated";
        this._ServiceZipCodeIsMutated = "_ServiceZipCodeIsMutated";
        this.BillingAmountDue = "BillingAmountDue";
        this.BillingCellPhoneNumber = "BillingCellPhoneNumber";
        this.BillingCity = "BillingCity";
        this.BillingCounty = "BillingCounty";
        this.BillingDueDate = "BillingDueDate";
        this.BillingDueNotificationDate = "BillingDueNotificationDate";
        this.BillingEmailAddress = "BillingEmailAddress";
        this.BillingFirstName = "BillingFirstName";
        this.BillingLastName = "BillingLastName";
        this.BillingPastDueAmount = "BillingPastDueAmount";
        this.BillingStartDate = "BillingStartDate";
        this.BillingState = "BillingState";
        this.BillingZipCode = "BillingZipCode";
        this.createdDate = "createdDate";
        this.CustomerId = "CustomerId";
        this.id = "id";
        this.ImportHashCode = "ImportHashCode";
        this.ImportSyncManager = "ImportSyncManager";
        this.ImportUserNotificationSync = "ImportUserNotificationSync";
        this.IsActiveInClientSystem = "IsActiveInClientSystem";
        this.IsServiceAddressSameAsBillingAddress = "IsServiceAddressSameAsBillingAddress";
        this.jsonType = "jsonType";
        this.LastRegistrationRequestSentDate = "LastRegistrationRequestSentDate";
        this.modifiedDate = "modifiedDate";
        this.SalesStrykeOrganizationId = "SalesStrykeOrganizationId";
        this.ServiceBinDeliveryDate = "ServiceBinDeliveryDate";
        this.ServiceBinQuantity = "ServiceBinQuantity";
        this.ServiceBinSize = "ServiceBinSize";
        this.ServiceBinType = "ServiceBinType";
        this.ServiceCellPhoneNumber = "ServiceCellPhoneNumber";
        this.ServiceCity = "ServiceCity";
        this.ServiceCounty = "ServiceCounty";
        this.ServiceEmailAddress = "ServiceEmailAddress";
        this.ServiceFirstName = "ServiceFirstName";
        this.ServiceLastName = "ServiceLastName";
        this.ServiceRouteDayOfWeek = "ServiceRouteDayOfWeek";
        this.ServiceRouteFrequency = "ServiceRouteFrequency";
        this.ServiceRouteNotificationDate = "ServiceRouteNotificationDate";
        this.ServiceRouteRoute = "ServiceRouteRoute";
        this.ServiceStartDate = "ServiceStartDate";
        this.ServiceState = "ServiceState";
        this.ServiceStopDate = "ServiceStopDate";
        this.ServiceZipCode = "ServiceZipCode";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._BillingAmountDueIsMutated = "_BillingAmountDueIsMutated";
        this._BillingCellPhoneNumberIsMutated = "_BillingCellPhoneNumberIsMutated";
        this._BillingCityIsMutated = "_BillingCityIsMutated";
        this._BillingCountyIsMutated = "_BillingCountyIsMutated";
        this._BillingDueDateIsMutated = "_BillingDueDateIsMutated";
        this._BillingDueNotificationDateIsMutated = "_BillingDueNotificationDateIsMutated";
        this._BillingEmailAddressIsMutated = "_BillingEmailAddressIsMutated";
        this._BillingFirstNameIsMutated = "_BillingFirstNameIsMutated";
        this._BillingLastNameIsMutated = "_BillingLastNameIsMutated";
        this._BillingPastDueAmountIsMutated = "_BillingPastDueAmountIsMutated";
        this._BillingStartDateIsMutated = "_BillingStartDateIsMutated";
        this._BillingStateIsMutated = "_BillingStateIsMutated";
        this._BillingZipCodeIsMutated = "_BillingZipCodeIsMutated";
        this._CustomerIdIsMutated = "_CustomerIdIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._ImportHashCodeIsMutated = "_ImportHashCodeIsMutated";
        this._ImportSyncManagerIsMutated = "_ImportSyncManagerIsMutated";
        this._ImportUserNotificationSyncIsMutated = "_ImportUserNotificationSyncIsMutated";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._IsActiveInClientSystemIsMutated = "_IsActiveInClientSystemIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._IsServiceAddressSameAsBillingAddressIsMutated = "_IsServiceAddressSameAsBillingAddressIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._LastRegistrationRequestSentDateIsMutated = "_LastRegistrationRequestSentDateIsMutated";
        this._SalesStrykeOrganizationIdIsMutated = "_SalesStrykeOrganizationIdIsMutated";
        this._ServiceBinDeliveryDateIsMutated = "_ServiceBinDeliveryDateIsMutated";
        this._ServiceBinQuantityIsMutated = "_ServiceBinQuantityIsMutated";
        this._ServiceBinSizeIsMutated = "_ServiceBinSizeIsMutated";
        this._ServiceBinTypeIsMutated = "_ServiceBinTypeIsMutated";
        this._ServiceCellPhoneNumberIsMutated = "_ServiceCellPhoneNumberIsMutated";
        this._ServiceCityIsMutated = "_ServiceCityIsMutated";
        this._ServiceCountyIsMutated = "_ServiceCountyIsMutated";
        this._ServiceEmailAddressIsMutated = "_ServiceEmailAddressIsMutated";
        this._ServiceFirstNameIsMutated = "_ServiceFirstNameIsMutated";
        this._ServiceLastNameIsMutated = "_ServiceLastNameIsMutated";
        this._ServiceRouteDayOfWeekIsMutated = "_ServiceRouteDayOfWeekIsMutated";
        this._ServiceRouteFrequencyIsMutated = "_ServiceRouteFrequencyIsMutated";
        this._ServiceRouteNotificationDateIsMutated = "_ServiceRouteNotificationDateIsMutated";
        this._ServiceRouteRouteIsMutated = "_ServiceRouteRouteIsMutated";
        this._ServiceStartDateIsMutated = "_ServiceStartDateIsMutated";
        this._ServiceStateIsMutated = "_ServiceStateIsMutated";
        this._ServiceStopDateIsMutated = "_ServiceStopDateIsMutated";
        this._ServiceZipCodeIsMutated = "_ServiceZipCodeIsMutated";
        this.BillingAmountDue = "BillingAmountDue";
        this.BillingCellPhoneNumber = "BillingCellPhoneNumber";
        this.BillingCity = "BillingCity";
        this.BillingCounty = "BillingCounty";
        this.BillingDueDate = "BillingDueDate";
        this.BillingDueNotificationDate = "BillingDueNotificationDate";
        this.BillingEmailAddress = "BillingEmailAddress";
        this.BillingFirstName = "BillingFirstName";
        this.BillingLastName = "BillingLastName";
        this.BillingPastDueAmount = "BillingPastDueAmount";
        this.BillingStartDate = "BillingStartDate";
        this.BillingState = "BillingState";
        this.BillingZipCode = "BillingZipCode";
        this.createdDate = "createdDate";
        this.CustomerId = "CustomerId";
        this._id = "_id";
        this.ImportHashCode = "ImportHashCode";
        this.ImportSyncManager = "ImportSyncManager";
        this.ImportUserNotificationSync = "ImportUserNotificationSync";
        this.IsActiveInClientSystem = "IsActiveInClientSystem";
        this.IsServiceAddressSameAsBillingAddress = "IsServiceAddressSameAsBillingAddress";
        this.jsonType = "jsonType";
        this.LastRegistrationRequestSentDate = "LastRegistrationRequestSentDate";
        this.modifiedDate = "modifiedDate";
        this.SalesStrykeOrganizationId = "SalesStrykeOrganizationId";
        this.ServiceBinDeliveryDate = "ServiceBinDeliveryDate";
        this.ServiceBinQuantity = "ServiceBinQuantity";
        this.ServiceBinSize = "ServiceBinSize";
        this.ServiceBinType = "ServiceBinType";
        this.ServiceCellPhoneNumber = "ServiceCellPhoneNumber";
        this.ServiceCity = "ServiceCity";
        this.ServiceCounty = "ServiceCounty";
        this.ServiceEmailAddress = "ServiceEmailAddress";
        this.ServiceFirstName = "ServiceFirstName";
        this.ServiceLastName = "ServiceLastName";
        this.ServiceRouteDayOfWeek = "ServiceRouteDayOfWeek";
        this.ServiceRouteFrequency = "ServiceRouteFrequency";
        this.ServiceRouteNotificationDate = "ServiceRouteNotificationDate";
        this.ServiceRouteRoute = "ServiceRouteRoute";
        this.ServiceStartDate = "ServiceStartDate";
        this.ServiceState = "ServiceState";
        this.ServiceStopDate = "ServiceStopDate";
        this.ServiceZipCode = "ServiceZipCode";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.ImportNotificationUserSync";
        this.mongDataModeName = "ImportNotificationUserSync";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class ImportNotificationUserSync extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._BillingAmountDueIsMutated = false;
        this._BillingCellPhoneNumberIsMutated = false;
        this._BillingCityIsMutated = false;
        this._BillingCountyIsMutated = false;
        this._BillingDueDateIsMutated = false;
        this._BillingDueNotificationDateIsMutated = false;
        this._BillingEmailAddressIsMutated = false;
        this._BillingFirstNameIsMutated = false;
        this._BillingLastNameIsMutated = false;
        this._BillingPastDueAmountIsMutated = false;
        this._BillingStartDateIsMutated = false;
        this._BillingStateIsMutated = false;
        this._BillingZipCodeIsMutated = false;
        this._CustomerIdIsMutated = false;
        this._idSetBySystem = false;
        this._ImportHashCodeIsMutated = false;
        this._ImportSyncManagerIsMutated = false;
        this._ImportUserNotificationSyncIsMutated = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._IsActiveInClientSystemIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._IsServiceAddressSameAsBillingAddressIsMutated = false;
        this._LastRegistrationRequestSentDateIsMutated = false;
        this._SalesStrykeOrganizationIdIsMutated = false;
        this._ServiceBinDeliveryDateIsMutated = false;
        this._ServiceBinQuantityIsMutated = false;
        this._ServiceBinSizeIsMutated = false;
        this._ServiceBinTypeIsMutated = false;
        this._ServiceCellPhoneNumberIsMutated = false;
        this._ServiceCityIsMutated = false;
        this._ServiceCountyIsMutated = false;
        this._ServiceEmailAddressIsMutated = false;
        this._ServiceFirstNameIsMutated = false;
        this._ServiceLastNameIsMutated = false;
        this._ServiceRouteDayOfWeekIsMutated = false;
        this._ServiceRouteFrequencyIsMutated = false;
        this._ServiceRouteNotificationDateIsMutated = false;
        this._ServiceRouteRouteIsMutated = false;
        this._ServiceStartDateIsMutated = false;
        this._ServiceStateIsMutated = false;
        this._ServiceStopDateIsMutated = false;
        this._ServiceZipCodeIsMutated = false;
        this.BillingAmountDue = null;
        this.BillingCellPhoneNumber = null;
        this.BillingCity = null;
        this.BillingCounty = null;
        this.BillingDueDate = null;
        this.BillingDueNotificationDate = null;
        this.BillingEmailAddress = null;
        this.BillingFirstName = null;
        this.BillingLastName = null;
        this.BillingPastDueAmount = 0;
        this.BillingStartDate = null;
        this.BillingState = null;
        this.BillingZipCode = null;
        this.CustomerId = null;
        this.id = null;
        this.ImportHashCode = null;
        this.ImportSyncManager = null;
        this.ImportUserNotificationSync = null;
        this.IsActiveInClientSystem = undefined;
        this.IsServiceAddressSameAsBillingAddress = undefined;
        this.jsonType = "com.salesstryke.entity.classes.persistable.ImportNotificationUserSync";
        this.LastRegistrationRequestSentDate = null;
        this.SalesStrykeOrganizationId = null;
        this.ServiceBinDeliveryDate = null;
        this.ServiceBinQuantity = 0;
        this.ServiceBinSize = null;
        this.ServiceBinType = null;
        this.ServiceCellPhoneNumber = null;
        this.ServiceCity = null;
        this.ServiceCounty = null;
        this.ServiceEmailAddress = null;
        this.ServiceFirstName = null;
        this.ServiceLastName = null;
        this.ServiceRouteDayOfWeek = null;
        this.ServiceRouteFrequency = 0;
        this.ServiceRouteNotificationDate = null;
        this.ServiceRouteRoute = null;
        this.ServiceStartDate = null;
        this.ServiceState = null;
        this.ServiceStopDate = null;
        this.ServiceZipCode = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._BillingAmountDueIsMutated = false;
        this._BillingCellPhoneNumberIsMutated = false;
        this._BillingCityIsMutated = false;
        this._BillingCountyIsMutated = false;
        this._BillingDueDateIsMutated = false;
        this._BillingDueNotificationDateIsMutated = false;
        this._BillingEmailAddressIsMutated = false;
        this._BillingFirstNameIsMutated = false;
        this._BillingLastNameIsMutated = false;
        this._BillingPastDueAmountIsMutated = false;
        this._BillingStartDateIsMutated = false;
        this._BillingStateIsMutated = false;
        this._BillingZipCodeIsMutated = false;
        this._CustomerIdIsMutated = false;
        this._ImportHashCodeIsMutated = false;
        this._ImportSyncManagerIsMutated = false;
        this._ImportUserNotificationSyncIsMutated = false;
        this._IsActiveInClientSystemIsMutated = false;
        this._IsServiceAddressSameAsBillingAddressIsMutated = false;
        this._LastRegistrationRequestSentDateIsMutated = false;
        this._SalesStrykeOrganizationIdIsMutated = false;
        this._ServiceBinDeliveryDateIsMutated = false;
        this._ServiceBinQuantityIsMutated = false;
        this._ServiceBinSizeIsMutated = false;
        this._ServiceBinTypeIsMutated = false;
        this._ServiceCellPhoneNumberIsMutated = false;
        this._ServiceCityIsMutated = false;
        this._ServiceCountyIsMutated = false;
        this._ServiceEmailAddressIsMutated = false;
        this._ServiceFirstNameIsMutated = false;
        this._ServiceLastNameIsMutated = false;
        this._ServiceRouteDayOfWeekIsMutated = false;
        this._ServiceRouteFrequencyIsMutated = false;
        this._ServiceRouteNotificationDateIsMutated = false;
        this._ServiceRouteRouteIsMutated = false;
        this._ServiceStartDateIsMutated = false;
        this._ServiceStateIsMutated = false;
        this._ServiceStopDateIsMutated = false;
        this._ServiceZipCodeIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.ImportNotificationUserSync");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingAmountDueMutated() {
        return (this._BillingAmountDueIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingCellPhoneNumberMutated() {
        return (this._BillingCellPhoneNumberIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingCityMutated() {
        return (this._BillingCityIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingCountyMutated() {
        return (this._BillingCountyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingDueDateMutated() {
        return (this._BillingDueDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingDueNotificationDateMutated() {
        return (this._BillingDueNotificationDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingEmailAddressMutated() {
        return (this._BillingEmailAddressIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingFirstNameMutated() {
        return (this._BillingFirstNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingLastNameMutated() {
        return (this._BillingLastNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingPastDueAmountMutated() {
        return (this._BillingPastDueAmountIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingStartDateMutated() {
        return (this._BillingStartDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingStateMutated() {
        return (this._BillingStateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingZipCodeMutated() {
        return (this._BillingZipCodeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCustomerIdMutated() {
        return (this._CustomerIdIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     *
     * @returns boolean
     */
    _getIsImportHashCodeMutated() {
        return (this._ImportHashCodeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsImportSyncManagerMutated() {
        return (this._ImportSyncManagerIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsImportUserNotificationSyncMutated() {
        return (this._ImportUserNotificationSyncIsMutated);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveInClientSystemMutated() {
        return (this._IsActiveInClientSystemIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceAddressSameAsBillingAddressMutated() {
        return (this._IsServiceAddressSameAsBillingAddressIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLastRegistrationRequestSentDateMutated() {
        return (this._LastRegistrationRequestSentDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSalesStrykeOrganizationIdMutated() {
        return (this._SalesStrykeOrganizationIdIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceBinDeliveryDateMutated() {
        return (this._ServiceBinDeliveryDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceBinQuantityMutated() {
        return (this._ServiceBinQuantityIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceBinSizeMutated() {
        return (this._ServiceBinSizeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceBinTypeMutated() {
        return (this._ServiceBinTypeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceCellPhoneNumberMutated() {
        return (this._ServiceCellPhoneNumberIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceCityMutated() {
        return (this._ServiceCityIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceCountyMutated() {
        return (this._ServiceCountyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceEmailAddressMutated() {
        return (this._ServiceEmailAddressIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceFirstNameMutated() {
        return (this._ServiceFirstNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceLastNameMutated() {
        return (this._ServiceLastNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceRouteDayOfWeekMutated() {
        return (this._ServiceRouteDayOfWeekIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceRouteFrequencyMutated() {
        return (this._ServiceRouteFrequencyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceRouteNotificationDateMutated() {
        return (this._ServiceRouteNotificationDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceRouteRouteMutated() {
        return (this._ServiceRouteRouteIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceStartDateMutated() {
        return (this._ServiceStartDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceStateMutated() {
        return (this._ServiceStateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceStopDateMutated() {
        return (this._ServiceStopDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceZipCodeMutated() {
        return (this._ServiceZipCodeIsMutated);
    }
    /**
     * Billing amount due.
     * @returns Date | null
     */
    getBillingAmountDue() {
        return (this.BillingAmountDue);
    }
    /**
     * Billing phone number.
     * @returns string | null
     */
    getBillingCellPhoneNumber() {
        return (this.BillingCellPhoneNumber);
    }
    /**
     * Billing city.
     * @returns string | null
     */
    getBillingCity() {
        return (this.BillingCity);
    }
    /**
     * Billing county.
     * @returns string | null
     */
    getBillingCounty() {
        return (this.BillingCounty);
    }
    /**
     * Billing due date.
     * @returns Date | null
     */
    getBillingDueDate() {
        return (this.BillingDueDate);
    }
    /**
     * Billing due notification date.
     * @returns Date | null
     */
    getBillingDueNotificationDate() {
        return (this.BillingDueNotificationDate);
    }
    /**
     * Billing email address.
     * @returns string | null
     */
    getBillingEmailAddress() {
        return (this.BillingEmailAddress);
    }
    /**
     * Billing first name.
     * @returns string | null
     */
    getBillingFirstName() {
        return (this.BillingFirstName);
    }
    /**
     * Billing last name.
     * @returns string | null
     */
    getBillingLastName() {
        return (this.BillingLastName);
    }
    /**
     * Billing past due amount.
     * @returns number
     */
    getBillingPastDueAmount() {
        return (this.BillingPastDueAmount);
    }
    /**
     * Billing start date.
     * @returns Date | null
     */
    getBillingStartDate() {
        return (this.BillingStartDate);
    }
    /**
     * Billing state.
     * @returns string | null
     */
    getBillingState() {
        return (this.BillingState);
    }
    /**
     * Billing zip code.
     * @returns string | null
     */
    getBillingZipCode() {
        return (this.BillingZipCode);
    }
    /**
     * Customer ID.
     * @returns string | null
     */
    getCustomerId() {
        return (this.CustomerId);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     * Import Hash Code.
     * @returns string | null
     */
    getImportHashCode() {
        return (this.ImportHashCode);
    }
    /**
     * Import Sync Manager.
     * @returns string | null
     */
    getImportSyncManager() {
        return (this.ImportSyncManager);
    }
    /**
     * Import user notification Sync.
     * @returns string | null
     */
    getImportUserNotificationSync() {
        return (this.ImportUserNotificationSync);
    }
    /**
     * Is active in client system.
     * @returns boolean
     */
    getIsActiveInClientSystem() {
        return ((this.IsActiveInClientSystem === undefined) ? false : this.IsActiveInClientSystem);
    }
    /**
     * Boolean to indicate if service and billing address is the same.
     * @returns boolean
     */
    getIsServiceAddressSameAsBillingAddress() {
        return ((this.IsServiceAddressSameAsBillingAddress === undefined) ? false : this.IsServiceAddressSameAsBillingAddress);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * Date indicated when we, Salesstryke, sent a registration email.
     * @returns Date | null
     */
    getLastRegistrationRequestSentDate() {
        return (this.LastRegistrationRequestSentDate);
    }
    /**
     * Id used by us, Salesstyke, to determined organization.
     * @returns string | null
     */
    getSalesStrykeOrganizationId() {
        return (this.SalesStrykeOrganizationId);
    }
    /**
     * Service bin delivery date.
     * @returns Date | null
     */
    getServiceBinDeliveryDate() {
        return (this.ServiceBinDeliveryDate);
    }
    /**
     * Number of service bin.
     * @returns number
     */
    getServiceBinQuantity() {
        return (this.ServiceBinQuantity);
    }
    /**
     * Size of service bin.
     * @returns string | null
     */
    getServiceBinSize() {
        return (this.ServiceBinSize);
    }
    /**
     * Type of service bin.
     * @returns string | null
     */
    getServiceBinType() {
        return (this.ServiceBinType);
    }
    /**
     * Phone number for service location.
     * @returns string | null
     */
    getServiceCellPhoneNumber() {
        return (this.ServiceCellPhoneNumber);
    }
    /**
     * City where service located.
     * @returns string | null
     */
    getServiceCity() {
        return (this.ServiceCity);
    }
    /**
     * County where service located.
     * @returns string | null
     */
    getServiceCounty() {
        return (this.ServiceCounty);
    }
    /**
     * City where service located.
     * @returns string | null
     */
    getServiceEmailAddress() {
        return (this.ServiceEmailAddress);
    }
    /**
     * Email for service location.
     * @returns string | null
     */
    getServiceFirstName() {
        return (this.ServiceFirstName);
    }
    /**
     * Last name of person located for service.
     * @returns string | null
     */
    getServiceLastName() {
        return (this.ServiceLastName);
    }
    /**
     * Name of the days for when service is happening.
     * @returns string | null
     */
    getServiceRouteDayOfWeek() {
        return (this.ServiceRouteDayOfWeek);
    }
    /**
     * Frequency of how many time location get serviced.
     * @returns number
     */
    getServiceRouteFrequency() {
        return (this.ServiceRouteFrequency);
    }
    /**
     * Service route notification date.
     * @returns Date | null
     */
    getServiceRouteNotificationDate() {
        return (this.ServiceRouteNotificationDate);
    }
    /**
     * Route number or id of the service route.
     * @returns string | null
     */
    getServiceRouteRoute() {
        return (this.ServiceRouteRoute);
    }
    /**
     * When service started, or should start.
     * @returns Date | null
     */
    getServiceStartDate() {
        return (this.ServiceStartDate);
    }
    /**
     * State of service location.
     * @returns string | null
     */
    getServiceState() {
        return (this.ServiceState);
    }
    /**
     * When service stopped, or should stop.
     * @returns Date | null
     */
    getServiceStopDate() {
        return (this.ServiceStopDate);
    }
    /**
     * Zip code of service location.
     * @returns string | null
     */
    getServiceZipCode() {
        return (this.ServiceZipCode);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingAmountDueMutated(_BillingAmountDueIsMutated) {
        this._BillingAmountDueIsMutated = _BillingAmountDueIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingCellPhoneNumberMutated(_BillingCellPhoneNumberIsMutated) {
        this._BillingCellPhoneNumberIsMutated = _BillingCellPhoneNumberIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingCityMutated(_BillingCityIsMutated) {
        this._BillingCityIsMutated = _BillingCityIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingCountyMutated(_BillingCountyIsMutated) {
        this._BillingCountyIsMutated = _BillingCountyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingDueDateMutated(_BillingDueDateIsMutated) {
        this._BillingDueDateIsMutated = _BillingDueDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingDueNotificationDateMutated(_BillingDueNotificationDateIsMutated) {
        this._BillingDueNotificationDateIsMutated = _BillingDueNotificationDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingEmailAddressMutated(_BillingEmailAddressIsMutated) {
        this._BillingEmailAddressIsMutated = _BillingEmailAddressIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingFirstNameMutated(_BillingFirstNameIsMutated) {
        this._BillingFirstNameIsMutated = _BillingFirstNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingLastNameMutated(_BillingLastNameIsMutated) {
        this._BillingLastNameIsMutated = _BillingLastNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingPastDueAmountMutated(_BillingPastDueAmountIsMutated) {
        this._BillingPastDueAmountIsMutated = _BillingPastDueAmountIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingStartDateMutated(_BillingStartDateIsMutated) {
        this._BillingStartDateIsMutated = _BillingStartDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingStateMutated(_BillingStateIsMutated) {
        this._BillingStateIsMutated = _BillingStateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingZipCodeMutated(_BillingZipCodeIsMutated) {
        this._BillingZipCodeIsMutated = _BillingZipCodeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCustomerIdMutated(_CustomerIdIsMutated) {
        this._CustomerIdIsMutated = _CustomerIdIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsImportHashCodeMutated(_ImportHashCodeIsMutated) {
        this._ImportHashCodeIsMutated = _ImportHashCodeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsImportSyncManagerMutated(_ImportSyncManagerIsMutated) {
        this._ImportSyncManagerIsMutated = _ImportSyncManagerIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsImportUserNotificationSyncMutated(_ImportUserNotificationSyncIsMutated) {
        this._ImportUserNotificationSyncIsMutated = _ImportUserNotificationSyncIsMutated;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveInClientSystemMutated(_IsActiveInClientSystemIsMutated) {
        this._IsActiveInClientSystemIsMutated = _IsActiveInClientSystemIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceAddressSameAsBillingAddressMutated(_IsServiceAddressSameAsBillingAddressIsMutated) {
        this._IsServiceAddressSameAsBillingAddressIsMutated = _IsServiceAddressSameAsBillingAddressIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLastRegistrationRequestSentDateMutated(_LastRegistrationRequestSentDateIsMutated) {
        this._LastRegistrationRequestSentDateIsMutated = _LastRegistrationRequestSentDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSalesStrykeOrganizationIdMutated(_SalesStrykeOrganizationIdIsMutated) {
        this._SalesStrykeOrganizationIdIsMutated = _SalesStrykeOrganizationIdIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceBinDeliveryDateMutated(_ServiceBinDeliveryDateIsMutated) {
        this._ServiceBinDeliveryDateIsMutated = _ServiceBinDeliveryDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceBinQuantityMutated(_ServiceBinQuantityIsMutated) {
        this._ServiceBinQuantityIsMutated = _ServiceBinQuantityIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceBinSizeMutated(_ServiceBinSizeIsMutated) {
        this._ServiceBinSizeIsMutated = _ServiceBinSizeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceBinTypeMutated(_ServiceBinTypeIsMutated) {
        this._ServiceBinTypeIsMutated = _ServiceBinTypeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceCellPhoneNumberMutated(_ServiceCellPhoneNumberIsMutated) {
        this._ServiceCellPhoneNumberIsMutated = _ServiceCellPhoneNumberIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceCityMutated(_ServiceCityIsMutated) {
        this._ServiceCityIsMutated = _ServiceCityIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceCountyMutated(_ServiceCountyIsMutated) {
        this._ServiceCountyIsMutated = _ServiceCountyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceEmailAddressMutated(_ServiceEmailAddressIsMutated) {
        this._ServiceEmailAddressIsMutated = _ServiceEmailAddressIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceFirstNameMutated(_ServiceFirstNameIsMutated) {
        this._ServiceFirstNameIsMutated = _ServiceFirstNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceLastNameMutated(_ServiceLastNameIsMutated) {
        this._ServiceLastNameIsMutated = _ServiceLastNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceRouteDayOfWeekMutated(_ServiceRouteDayOfWeekIsMutated) {
        this._ServiceRouteDayOfWeekIsMutated = _ServiceRouteDayOfWeekIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceRouteFrequencyMutated(_ServiceRouteFrequencyIsMutated) {
        this._ServiceRouteFrequencyIsMutated = _ServiceRouteFrequencyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceRouteNotificationDateMutated(_ServiceRouteNotificationDateIsMutated) {
        this._ServiceRouteNotificationDateIsMutated = _ServiceRouteNotificationDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceRouteRouteMutated(_ServiceRouteRouteIsMutated) {
        this._ServiceRouteRouteIsMutated = _ServiceRouteRouteIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceStartDateMutated(_ServiceStartDateIsMutated) {
        this._ServiceStartDateIsMutated = _ServiceStartDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceStateMutated(_ServiceStateIsMutated) {
        this._ServiceStateIsMutated = _ServiceStateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceStopDateMutated(_ServiceStopDateIsMutated) {
        this._ServiceStopDateIsMutated = _ServiceStopDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceZipCodeMutated(_ServiceZipCodeIsMutated) {
        this._ServiceZipCodeIsMutated = _ServiceZipCodeIsMutated;
        return (this);
    }
    /**
* ```
     * Billing amount due.
* ```
     */
    setBillingAmountDue(BillingAmountDue) {
        if (!this._getIsMutateSuppressed() && this.BillingAmountDue !== BillingAmountDue) {
            this._setIsBillingAmountDueMutated(true);
        }
        this.BillingAmountDue = BillingAmountDue;
        return (this);
    }
    /**
* ```
     * Billing phone number.
* ```
     */
    setBillingCellPhoneNumber(BillingCellPhoneNumber) {
        if (!this._getIsMutateSuppressed() && this.BillingCellPhoneNumber !== BillingCellPhoneNumber) {
            this._setIsBillingCellPhoneNumberMutated(true);
        }
        this.BillingCellPhoneNumber = BillingCellPhoneNumber;
        return (this);
    }
    /**
* ```
     * Billing city.
* ```
     */
    setBillingCity(BillingCity) {
        if (!this._getIsMutateSuppressed() && this.BillingCity !== BillingCity) {
            this._setIsBillingCityMutated(true);
        }
        this.BillingCity = BillingCity;
        return (this);
    }
    /**
* ```
     * Billing county.
* ```
     */
    setBillingCounty(BillingCounty) {
        if (!this._getIsMutateSuppressed() && this.BillingCounty !== BillingCounty) {
            this._setIsBillingCountyMutated(true);
        }
        this.BillingCounty = BillingCounty;
        return (this);
    }
    /**
* ```
     * Billing due date.
* ```
     */
    setBillingDueDate(BillingDueDate) {
        if (!this._getIsMutateSuppressed() && this.BillingDueDate !== BillingDueDate) {
            this._setIsBillingDueDateMutated(true);
        }
        this.BillingDueDate = BillingDueDate;
        return (this);
    }
    /**
* ```
     * Billing due notification date.
* ```
     */
    setBillingDueNotificationDate(BillingDueNotificationDate) {
        if (!this._getIsMutateSuppressed() && this.BillingDueNotificationDate !== BillingDueNotificationDate) {
            this._setIsBillingDueNotificationDateMutated(true);
        }
        this.BillingDueNotificationDate = BillingDueNotificationDate;
        return (this);
    }
    /**
* ```
     * Billing email address.
* ```
     */
    setBillingEmailAddress(BillingEmailAddress) {
        if (!this._getIsMutateSuppressed() && this.BillingEmailAddress !== BillingEmailAddress) {
            this._setIsBillingEmailAddressMutated(true);
        }
        this.BillingEmailAddress = BillingEmailAddress;
        return (this);
    }
    /**
* ```
     * Billing first name.
* ```
     */
    setBillingFirstName(BillingFirstName) {
        if (!this._getIsMutateSuppressed() && this.BillingFirstName !== BillingFirstName) {
            this._setIsBillingFirstNameMutated(true);
        }
        this.BillingFirstName = BillingFirstName;
        return (this);
    }
    /**
* ```
     * Billing last name.
* ```
     */
    setBillingLastName(BillingLastName) {
        if (!this._getIsMutateSuppressed() && this.BillingLastName !== BillingLastName) {
            this._setIsBillingLastNameMutated(true);
        }
        this.BillingLastName = BillingLastName;
        return (this);
    }
    /**
* ```
     * Billing past due amount.
* ```
     */
    setBillingPastDueAmount(BillingPastDueAmount) {
        if (!this._getIsMutateSuppressed() && this.BillingPastDueAmount !== BillingPastDueAmount) {
            this._setIsBillingPastDueAmountMutated(true);
        }
        this.BillingPastDueAmount = BillingPastDueAmount;
        return (this);
    }
    /**
* ```
     * Billing start date.
* ```
     */
    setBillingStartDate(BillingStartDate) {
        if (!this._getIsMutateSuppressed() && this.BillingStartDate !== BillingStartDate) {
            this._setIsBillingStartDateMutated(true);
        }
        this.BillingStartDate = BillingStartDate;
        return (this);
    }
    /**
* ```
     * Billing state.
* ```
     */
    setBillingState(BillingState) {
        if (!this._getIsMutateSuppressed() && this.BillingState !== BillingState) {
            this._setIsBillingStateMutated(true);
        }
        this.BillingState = BillingState;
        return (this);
    }
    /**
* ```
     * Billing zip code.
* ```
     */
    setBillingZipCode(BillingZipCode) {
        if (!this._getIsMutateSuppressed() && this.BillingZipCode !== BillingZipCode) {
            this._setIsBillingZipCodeMutated(true);
        }
        this.BillingZipCode = BillingZipCode;
        return (this);
    }
    /**
* ```
     * Customer ID.
* ```
     */
    setCustomerId(CustomerId) {
        if (!this._getIsMutateSuppressed() && this.CustomerId !== CustomerId) {
            this._setIsCustomerIdMutated(true);
        }
        this.CustomerId = CustomerId;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     * Import Hash Code.
* ```
     */
    setImportHashCode(ImportHashCode) {
        if (!this._getIsMutateSuppressed() && this.ImportHashCode !== ImportHashCode) {
            this._setIsImportHashCodeMutated(true);
        }
        this.ImportHashCode = ImportHashCode;
        return (this);
    }
    /**
* ```
     * Import Sync Manager.
* ```
     */
    setImportSyncManager(ImportSyncManager) {
        if (!this._getIsMutateSuppressed() && this.ImportSyncManager !== ImportSyncManager) {
            this._setIsImportSyncManagerMutated(true);
        }
        this.ImportSyncManager = ImportSyncManager;
        return (this);
    }
    /**
* ```
     * Import user notification Sync.
* ```
     */
    setImportUserNotificationSync(ImportUserNotificationSync) {
        if (!this._getIsMutateSuppressed() && this.ImportUserNotificationSync !== ImportUserNotificationSync) {
            this._setIsImportUserNotificationSyncMutated(true);
        }
        this.ImportUserNotificationSync = ImportUserNotificationSync;
        return (this);
    }
    /**
* ```
     * Is active in client system.
* ```
     */
    setIsActiveInClientSystem(IsActiveInClientSystem) {
        if (!this._getIsMutateSuppressed() && this.IsActiveInClientSystem !== IsActiveInClientSystem) {
            this._setIsActiveInClientSystemMutated(true);
        }
        this.IsActiveInClientSystem = IsActiveInClientSystem;
        return (this);
    }
    /**
* ```
     * Boolean to indicate if service and billing address is the same.
* ```
     */
    setIsServiceAddressSameAsBillingAddress(IsServiceAddressSameAsBillingAddress) {
        if (!this._getIsMutateSuppressed() && this.IsServiceAddressSameAsBillingAddress !== IsServiceAddressSameAsBillingAddress) {
            this._setIsServiceAddressSameAsBillingAddressMutated(true);
        }
        this.IsServiceAddressSameAsBillingAddress = IsServiceAddressSameAsBillingAddress;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * Date indicated when we, Salesstryke, sent a registration email.
* ```
     */
    setLastRegistrationRequestSentDate(LastRegistrationRequestSentDate) {
        if (!this._getIsMutateSuppressed() && this.LastRegistrationRequestSentDate !== LastRegistrationRequestSentDate) {
            this._setIsLastRegistrationRequestSentDateMutated(true);
        }
        this.LastRegistrationRequestSentDate = LastRegistrationRequestSentDate;
        return (this);
    }
    /**
* ```
     * Id used by us, Salesstyke, to determined organization.
* ```
     */
    setSalesStrykeOrganizationId(SalesStrykeOrganizationId) {
        if (!this._getIsMutateSuppressed() && this.SalesStrykeOrganizationId !== SalesStrykeOrganizationId) {
            this._setIsSalesStrykeOrganizationIdMutated(true);
        }
        this.SalesStrykeOrganizationId = SalesStrykeOrganizationId;
        return (this);
    }
    /**
* ```
     * Service bin delivery date.
* ```
     */
    setServiceBinDeliveryDate(ServiceBinDeliveryDate) {
        if (!this._getIsMutateSuppressed() && this.ServiceBinDeliveryDate !== ServiceBinDeliveryDate) {
            this._setIsServiceBinDeliveryDateMutated(true);
        }
        this.ServiceBinDeliveryDate = ServiceBinDeliveryDate;
        return (this);
    }
    /**
* ```
     * Number of service bin.
* ```
     */
    setServiceBinQuantity(ServiceBinQuantity) {
        if (!this._getIsMutateSuppressed() && this.ServiceBinQuantity !== ServiceBinQuantity) {
            this._setIsServiceBinQuantityMutated(true);
        }
        this.ServiceBinQuantity = ServiceBinQuantity;
        return (this);
    }
    /**
* ```
     * Size of service bin.
* ```
     */
    setServiceBinSize(ServiceBinSize) {
        if (!this._getIsMutateSuppressed() && this.ServiceBinSize !== ServiceBinSize) {
            this._setIsServiceBinSizeMutated(true);
        }
        this.ServiceBinSize = ServiceBinSize;
        return (this);
    }
    /**
* ```
     * Type of service bin.
* ```
     */
    setServiceBinType(ServiceBinType) {
        if (!this._getIsMutateSuppressed() && this.ServiceBinType !== ServiceBinType) {
            this._setIsServiceBinTypeMutated(true);
        }
        this.ServiceBinType = ServiceBinType;
        return (this);
    }
    /**
* ```
     * Phone number for service location.
* ```
     */
    setServiceCellPhoneNumber(ServiceCellPhoneNumber) {
        if (!this._getIsMutateSuppressed() && this.ServiceCellPhoneNumber !== ServiceCellPhoneNumber) {
            this._setIsServiceCellPhoneNumberMutated(true);
        }
        this.ServiceCellPhoneNumber = ServiceCellPhoneNumber;
        return (this);
    }
    /**
* ```
     * City where service located.
* ```
     */
    setServiceCity(ServiceCity) {
        if (!this._getIsMutateSuppressed() && this.ServiceCity !== ServiceCity) {
            this._setIsServiceCityMutated(true);
        }
        this.ServiceCity = ServiceCity;
        return (this);
    }
    /**
* ```
     * County where service located.
* ```
     */
    setServiceCounty(ServiceCounty) {
        if (!this._getIsMutateSuppressed() && this.ServiceCounty !== ServiceCounty) {
            this._setIsServiceCountyMutated(true);
        }
        this.ServiceCounty = ServiceCounty;
        return (this);
    }
    /**
* ```
     * City where service located.
* ```
     */
    setServiceEmailAddress(ServiceEmailAddress) {
        if (!this._getIsMutateSuppressed() && this.ServiceEmailAddress !== ServiceEmailAddress) {
            this._setIsServiceEmailAddressMutated(true);
        }
        this.ServiceEmailAddress = ServiceEmailAddress;
        return (this);
    }
    /**
* ```
     * Email for service location.
* ```
     */
    setServiceFirstName(ServiceFirstName) {
        if (!this._getIsMutateSuppressed() && this.ServiceFirstName !== ServiceFirstName) {
            this._setIsServiceFirstNameMutated(true);
        }
        this.ServiceFirstName = ServiceFirstName;
        return (this);
    }
    /**
* ```
     * Last name of person located for service.
* ```
     */
    setServiceLastName(ServiceLastName) {
        if (!this._getIsMutateSuppressed() && this.ServiceLastName !== ServiceLastName) {
            this._setIsServiceLastNameMutated(true);
        }
        this.ServiceLastName = ServiceLastName;
        return (this);
    }
    /**
* ```
     * Name of the days for when service is happening.
* ```
     */
    setServiceRouteDayOfWeek(ServiceRouteDayOfWeek) {
        if (!this._getIsMutateSuppressed() && this.ServiceRouteDayOfWeek !== ServiceRouteDayOfWeek) {
            this._setIsServiceRouteDayOfWeekMutated(true);
        }
        this.ServiceRouteDayOfWeek = ServiceRouteDayOfWeek;
        return (this);
    }
    /**
* ```
     * Frequency of how many time location get serviced.
* ```
     */
    setServiceRouteFrequency(ServiceRouteFrequency) {
        if (!this._getIsMutateSuppressed() && this.ServiceRouteFrequency !== ServiceRouteFrequency) {
            this._setIsServiceRouteFrequencyMutated(true);
        }
        this.ServiceRouteFrequency = ServiceRouteFrequency;
        return (this);
    }
    /**
* ```
     * Service route notification date.
* ```
     */
    setServiceRouteNotificationDate(ServiceRouteNotificationDate) {
        if (!this._getIsMutateSuppressed() && this.ServiceRouteNotificationDate !== ServiceRouteNotificationDate) {
            this._setIsServiceRouteNotificationDateMutated(true);
        }
        this.ServiceRouteNotificationDate = ServiceRouteNotificationDate;
        return (this);
    }
    /**
* ```
     * Route number or id of the service route.
* ```
     */
    setServiceRouteRoute(ServiceRouteRoute) {
        if (!this._getIsMutateSuppressed() && this.ServiceRouteRoute !== ServiceRouteRoute) {
            this._setIsServiceRouteRouteMutated(true);
        }
        this.ServiceRouteRoute = ServiceRouteRoute;
        return (this);
    }
    /**
* ```
     * When service started, or should start.
* ```
     */
    setServiceStartDate(ServiceStartDate) {
        if (!this._getIsMutateSuppressed() && this.ServiceStartDate !== ServiceStartDate) {
            this._setIsServiceStartDateMutated(true);
        }
        this.ServiceStartDate = ServiceStartDate;
        return (this);
    }
    /**
* ```
     * State of service location.
* ```
     */
    setServiceState(ServiceState) {
        if (!this._getIsMutateSuppressed() && this.ServiceState !== ServiceState) {
            this._setIsServiceStateMutated(true);
        }
        this.ServiceState = ServiceState;
        return (this);
    }
    /**
* ```
     * When service stopped, or should stop.
* ```
     */
    setServiceStopDate(ServiceStopDate) {
        if (!this._getIsMutateSuppressed() && this.ServiceStopDate !== ServiceStopDate) {
            this._setIsServiceStopDateMutated(true);
        }
        this.ServiceStopDate = ServiceStopDate;
        return (this);
    }
    /**
* ```
     * Zip code of service location.
* ```
     */
    setServiceZipCode(ServiceZipCode) {
        if (!this._getIsMutateSuppressed() && this.ServiceZipCode !== ServiceZipCode) {
            this._setIsServiceZipCodeMutated(true);
        }
        this.ServiceZipCode = ServiceZipCode;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'BillingAmountDue',
            value: this.BillingAmountDue
        });
        this._setCurrentState2({
            attributeName: 'BillingCellPhoneNumber',
            value: this.BillingCellPhoneNumber
        });
        this._setCurrentState2({
            attributeName: 'BillingCity',
            value: this.BillingCity
        });
        this._setCurrentState2({
            attributeName: 'BillingCounty',
            value: this.BillingCounty
        });
        this._setCurrentState2({
            attributeName: 'BillingDueDate',
            value: this.BillingDueDate
        });
        this._setCurrentState2({
            attributeName: 'BillingDueNotificationDate',
            value: this.BillingDueNotificationDate
        });
        this._setCurrentState2({
            attributeName: 'BillingEmailAddress',
            value: this.BillingEmailAddress
        });
        this._setCurrentState2({
            attributeName: 'BillingFirstName',
            value: this.BillingFirstName
        });
        this._setCurrentState2({
            attributeName: 'BillingLastName',
            value: this.BillingLastName
        });
        this._setCurrentState2({
            attributeName: 'BillingPastDueAmount',
            value: this.BillingPastDueAmount
        });
        this._setCurrentState2({
            attributeName: 'BillingStartDate',
            value: this.BillingStartDate
        });
        this._setCurrentState2({
            attributeName: 'BillingState',
            value: this.BillingState
        });
        this._setCurrentState2({
            attributeName: 'BillingZipCode',
            value: this.BillingZipCode
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'CustomerId',
            value: this.CustomerId
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'ImportHashCode',
            value: this.ImportHashCode
        });
        this._setCurrentState2({
            attributeName: 'ImportSyncManager',
            value: this.ImportSyncManager
        });
        this._setCurrentState2({
            attributeName: 'ImportUserNotificationSync',
            value: this.ImportUserNotificationSync
        });
        this._setCurrentState2({
            attributeName: 'IsActiveInClientSystem',
            value: this.IsActiveInClientSystem
        });
        this._setCurrentState2({
            attributeName: 'IsServiceAddressSameAsBillingAddress',
            value: this.IsServiceAddressSameAsBillingAddress
        });
        this._setCurrentState2({
            attributeName: 'LastRegistrationRequestSentDate',
            value: this.LastRegistrationRequestSentDate
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'SalesStrykeOrganizationId',
            value: this.SalesStrykeOrganizationId
        });
        this._setCurrentState2({
            attributeName: 'ServiceBinDeliveryDate',
            value: this.ServiceBinDeliveryDate
        });
        this._setCurrentState2({
            attributeName: 'ServiceBinQuantity',
            value: this.ServiceBinQuantity
        });
        this._setCurrentState2({
            attributeName: 'ServiceBinSize',
            value: this.ServiceBinSize
        });
        this._setCurrentState2({
            attributeName: 'ServiceBinType',
            value: this.ServiceBinType
        });
        this._setCurrentState2({
            attributeName: 'ServiceCellPhoneNumber',
            value: this.ServiceCellPhoneNumber
        });
        this._setCurrentState2({
            attributeName: 'ServiceCity',
            value: this.ServiceCity
        });
        this._setCurrentState2({
            attributeName: 'ServiceCounty',
            value: this.ServiceCounty
        });
        this._setCurrentState2({
            attributeName: 'ServiceEmailAddress',
            value: this.ServiceEmailAddress
        });
        this._setCurrentState2({
            attributeName: 'ServiceFirstName',
            value: this.ServiceFirstName
        });
        this._setCurrentState2({
            attributeName: 'ServiceLastName',
            value: this.ServiceLastName
        });
        this._setCurrentState2({
            attributeName: 'ServiceRouteDayOfWeek',
            value: this.ServiceRouteDayOfWeek
        });
        this._setCurrentState2({
            attributeName: 'ServiceRouteFrequency',
            value: this.ServiceRouteFrequency
        });
        this._setCurrentState2({
            attributeName: 'ServiceRouteNotificationDate',
            value: this.ServiceRouteNotificationDate
        });
        this._setCurrentState2({
            attributeName: 'ServiceRouteRoute',
            value: this.ServiceRouteRoute
        });
        this._setCurrentState2({
            attributeName: 'ServiceStartDate',
            value: this.ServiceStartDate
        });
        this._setCurrentState2({
            attributeName: 'ServiceState',
            value: this.ServiceState
        });
        this._setCurrentState2({
            attributeName: 'ServiceStopDate',
            value: this.ServiceStopDate
        });
        this._setCurrentState2({
            attributeName: 'ServiceZipCode',
            value: this.ServiceZipCode
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'BillingAmountDue',
            value: this.BillingAmountDue
        });
        this._setInitializedState2({
            attributeName: 'BillingCellPhoneNumber',
            value: this.BillingCellPhoneNumber
        });
        this._setInitializedState2({
            attributeName: 'BillingCity',
            value: this.BillingCity
        });
        this._setInitializedState2({
            attributeName: 'BillingCounty',
            value: this.BillingCounty
        });
        this._setInitializedState2({
            attributeName: 'BillingDueDate',
            value: this.BillingDueDate
        });
        this._setInitializedState2({
            attributeName: 'BillingDueNotificationDate',
            value: this.BillingDueNotificationDate
        });
        this._setInitializedState2({
            attributeName: 'BillingEmailAddress',
            value: this.BillingEmailAddress
        });
        this._setInitializedState2({
            attributeName: 'BillingFirstName',
            value: this.BillingFirstName
        });
        this._setInitializedState2({
            attributeName: 'BillingLastName',
            value: this.BillingLastName
        });
        this._setInitializedState2({
            attributeName: 'BillingPastDueAmount',
            value: this.BillingPastDueAmount
        });
        this._setInitializedState2({
            attributeName: 'BillingStartDate',
            value: this.BillingStartDate
        });
        this._setInitializedState2({
            attributeName: 'BillingState',
            value: this.BillingState
        });
        this._setInitializedState2({
            attributeName: 'BillingZipCode',
            value: this.BillingZipCode
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'CustomerId',
            value: this.CustomerId
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'ImportHashCode',
            value: this.ImportHashCode
        });
        this._setInitializedState2({
            attributeName: 'ImportSyncManager',
            value: this.ImportSyncManager
        });
        this._setInitializedState2({
            attributeName: 'ImportUserNotificationSync',
            value: this.ImportUserNotificationSync
        });
        this._setInitializedState2({
            attributeName: 'IsActiveInClientSystem',
            value: this.IsActiveInClientSystem
        });
        this._setInitializedState2({
            attributeName: 'IsServiceAddressSameAsBillingAddress',
            value: this.IsServiceAddressSameAsBillingAddress
        });
        this._setInitializedState2({
            attributeName: 'LastRegistrationRequestSentDate',
            value: this.LastRegistrationRequestSentDate
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'SalesStrykeOrganizationId',
            value: this.SalesStrykeOrganizationId
        });
        this._setInitializedState2({
            attributeName: 'ServiceBinDeliveryDate',
            value: this.ServiceBinDeliveryDate
        });
        this._setInitializedState2({
            attributeName: 'ServiceBinQuantity',
            value: this.ServiceBinQuantity
        });
        this._setInitializedState2({
            attributeName: 'ServiceBinSize',
            value: this.ServiceBinSize
        });
        this._setInitializedState2({
            attributeName: 'ServiceBinType',
            value: this.ServiceBinType
        });
        this._setInitializedState2({
            attributeName: 'ServiceCellPhoneNumber',
            value: this.ServiceCellPhoneNumber
        });
        this._setInitializedState2({
            attributeName: 'ServiceCity',
            value: this.ServiceCity
        });
        this._setInitializedState2({
            attributeName: 'ServiceCounty',
            value: this.ServiceCounty
        });
        this._setInitializedState2({
            attributeName: 'ServiceEmailAddress',
            value: this.ServiceEmailAddress
        });
        this._setInitializedState2({
            attributeName: 'ServiceFirstName',
            value: this.ServiceFirstName
        });
        this._setInitializedState2({
            attributeName: 'ServiceLastName',
            value: this.ServiceLastName
        });
        this._setInitializedState2({
            attributeName: 'ServiceRouteDayOfWeek',
            value: this.ServiceRouteDayOfWeek
        });
        this._setInitializedState2({
            attributeName: 'ServiceRouteFrequency',
            value: this.ServiceRouteFrequency
        });
        this._setInitializedState2({
            attributeName: 'ServiceRouteNotificationDate',
            value: this.ServiceRouteNotificationDate
        });
        this._setInitializedState2({
            attributeName: 'ServiceRouteRoute',
            value: this.ServiceRouteRoute
        });
        this._setInitializedState2({
            attributeName: 'ServiceStartDate',
            value: this.ServiceStartDate
        });
        this._setInitializedState2({
            attributeName: 'ServiceState',
            value: this.ServiceState
        });
        this._setInitializedState2({
            attributeName: 'ServiceStopDate',
            value: this.ServiceStopDate
        });
        this._setInitializedState2({
            attributeName: 'ServiceZipCode',
            value: this.ServiceZipCode
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingAmountDue);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingCellPhoneNumber);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingCity);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingCounty);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingDueDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingDueNotificationDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingEmailAddress);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingFirstName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingLastName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingPastDueAmount);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingStartDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingState);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.BillingZipCode);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.CustomerId);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ImportHashCode);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ImportSyncManager);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ImportUserNotificationSync);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.IsActiveInClientSystem);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.IsServiceAddressSameAsBillingAddress);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.LastRegistrationRequestSentDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.SalesStrykeOrganizationId);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceBinDeliveryDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceBinQuantity);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceBinSize);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceBinType);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceCellPhoneNumber);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceCity);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceCounty);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceEmailAddress);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceFirstName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceLastName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceRouteDayOfWeek);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceRouteFrequency);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceRouteNotificationDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceRouteRoute);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceStartDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceState);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceStopDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.ServiceZipCode);
        return (hashCode_n);
    }
}
exports.ImportNotificationUserSync = ImportNotificationUserSync;
ImportNotificationUserSync.metaDataForImportNotificationUserSync = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.ImportNotificationUserSync", ImportNotificationUserSync);
//# sourceMappingURL=ImportNotificationUserSync.js.map