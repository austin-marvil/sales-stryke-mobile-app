/**
 * This file is auto generated DO NOT EDIT.
 */
import { JsonApiPersistableBase } from '../../../jsonApi/JsonApiPersistableBase';
declare class EntityAttributes {
    _BillingAmountDueIsMutated: string;
    _BillingCellPhoneNumberIsMutated: string;
    _BillingCityIsMutated: string;
    _BillingCountyIsMutated: string;
    _BillingDueDateIsMutated: string;
    _BillingDueNotificationDateIsMutated: string;
    _BillingEmailAddressIsMutated: string;
    _BillingFirstNameIsMutated: string;
    _BillingLastNameIsMutated: string;
    _BillingPastDueAmountIsMutated: string;
    _BillingStartDateIsMutated: string;
    _BillingStateIsMutated: string;
    _BillingZipCodeIsMutated: string;
    _CustomerIdIsMutated: string;
    _entityState: string;
    _idSetBySystem: string;
    _ImportHashCodeIsMutated: string;
    _ImportSyncManagerIsMutated: string;
    _ImportUserNotificationSyncIsMutated: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _IsActiveInClientSystemIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _IsServiceAddressSameAsBillingAddressIsMutated: string;
    _jsonStateStr: string;
    _LastRegistrationRequestSentDateIsMutated: string;
    _SalesStrykeOrganizationIdIsMutated: string;
    _ServiceBinDeliveryDateIsMutated: string;
    _ServiceBinQuantityIsMutated: string;
    _ServiceBinSizeIsMutated: string;
    _ServiceBinTypeIsMutated: string;
    _ServiceCellPhoneNumberIsMutated: string;
    _ServiceCityIsMutated: string;
    _ServiceCountyIsMutated: string;
    _ServiceEmailAddressIsMutated: string;
    _ServiceFirstNameIsMutated: string;
    _ServiceLastNameIsMutated: string;
    _ServiceRouteDayOfWeekIsMutated: string;
    _ServiceRouteFrequencyIsMutated: string;
    _ServiceRouteNotificationDateIsMutated: string;
    _ServiceRouteRouteIsMutated: string;
    _ServiceStartDateIsMutated: string;
    _ServiceStateIsMutated: string;
    _ServiceStopDateIsMutated: string;
    _ServiceZipCodeIsMutated: string;
    BillingAmountDue: string;
    BillingCellPhoneNumber: string;
    BillingCity: string;
    BillingCounty: string;
    BillingDueDate: string;
    BillingDueNotificationDate: string;
    BillingEmailAddress: string;
    BillingFirstName: string;
    BillingLastName: string;
    BillingPastDueAmount: string;
    BillingStartDate: string;
    BillingState: string;
    BillingZipCode: string;
    createdDate: string;
    CustomerId: string;
    id: string;
    ImportHashCode: string;
    ImportSyncManager: string;
    ImportUserNotificationSync: string;
    IsActiveInClientSystem: string;
    IsServiceAddressSameAsBillingAddress: string;
    jsonType: string;
    LastRegistrationRequestSentDate: string;
    modifiedDate: string;
    SalesStrykeOrganizationId: string;
    ServiceBinDeliveryDate: string;
    ServiceBinQuantity: string;
    ServiceBinSize: string;
    ServiceBinType: string;
    ServiceCellPhoneNumber: string;
    ServiceCity: string;
    ServiceCounty: string;
    ServiceEmailAddress: string;
    ServiceFirstName: string;
    ServiceLastName: string;
    ServiceRouteDayOfWeek: string;
    ServiceRouteFrequency: string;
    ServiceRouteNotificationDate: string;
    ServiceRouteRoute: string;
    ServiceStartDate: string;
    ServiceState: string;
    ServiceStopDate: string;
    ServiceZipCode: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _BillingAmountDueIsMutated: string;
    _BillingCellPhoneNumberIsMutated: string;
    _BillingCityIsMutated: string;
    _BillingCountyIsMutated: string;
    _BillingDueDateIsMutated: string;
    _BillingDueNotificationDateIsMutated: string;
    _BillingEmailAddressIsMutated: string;
    _BillingFirstNameIsMutated: string;
    _BillingLastNameIsMutated: string;
    _BillingPastDueAmountIsMutated: string;
    _BillingStartDateIsMutated: string;
    _BillingStateIsMutated: string;
    _BillingZipCodeIsMutated: string;
    _CustomerIdIsMutated: string;
    _entityState: string;
    _idSetBySystem: string;
    _ImportHashCodeIsMutated: string;
    _ImportSyncManagerIsMutated: string;
    _ImportUserNotificationSyncIsMutated: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _IsActiveInClientSystemIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _IsServiceAddressSameAsBillingAddressIsMutated: string;
    _jsonStateStr: string;
    _LastRegistrationRequestSentDateIsMutated: string;
    _SalesStrykeOrganizationIdIsMutated: string;
    _ServiceBinDeliveryDateIsMutated: string;
    _ServiceBinQuantityIsMutated: string;
    _ServiceBinSizeIsMutated: string;
    _ServiceBinTypeIsMutated: string;
    _ServiceCellPhoneNumberIsMutated: string;
    _ServiceCityIsMutated: string;
    _ServiceCountyIsMutated: string;
    _ServiceEmailAddressIsMutated: string;
    _ServiceFirstNameIsMutated: string;
    _ServiceLastNameIsMutated: string;
    _ServiceRouteDayOfWeekIsMutated: string;
    _ServiceRouteFrequencyIsMutated: string;
    _ServiceRouteNotificationDateIsMutated: string;
    _ServiceRouteRouteIsMutated: string;
    _ServiceStartDateIsMutated: string;
    _ServiceStateIsMutated: string;
    _ServiceStopDateIsMutated: string;
    _ServiceZipCodeIsMutated: string;
    BillingAmountDue: string;
    BillingCellPhoneNumber: string;
    BillingCity: string;
    BillingCounty: string;
    BillingDueDate: string;
    BillingDueNotificationDate: string;
    BillingEmailAddress: string;
    BillingFirstName: string;
    BillingLastName: string;
    BillingPastDueAmount: string;
    BillingStartDate: string;
    BillingState: string;
    BillingZipCode: string;
    createdDate: string;
    CustomerId: string;
    _id: string;
    ImportHashCode: string;
    ImportSyncManager: string;
    ImportUserNotificationSync: string;
    IsActiveInClientSystem: string;
    IsServiceAddressSameAsBillingAddress: string;
    jsonType: string;
    LastRegistrationRequestSentDate: string;
    modifiedDate: string;
    SalesStrykeOrganizationId: string;
    ServiceBinDeliveryDate: string;
    ServiceBinQuantity: string;
    ServiceBinSize: string;
    ServiceBinType: string;
    ServiceCellPhoneNumber: string;
    ServiceCity: string;
    ServiceCounty: string;
    ServiceEmailAddress: string;
    ServiceFirstName: string;
    ServiceLastName: string;
    ServiceRouteDayOfWeek: string;
    ServiceRouteFrequency: string;
    ServiceRouteNotificationDate: string;
    ServiceRouteRoute: string;
    ServiceStartDate: string;
    ServiceState: string;
    ServiceStopDate: string;
    ServiceZipCode: string;
}
declare class MetaData {
    namespace: string;
    mongDataModeName: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class ImportNotificationUserSync extends JsonApiPersistableBase {
    static metaDataForImportNotificationUserSync: MetaData;
    private _BillingAmountDueIsMutated;
    private _BillingCellPhoneNumberIsMutated;
    private _BillingCityIsMutated;
    private _BillingCountyIsMutated;
    private _BillingDueDateIsMutated;
    private _BillingDueNotificationDateIsMutated;
    private _BillingEmailAddressIsMutated;
    private _BillingFirstNameIsMutated;
    private _BillingLastNameIsMutated;
    private _BillingPastDueAmountIsMutated;
    private _BillingStartDateIsMutated;
    private _BillingStateIsMutated;
    private _BillingZipCodeIsMutated;
    private _CustomerIdIsMutated;
    private _idSetBySystem;
    private _ImportHashCodeIsMutated;
    private _ImportSyncManagerIsMutated;
    private _ImportUserNotificationSyncIsMutated;
    private _initializedDataKey;
    private _initializedDataKeyIsMutated;
    private _IsActiveInClientSystemIsMutated;
    private _isAddToRelationship;
    private _isAddToRelationshipIsMutated;
    private _IsServiceAddressSameAsBillingAddressIsMutated;
    private _LastRegistrationRequestSentDateIsMutated;
    private _SalesStrykeOrganizationIdIsMutated;
    private _ServiceBinDeliveryDateIsMutated;
    private _ServiceBinQuantityIsMutated;
    private _ServiceBinSizeIsMutated;
    private _ServiceBinTypeIsMutated;
    private _ServiceCellPhoneNumberIsMutated;
    private _ServiceCityIsMutated;
    private _ServiceCountyIsMutated;
    private _ServiceEmailAddressIsMutated;
    private _ServiceFirstNameIsMutated;
    private _ServiceLastNameIsMutated;
    private _ServiceRouteDayOfWeekIsMutated;
    private _ServiceRouteFrequencyIsMutated;
    private _ServiceRouteNotificationDateIsMutated;
    private _ServiceRouteRouteIsMutated;
    private _ServiceStartDateIsMutated;
    private _ServiceStateIsMutated;
    private _ServiceStopDateIsMutated;
    private _ServiceZipCodeIsMutated;
    private BillingAmountDue;
    private BillingCellPhoneNumber;
    private BillingCity;
    private BillingCounty;
    private BillingDueDate;
    private BillingDueNotificationDate;
    private BillingEmailAddress;
    private BillingFirstName;
    private BillingLastName;
    private BillingPastDueAmount;
    private BillingStartDate;
    private BillingState;
    private BillingZipCode;
    private CustomerId;
    private id;
    private ImportHashCode;
    private ImportSyncManager;
    private ImportUserNotificationSync;
    private IsActiveInClientSystem;
    private IsServiceAddressSameAsBillingAddress;
    private jsonType;
    private LastRegistrationRequestSentDate;
    private SalesStrykeOrganizationId;
    private ServiceBinDeliveryDate;
    private ServiceBinQuantity;
    private ServiceBinSize;
    private ServiceBinType;
    private ServiceCellPhoneNumber;
    private ServiceCity;
    private ServiceCounty;
    private ServiceEmailAddress;
    private ServiceFirstName;
    private ServiceLastName;
    private ServiceRouteDayOfWeek;
    private ServiceRouteFrequency;
    private ServiceRouteNotificationDate;
    private ServiceRouteRoute;
    private ServiceStartDate;
    private ServiceState;
    private ServiceStopDate;
    private ServiceZipCode;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): ImportNotificationUserSync;
    getClassName(): string;
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState(): string | null;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr(): string | null;
    /**
     *
     * @returns Date | null
     */
    getCreatedDate(): Date | null;
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate(): Date | null;
    /**
     *
     * @returns boolean
     */
    _getIsBillingAmountDueMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingCellPhoneNumberMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingCityMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingCountyMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingDueDateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingDueNotificationDateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingEmailAddressMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingFirstNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingLastNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingPastDueAmountMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingStartDateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingStateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBillingZipCodeMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsCustomerIdMutated(): boolean;
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsImportHashCodeMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsImportSyncManagerMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsImportUserNotificationSyncMutated(): boolean;
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey(): string | null;
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsActiveInClientSystemMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceAddressSameAsBillingAddressMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsLastRegistrationRequestSentDateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsSalesStrykeOrganizationIdMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceBinDeliveryDateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceBinQuantityMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceBinSizeMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceBinTypeMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceCellPhoneNumberMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceCityMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceCountyMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceEmailAddressMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceFirstNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceLastNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceRouteDayOfWeekMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceRouteFrequencyMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceRouteNotificationDateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceRouteRouteMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceStartDateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceStateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceStopDateMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsServiceZipCodeMutated(): boolean;
    /**
     * Billing amount due.
     * @returns Date | null
     */
    getBillingAmountDue(): Date | null;
    /**
     * Billing phone number.
     * @returns string | null
     */
    getBillingCellPhoneNumber(): string | null;
    /**
     * Billing city.
     * @returns string | null
     */
    getBillingCity(): string | null;
    /**
     * Billing county.
     * @returns string | null
     */
    getBillingCounty(): string | null;
    /**
     * Billing due date.
     * @returns Date | null
     */
    getBillingDueDate(): Date | null;
    /**
     * Billing due notification date.
     * @returns Date | null
     */
    getBillingDueNotificationDate(): Date | null;
    /**
     * Billing email address.
     * @returns string | null
     */
    getBillingEmailAddress(): string | null;
    /**
     * Billing first name.
     * @returns string | null
     */
    getBillingFirstName(): string | null;
    /**
     * Billing last name.
     * @returns string | null
     */
    getBillingLastName(): string | null;
    /**
     * Billing past due amount.
     * @returns number
     */
    getBillingPastDueAmount(): number;
    /**
     * Billing start date.
     * @returns Date | null
     */
    getBillingStartDate(): Date | null;
    /**
     * Billing state.
     * @returns string | null
     */
    getBillingState(): string | null;
    /**
     * Billing zip code.
     * @returns string | null
     */
    getBillingZipCode(): string | null;
    /**
     * Customer ID.
     * @returns string | null
     */
    getCustomerId(): string | null;
    /**
     *
     * @returns string | null
     */
    getId(): string | null;
    /**
     * Import Hash Code.
     * @returns string | null
     */
    getImportHashCode(): string | null;
    /**
     * Import Sync Manager.
     * @returns string | null
     */
    getImportSyncManager(): string | null;
    /**
     * Import user notification Sync.
     * @returns string | null
     */
    getImportUserNotificationSync(): string | null;
    /**
     * Is active in client system.
     * @returns boolean
     */
    getIsActiveInClientSystem(): boolean;
    /**
     * Boolean to indicate if service and billing address is the same.
     * @returns boolean
     */
    getIsServiceAddressSameAsBillingAddress(): boolean;
    /**
     *
     * @returns string | null
     */
    getJsonType(): string | null;
    /**
     * Date indicated when we, Salesstryke, sent a registration email.
     * @returns Date | null
     */
    getLastRegistrationRequestSentDate(): Date | null;
    /**
     * Id used by us, Salesstyke, to determined organization.
     * @returns string | null
     */
    getSalesStrykeOrganizationId(): string | null;
    /**
     * Service bin delivery date.
     * @returns Date | null
     */
    getServiceBinDeliveryDate(): Date | null;
    /**
     * Number of service bin.
     * @returns number
     */
    getServiceBinQuantity(): number;
    /**
     * Size of service bin.
     * @returns string | null
     */
    getServiceBinSize(): string | null;
    /**
     * Type of service bin.
     * @returns string | null
     */
    getServiceBinType(): string | null;
    /**
     * Phone number for service location.
     * @returns string | null
     */
    getServiceCellPhoneNumber(): string | null;
    /**
     * City where service located.
     * @returns string | null
     */
    getServiceCity(): string | null;
    /**
     * County where service located.
     * @returns string | null
     */
    getServiceCounty(): string | null;
    /**
     * City where service located.
     * @returns string | null
     */
    getServiceEmailAddress(): string | null;
    /**
     * Email for service location.
     * @returns string | null
     */
    getServiceFirstName(): string | null;
    /**
     * Last name of person located for service.
     * @returns string | null
     */
    getServiceLastName(): string | null;
    /**
     * Name of the days for when service is happening.
     * @returns string | null
     */
    getServiceRouteDayOfWeek(): string | null;
    /**
     * Frequency of how many time location get serviced.
     * @returns number
     */
    getServiceRouteFrequency(): number;
    /**
     * Service route notification date.
     * @returns Date | null
     */
    getServiceRouteNotificationDate(): Date | null;
    /**
     * Route number or id of the service route.
     * @returns string | null
     */
    getServiceRouteRoute(): string | null;
    /**
     * When service started, or should start.
     * @returns Date | null
     */
    getServiceStartDate(): Date | null;
    /**
     * State of service location.
     * @returns string | null
     */
    getServiceState(): string | null;
    /**
     * When service stopped, or should stop.
     * @returns Date | null
     */
    getServiceStopDate(): Date | null;
    /**
     * Zip code of service location.
     * @returns string | null
     */
    getServiceZipCode(): string | null;
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState: string | null): ImportNotificationUserSync;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr: string | null): ImportNotificationUserSync;
    /**
     *
     */
    setCreatedDate(createdDate: Date | null): ImportNotificationUserSync;
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingAmountDueMutated(_BillingAmountDueIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingCellPhoneNumberMutated(_BillingCellPhoneNumberIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingCityMutated(_BillingCityIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingCountyMutated(_BillingCountyIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingDueDateMutated(_BillingDueDateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingDueNotificationDateMutated(_BillingDueNotificationDateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingEmailAddressMutated(_BillingEmailAddressIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingFirstNameMutated(_BillingFirstNameIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingLastNameMutated(_BillingLastNameIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingPastDueAmountMutated(_BillingPastDueAmountIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingStartDateMutated(_BillingStartDateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingStateMutated(_BillingStateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsBillingZipCodeMutated(_BillingZipCodeIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsCustomerIdMutated(_CustomerIdIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsImportHashCodeMutated(_ImportHashCodeIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsImportSyncManagerMutated(_ImportSyncManagerIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsImportUserNotificationSyncMutated(_ImportUserNotificationSyncIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey: string | null): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsActiveInClientSystemMutated(_IsActiveInClientSystemIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceAddressSameAsBillingAddressMutated(_IsServiceAddressSameAsBillingAddressIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsLastRegistrationRequestSentDateMutated(_LastRegistrationRequestSentDateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsSalesStrykeOrganizationIdMutated(_SalesStrykeOrganizationIdIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceBinDeliveryDateMutated(_ServiceBinDeliveryDateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceBinQuantityMutated(_ServiceBinQuantityIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceBinSizeMutated(_ServiceBinSizeIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceBinTypeMutated(_ServiceBinTypeIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceCellPhoneNumberMutated(_ServiceCellPhoneNumberIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceCityMutated(_ServiceCityIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceCountyMutated(_ServiceCountyIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceEmailAddressMutated(_ServiceEmailAddressIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceFirstNameMutated(_ServiceFirstNameIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceLastNameMutated(_ServiceLastNameIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceRouteDayOfWeekMutated(_ServiceRouteDayOfWeekIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceRouteFrequencyMutated(_ServiceRouteFrequencyIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceRouteNotificationDateMutated(_ServiceRouteNotificationDateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceRouteRouteMutated(_ServiceRouteRouteIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceStartDateMutated(_ServiceStartDateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceStateMutated(_ServiceStateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceStopDateMutated(_ServiceStopDateIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    _setIsServiceZipCodeMutated(_ServiceZipCodeIsMutated: boolean): ImportNotificationUserSync;
    /**
* ```
     * Billing amount due.
* ```
     */
    setBillingAmountDue(BillingAmountDue: Date | null): ImportNotificationUserSync;
    /**
* ```
     * Billing phone number.
* ```
     */
    setBillingCellPhoneNumber(BillingCellPhoneNumber: string | null): ImportNotificationUserSync;
    /**
* ```
     * Billing city.
* ```
     */
    setBillingCity(BillingCity: string | null): ImportNotificationUserSync;
    /**
* ```
     * Billing county.
* ```
     */
    setBillingCounty(BillingCounty: string | null): ImportNotificationUserSync;
    /**
* ```
     * Billing due date.
* ```
     */
    setBillingDueDate(BillingDueDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     * Billing due notification date.
* ```
     */
    setBillingDueNotificationDate(BillingDueNotificationDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     * Billing email address.
* ```
     */
    setBillingEmailAddress(BillingEmailAddress: string | null): ImportNotificationUserSync;
    /**
* ```
     * Billing first name.
* ```
     */
    setBillingFirstName(BillingFirstName: string | null): ImportNotificationUserSync;
    /**
* ```
     * Billing last name.
* ```
     */
    setBillingLastName(BillingLastName: string | null): ImportNotificationUserSync;
    /**
* ```
     * Billing past due amount.
* ```
     */
    setBillingPastDueAmount(BillingPastDueAmount: number): ImportNotificationUserSync;
    /**
* ```
     * Billing start date.
* ```
     */
    setBillingStartDate(BillingStartDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     * Billing state.
* ```
     */
    setBillingState(BillingState: string | null): ImportNotificationUserSync;
    /**
* ```
     * Billing zip code.
* ```
     */
    setBillingZipCode(BillingZipCode: string | null): ImportNotificationUserSync;
    /**
* ```
     * Customer ID.
* ```
     */
    setCustomerId(CustomerId: string | null): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    setId(id: string | null): ImportNotificationUserSync;
    /**
* ```
     * Import Hash Code.
* ```
     */
    setImportHashCode(ImportHashCode: string | null): ImportNotificationUserSync;
    /**
* ```
     * Import Sync Manager.
* ```
     */
    setImportSyncManager(ImportSyncManager: string | null): ImportNotificationUserSync;
    /**
* ```
     * Import user notification Sync.
* ```
     */
    setImportUserNotificationSync(ImportUserNotificationSync: string | null): ImportNotificationUserSync;
    /**
* ```
     * Is active in client system.
* ```
     */
    setIsActiveInClientSystem(IsActiveInClientSystem: boolean): ImportNotificationUserSync;
    /**
* ```
     * Boolean to indicate if service and billing address is the same.
* ```
     */
    setIsServiceAddressSameAsBillingAddress(IsServiceAddressSameAsBillingAddress: boolean): ImportNotificationUserSync;
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType: string | null): ImportNotificationUserSync;
    /**
* ```
     * Date indicated when we, Salesstryke, sent a registration email.
* ```
     */
    setLastRegistrationRequestSentDate(LastRegistrationRequestSentDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     * Id used by us, Salesstyke, to determined organization.
* ```
     */
    setSalesStrykeOrganizationId(SalesStrykeOrganizationId: string | null): ImportNotificationUserSync;
    /**
* ```
     * Service bin delivery date.
* ```
     */
    setServiceBinDeliveryDate(ServiceBinDeliveryDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     * Number of service bin.
* ```
     */
    setServiceBinQuantity(ServiceBinQuantity: number): ImportNotificationUserSync;
    /**
* ```
     * Size of service bin.
* ```
     */
    setServiceBinSize(ServiceBinSize: string | null): ImportNotificationUserSync;
    /**
* ```
     * Type of service bin.
* ```
     */
    setServiceBinType(ServiceBinType: string | null): ImportNotificationUserSync;
    /**
* ```
     * Phone number for service location.
* ```
     */
    setServiceCellPhoneNumber(ServiceCellPhoneNumber: string | null): ImportNotificationUserSync;
    /**
* ```
     * City where service located.
* ```
     */
    setServiceCity(ServiceCity: string | null): ImportNotificationUserSync;
    /**
* ```
     * County where service located.
* ```
     */
    setServiceCounty(ServiceCounty: string | null): ImportNotificationUserSync;
    /**
* ```
     * City where service located.
* ```
     */
    setServiceEmailAddress(ServiceEmailAddress: string | null): ImportNotificationUserSync;
    /**
* ```
     * Email for service location.
* ```
     */
    setServiceFirstName(ServiceFirstName: string | null): ImportNotificationUserSync;
    /**
* ```
     * Last name of person located for service.
* ```
     */
    setServiceLastName(ServiceLastName: string | null): ImportNotificationUserSync;
    /**
* ```
     * Name of the days for when service is happening.
* ```
     */
    setServiceRouteDayOfWeek(ServiceRouteDayOfWeek: string | null): ImportNotificationUserSync;
    /**
* ```
     * Frequency of how many time location get serviced.
* ```
     */
    setServiceRouteFrequency(ServiceRouteFrequency: number): ImportNotificationUserSync;
    /**
* ```
     * Service route notification date.
* ```
     */
    setServiceRouteNotificationDate(ServiceRouteNotificationDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     * Route number or id of the service route.
* ```
     */
    setServiceRouteRoute(ServiceRouteRoute: string | null): ImportNotificationUserSync;
    /**
* ```
     * When service started, or should start.
* ```
     */
    setServiceStartDate(ServiceStartDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     * State of service location.
* ```
     */
    setServiceState(ServiceState: string | null): ImportNotificationUserSync;
    /**
* ```
     * When service stopped, or should stop.
* ```
     */
    setServiceStopDate(ServiceStopDate: Date | null): ImportNotificationUserSync;
    /**
* ```
     * Zip code of service location.
* ```
     */
    setServiceZipCode(ServiceZipCode: string | null): ImportNotificationUserSync;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
