"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailNotificationError = void 0;
const ClassFor_1 = require("../../../../data/ClassFor");
const JsonApiRecordBase_1 = require("../../../../jsonApi/JsonApiRecordBase");
const HashCodeUtil_1 = require("../../../../utils/HashCodeUtil");
class EntityAttributes {
    constructor() {
        this._apiIsMutated = "_apiIsMutated";
        this._errorDataStringIsMutated = "_errorDataStringIsMutated";
        this._errorMessageIsMutated = "_errorMessageIsMutated";
        this._namespaceIsMutated = "_namespaceIsMutated";
        this._UUIDIsMutated = "_UUIDIsMutated";
        this.api = "api";
        this.errorDataString = "errorDataString";
        this.errorMessage = "errorMessage";
        this.jsonType = "jsonType";
        this.namespace = "namespace";
        this.UUID = "UUID";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._apiIsMutated = "_apiIsMutated";
        this._errorDataStringIsMutated = "_errorDataStringIsMutated";
        this._errorMessageIsMutated = "_errorMessageIsMutated";
        this._namespaceIsMutated = "_namespaceIsMutated";
        this._UUIDIsMutated = "_UUIDIsMutated";
        this.api = "api";
        this.errorDataString = "errorDataString";
        this.errorMessage = "errorMessage";
        this.jsonType = "jsonType";
        this.namespace = "namespace";
        this.UUID = "UUID";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.record.notification.EmailNotificationError";
        this.mongDataModeName = "EmailNotificationError";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class EmailNotificationError extends JsonApiRecordBase_1.JsonApiRecordBase {
    constructor(p) {
        super(p);
        this._apiIsMutated = false;
        this._errorDataStringIsMutated = false;
        this._errorMessageIsMutated = false;
        this._namespaceIsMutated = false;
        this._UUIDIsMutated = false;
        this.api = null;
        this.errorDataString = null;
        this.errorMessage = null;
        this.jsonType = "com.salesstryke.entity.classes.record.notification.EmailNotificationError";
        this.namespace = null;
        this.UUID = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.record.notification.EmailNotificationError");
    }
    /**
     *
     * @returns boolean
     */
    _getIsApiMutated() {
        return (this._apiIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsErrorDataStringMutated() {
        return (this._errorDataStringIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsErrorMessageMutated() {
        return (this._errorMessageIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNamespaceMutated() {
        return (this._namespaceIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsUUIDMutated() {
        return (this._UUIDIsMutated);
    }
    /**
     * api of the error
     * @returns string | null
     */
    getApi() {
        return (this.api);
    }
    /**
     * errorDataString of the error
     * @returns string | null
     */
    getErrorDataString() {
        return (this.errorDataString);
    }
    /**
     * errorMessage of the error
     * @returns string | null
     */
    getErrorMessage() {
        return (this.errorMessage);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * namespace of the error
     * @returns string | null
     */
    getNamespace() {
        return (this.namespace);
    }
    /**
     * UUID of the error
     * @returns string | null
     */
    getUUID() {
        return (this.UUID);
    }
    /**
* ```
     *
* ```
     */
    _setIsApiMutated(_apiIsMutated) {
        this._apiIsMutated = _apiIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsErrorDataStringMutated(_errorDataStringIsMutated) {
        this._errorDataStringIsMutated = _errorDataStringIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsErrorMessageMutated(_errorMessageIsMutated) {
        this._errorMessageIsMutated = _errorMessageIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNamespaceMutated(_namespaceIsMutated) {
        this._namespaceIsMutated = _namespaceIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsUUIDMutated(_UUIDIsMutated) {
        this._UUIDIsMutated = _UUIDIsMutated;
        return (this);
    }
    /**
* ```
     * api of the error
* ```
     */
    setApi(api) {
        if (this.api !== api) {
            this._setIsApiMutated(true);
        }
        this.api = api;
        return (this);
    }
    /**
* ```
     * errorDataString of the error
* ```
     */
    setErrorDataString(errorDataString) {
        if (this.errorDataString !== errorDataString) {
            this._setIsErrorDataStringMutated(true);
        }
        this.errorDataString = errorDataString;
        return (this);
    }
    /**
* ```
     * errorMessage of the error
* ```
     */
    setErrorMessage(errorMessage) {
        if (this.errorMessage !== errorMessage) {
            this._setIsErrorMessageMutated(true);
        }
        this.errorMessage = errorMessage;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * namespace of the error
* ```
     */
    setNamespace(namespace) {
        if (this.namespace !== namespace) {
            this._setIsNamespaceMutated(true);
        }
        this.namespace = namespace;
        return (this);
    }
    /**
* ```
     * UUID of the error
* ```
     */
    setUUID(UUID) {
        if (this.UUID !== UUID) {
            this._setIsUUIDMutated(true);
        }
        this.UUID = UUID;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'api',
            value: this.api
        });
        this._setCurrentState2({
            attributeName: 'errorDataString',
            value: this.errorDataString
        });
        this._setCurrentState2({
            attributeName: 'errorMessage',
            value: this.errorMessage
        });
        this._setCurrentState2({
            attributeName: 'namespace',
            value: this.namespace
        });
        this._setCurrentState2({
            attributeName: 'UUID',
            value: this.UUID
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'api',
            value: this.api
        });
        this._setInitializedState2({
            attributeName: 'errorDataString',
            value: this.errorDataString
        });
        this._setInitializedState2({
            attributeName: 'errorMessage',
            value: this.errorMessage
        });
        this._setInitializedState2({
            attributeName: 'namespace',
            value: this.namespace
        });
        this._setInitializedState2({
            attributeName: 'UUID',
            value: this.UUID
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.api);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.errorDataString);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.errorMessage);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.namespace);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.UUID);
        return (hashCode_n);
    }
}
exports.EmailNotificationError = EmailNotificationError;
EmailNotificationError.metaDataForEmailNotificationError = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.record.notification.EmailNotificationError", EmailNotificationError);
//# sourceMappingURL=EmailNotificationError.js.map