"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgEntityMongoRefItem = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
class EntityAttributes {
    constructor() {
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._numberValueIsMutated = "_numberValueIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this.createdDate = "createdDate";
        this.id = "id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.numberValue = "numberValue";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._numberValueIsMutated = "_numberValueIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this.createdDate = "createdDate";
        this._id = "_id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.numberValue = "numberValue";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.OrgEntityMongoRefItem";
        this.mongDataModeName = "OrgEntityMongoRefItem";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class OrgEntityMongoRefItem extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor() {
        super();
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._isRemoveFromRelationship = false;
        this._isRemoveFromRelationshipIsMutated = false;
        this._nameIsMutated = false;
        this._numberValueIsMutated = false;
        this.id = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.OrgEntityMongoRefItem";
        this.name = null;
        this.numberValue = 0;
    }
    /**
   * Returns true if any data has been modified.
   * @returns
   */
    _getIsMutated() {
        let isMutated_b = false;
        if (this._initializedDataKeyIsMutated) {
            isMutated_b = true;
        }
        if (this._nameIsMutated) {
            isMutated_b = true;
        }
        if (this._numberValueIsMutated) {
            isMutated_b = true;
        }
        return (isMutated_b);
    }
    /**
   * Sets all isMutated flags to be false
   * @returns
   */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._nameIsMutated = false;
        this._numberValueIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.OrgEntityMongoRefItem");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationship() {
        return (this._isRemoveFromRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationshipMutated() {
        return (this._isRemoveFromRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNumberValueMutated() {
        return (this._numberValueIsMutated);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * A string value.
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * A number value.
     * @returns number
     */
    getNumberValue() {
        return (this.numberValue);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
     * ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
     * ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    _setRemoveFromRelationship(_isRemoveFromRelationship) {
        if (this._isRemoveFromRelationship !== _isRemoveFromRelationship) {
            this._setIsRemoveFromRelationshipMutated(true);
        }
        this._isRemoveFromRelationship = _isRemoveFromRelationship;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    _setIsRemoveFromRelationshipMutated(_isRemoveFromRelationshipIsMutated) {
        this._isRemoveFromRelationshipIsMutated = _isRemoveFromRelationshipIsMutated;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    _setIsNumberValueMutated(_numberValueIsMutated) {
        this._numberValueIsMutated = _numberValueIsMutated;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
     * ```
     *
     * ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
     * ```
     * A string value.
     * ```
     */
    setName(name) {
        if (!this._getIsMutateSuppressed() && this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
     * ```
     * A number value.
     * ```
     */
    setNumberValue(numberValue) {
        if (!this._getIsMutateSuppressed() && this.numberValue !== numberValue) {
            this._setIsNumberValueMutated(true);
        }
        this.numberValue = numberValue;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        /**
                hashCode_n += HashCodeUtil.toHashCode(this._entityState);
                hashCode_n += HashCodeUtil.toHashCode(this._idSetBySystem);
                hashCode_n += HashCodeUtil.toHashCode(this._initializedDataKey);
                hashCode_n += HashCodeUtil.toHashCode(this._initializedDataKeyIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._isAddToRelationship);
                hashCode_n += HashCodeUtil.toHashCode(this._isAddToRelationshipIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._isRemoveFromRelationship);
                hashCode_n += HashCodeUtil.toHashCode(this._isRemoveFromRelationshipIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._nameIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._numberValueIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._relationshipPersistableType);
                hashCode_n += HashCodeUtil.toHashCode(this.createdDate);
                hashCode_n += HashCodeUtil.toHashCode(this.id);
                hashCode_n += HashCodeUtil.toHashCode(this.jsonType);
                hashCode_n += HashCodeUtil.toHashCode(this.modifiedDate);
                hashCode_n += HashCodeUtil.toHashCode(this.name);
                hashCode_n += HashCodeUtil.toHashCode(this.numberValue);
        
        */
        return (hashCode_n);
    }
}
exports.OrgEntityMongoRefItem = OrgEntityMongoRefItem;
OrgEntityMongoRefItem.metaDataForOrgEntityMongoRefItem = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.OrgEntityMongoRefItem", OrgEntityMongoRefItem);
//# sourceMappingURL=OrgEntityMongoRefItem.js.map