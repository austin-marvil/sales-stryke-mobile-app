/**
 * This file is auto generated DO NOT EDIT.
 */
import { EmailNotificationCustomerData } from './EmailNotificationCustomerData';
import { EmailNotificationError } from './EmailNotificationError';
import { EmailNotificationSelectedData } from './EmailNotificationSelectedData';
import { JsonApiRecordBase } from '../../../../jsonApi/JsonApiRecordBase';
declare class EntityAttributes {
    _ccRecipientIsMutated: string;
    _clientNameIsMutated: string;
    _emailRecipientIsMutated: string;
    _messageIsMutated: string;
    _subjectIsMutated: string;
    _titleIsMutated: string;
    ccRecipient: string;
    clientName: string;
    customerDatas: string;
    emailRecipient: string;
    errors: string;
    jsonType: string;
    message: string;
    selectedDatas: string;
    subject: string;
    title: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _ccRecipientIsMutated: string;
    _clientNameIsMutated: string;
    _emailRecipientIsMutated: string;
    _messageIsMutated: string;
    _subjectIsMutated: string;
    _titleIsMutated: string;
    ccRecipient: string;
    clientName: string;
    customerDatas: string;
    emailRecipient: string;
    errors: string;
    jsonType: string;
    message: string;
    selectedDatas: string;
    subject: string;
    title: string;
}
declare class MetaData {
    namespace: string;
    mongDataModeName: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class EmailNotification extends JsonApiRecordBase {
    static metaDataForEmailNotification: MetaData;
    private _ccRecipientIsMutated;
    private _clientNameIsMutated;
    private _emailRecipientIsMutated;
    private _messageIsMutated;
    private _subjectIsMutated;
    private _titleIsMutated;
    private ccRecipient;
    private clientName;
    private customerDatas;
    private emailRecipient;
    private errors;
    private jsonType;
    private message;
    private selectedDatas;
    private subject;
    private title;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): EmailNotification;
    getClassName(): string;
    /**
     * customerData of the email
     */
    addCustomerData(customerData: EmailNotificationCustomerData): EmailNotification;
    /**
     * The error that occur during the server
     */
    addError(error: EmailNotificationError): EmailNotification;
    /**
     * The selectedData that occur during the server
     */
    addSelectedData(selectedData: EmailNotificationSelectedData): EmailNotification;
    /**
     *
     * @returns boolean
     */
    _getIsCcRecipientMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsClientNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsEmailRecipientMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsMessageMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsSubjectMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsTitleMutated(): boolean;
    /**
     * ccRecipient of the notification
     * @returns string | null
     */
    getCcRecipient(): string | null;
    /**
     * clientName of the email
     * @returns string | null
     */
    getClientName(): string | null;
    /**
     * customerData of the email
     * @returns Array<EmailNotificationCustomerData>
     */
    getCustomerDatas(): Array<EmailNotificationCustomerData>;
    /**
     * emailRecipient of the notification
     * @returns string | null
     */
    getEmailRecipient(): string | null;
    /**
     * The error that occur during the server
     * @returns Array<EmailNotificationError>
     */
    getErrors(): Array<EmailNotificationError>;
    /**
     *
     * @returns string | null
     */
    getJsonType(): string | null;
    /**
     * message of the email
     * @returns string | null
     */
    getMessage(): string | null;
    /**
     * The selectedData that occur during the server
     * @returns Array<EmailNotificationSelectedData>
     */
    getSelectedDatas(): Array<EmailNotificationSelectedData>;
    /**
     * Subject of the email
     * @returns string | null
     */
    getSubject(): string | null;
    /**
     * title of the email
     * @returns string | null
     */
    getTitle(): string | null;
    /**
* ```
     *
* ```
     */
    _setIsCcRecipientMutated(_ccRecipientIsMutated: boolean): EmailNotification;
    /**
* ```
     *
* ```
     */
    _setIsClientNameMutated(_clientNameIsMutated: boolean): EmailNotification;
    /**
* ```
     *
* ```
     */
    _setIsEmailRecipientMutated(_emailRecipientIsMutated: boolean): EmailNotification;
    /**
* ```
     *
* ```
     */
    _setIsMessageMutated(_messageIsMutated: boolean): EmailNotification;
    /**
* ```
     *
* ```
     */
    _setIsSubjectMutated(_subjectIsMutated: boolean): EmailNotification;
    /**
* ```
     *
* ```
     */
    _setIsTitleMutated(_titleIsMutated: boolean): EmailNotification;
    /**
* ```
     * ccRecipient of the notification
* ```
     */
    setCcRecipient(ccRecipient: string | null): EmailNotification;
    /**
* ```
     * clientName of the email
* ```
     */
    setClientName(clientName: string | null): EmailNotification;
    /**
* ```
     * customerData of the email
* ```
     */
    setCustomerDatas(customerDatas: Array<EmailNotificationCustomerData>): EmailNotification;
    /**
* ```
     * emailRecipient of the notification
* ```
     */
    setEmailRecipient(emailRecipient: string | null): EmailNotification;
    /**
* ```
     * The error that occur during the server
* ```
     */
    setErrors(errors: Array<EmailNotificationError>): EmailNotification;
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType: string | null): EmailNotification;
    /**
* ```
     * message of the email
* ```
     */
    setMessage(message: string | null): EmailNotification;
    /**
* ```
     * The selectedData that occur during the server
* ```
     */
    setSelectedDatas(selectedDatas: Array<EmailNotificationSelectedData>): EmailNotification;
    /**
* ```
     * Subject of the email
* ```
     */
    setSubject(subject: string | null): EmailNotification;
    /**
* ```
     * title of the email
* ```
     */
    setTitle(title: string | null): EmailNotification;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
