/**
 * This file is auto generated DO NOT EDIT.
 */
import { Organization } from './Organization';
import { RoutingSoftwareVersion } from './RoutingSoftwareVersion';
import { JsonApiPersistableBase } from '../../../jsonApi/JsonApiPersistableBase';
import { PersistenceType } from '../../../data/PersistenceType';
declare class EntityAttributes {
    _countyIsMutated: string;
    _entityState: string;
    _idSetBySystem: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _isRemoveFromRelationship: string;
    _isRemoveFromRelationshipIsMutated: string;
    _jsonStateStr: string;
    _organizationIsMutated: string;
    _regionIsMutated: string;
    _relationshipPersistableType: string;
    _routingSoftwareVersionIsMutated: string;
    _taxBodyCodeIsMutated: string;
    _usStateIsMutated: string;
    county: string;
    createdDate: string;
    id: string;
    jsonType: string;
    modifiedDate: string;
    organization: string;
    region: string;
    routingSoftwareVersion: string;
    taxBodyCode: string;
    usState: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _countyIsMutated: string;
    _entityState: string;
    _idSetBySystem: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _isRemoveFromRelationship: string;
    _isRemoveFromRelationshipIsMutated: string;
    _jsonStateStr: string;
    _organizationIsMutated: string;
    _regionIsMutated: string;
    _relationshipPersistableType: string;
    _routingSoftwareVersionIsMutated: string;
    _taxBodyCodeIsMutated: string;
    _usStateIsMutated: string;
    county: string;
    createdDate: string;
    _id: string;
    jsonType: string;
    modifiedDate: string;
    organization: string;
    region: string;
    routingSoftwareVersion: string;
    taxBodyCode: string;
    usState: string;
}
declare class MetaData {
    namespace: string;
    mongDataModeName: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class SoftPakTaxBodyCode extends JsonApiPersistableBase {
    static metaDataForSoftPakTaxBodyCode: MetaData;
    private _countyIsMutated;
    private _idSetBySystem;
    private _initializedDataKey;
    private _initializedDataKeyIsMutated;
    private _isAddToRelationship;
    private _isAddToRelationshipIsMutated;
    private _isRemoveFromRelationship;
    private _isRemoveFromRelationshipIsMutated;
    private _organizationIsMutated;
    private _regionIsMutated;
    private _routingSoftwareVersionIsMutated;
    private _taxBodyCodeIsMutated;
    private _usStateIsMutated;
    private county;
    private id;
    private jsonType;
    private organization;
    private region;
    private routingSoftwareVersion;
    private taxBodyCode;
    private usState;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): SoftPakTaxBodyCode;
    getClassName(): string;
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState(): string | null;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr(): string | null;
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType(): number;
    /**
     *
     * @returns Date | null
     */
    getCreatedDate(): Date | null;
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate(): Date | null;
    /**
     *
     * @returns boolean
     */
    _getIsCountyMutated(): boolean;
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem(): boolean;
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey(): string | null;
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationship(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationshipMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsRegionMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsRoutingSoftwareVersionMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsTaxBodyCodeMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsUsStateMutated(): boolean;
    /**
     * The US county
     * @returns string | null
     */
    getCounty(): string | null;
    /**
     *
     * @returns string | null
     */
    getId(): string | null;
    /**
     *
     * @returns string | null
     */
    getJsonType(): string | null;
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization(): Organization | null;
    /**
     * The city, parish, township, etc.
     * @returns string | null
     */
    getRegion(): string | null;
    /**
     * The Routing Software Version.
     * @returns RoutingSoftwareVersion | null
     */
    getRoutingSoftwareVersion(): RoutingSoftwareVersion | null;
    /**
     * The 6 character tax body code.
     * @returns string | null
     */
    getTaxBodyCode(): string | null;
    /**
     * The two character US state.
     * @returns string | null
     */
    getUsState(): string | null;
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState: string | null): SoftPakTaxBodyCode;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr: string | null): SoftPakTaxBodyCode;
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType: number): SoftPakTaxBodyCode;
    /**
     *
     */
    setCreatedDate(createdDate: Date | null): SoftPakTaxBodyCode;
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate: Date | null): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsCountyMutated(_countyIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem: boolean): SoftPakTaxBodyCode;
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey: string | null): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationship(_isRemoveFromRelationship: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationshipMutated(_isRemoveFromRelationshipIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsRegionMutated(_regionIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsRoutingSoftwareVersionMutated(_routingSoftwareVersionIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsTaxBodyCodeMutated(_taxBodyCodeIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    _setIsUsStateMutated(_usStateIsMutated: boolean): SoftPakTaxBodyCode;
    /**
* ```
     * The US county
* ```
     */
    setCounty(county: string | null): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    setId(id: string | null): SoftPakTaxBodyCode;
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType: string | null): SoftPakTaxBodyCode;
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization: Organization | null, persistanceType?: PersistenceType): SoftPakTaxBodyCode;
    /**
* ```
     * The city, parish, township, etc.
* ```
     */
    setRegion(region: string | null): SoftPakTaxBodyCode;
    /**
* ```
     * The Routing Software Version.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setRoutingSoftwareVersion(routingSoftwareVersion: RoutingSoftwareVersion | null, persistanceType?: PersistenceType): SoftPakTaxBodyCode;
    /**
* ```
     * The 6 character tax body code.
* ```
     */
    setTaxBodyCode(taxBodyCode: string | null): SoftPakTaxBodyCode;
    /**
* ```
     * The two character US state.
* ```
     */
    setUsState(usState: string | null): SoftPakTaxBodyCode;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
