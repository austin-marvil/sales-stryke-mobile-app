"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartServiceDayOfWeek = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._cartItemIsMutated = "_cartItemIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._entityState = "_entityState";
        this._fridayIsMutated = "_fridayIsMutated";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._mondayIsMutated = "_mondayIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._saturdayIsMutated = "_saturdayIsMutated";
        this._thursdayIsMutated = "_thursdayIsMutated";
        this._tuesdayIsMutated = "_tuesdayIsMutated";
        this._wednesdayIsMutated = "_wednesdayIsMutated";
        this.cartItem = "cartItem";
        this.createdDate = "createdDate";
        this.description = "description";
        this.friday = "friday";
        this.id = "id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.monday = "monday";
        this.name = "name";
        this.saturday = "saturday";
        this.thursday = "thursday";
        this.tuesday = "tuesday";
        this.wednesday = "wednesday";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._cartItemIsMutated = "_cartItemIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._entityState = "_entityState";
        this._fridayIsMutated = "_fridayIsMutated";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._mondayIsMutated = "_mondayIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._saturdayIsMutated = "_saturdayIsMutated";
        this._thursdayIsMutated = "_thursdayIsMutated";
        this._tuesdayIsMutated = "_tuesdayIsMutated";
        this._wednesdayIsMutated = "_wednesdayIsMutated";
        this.cartItem = "cartItem";
        this.createdDate = "createdDate";
        this.description = "description";
        this.friday = "friday";
        this._id = "_id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.monday = "monday";
        this.name = "name";
        this.saturday = "saturday";
        this.thursday = "thursday";
        this.tuesday = "tuesday";
        this.wednesday = "wednesday";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.CartServiceDayOfWeek";
        this.mongDataModeName = "CartServiceDayOfWeek";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class CartServiceDayOfWeek extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._cartItemIsMutated = false;
        this._descriptionIsMutated = false;
        this._fridayIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._mondayIsMutated = false;
        this._nameIsMutated = false;
        this._saturdayIsMutated = false;
        this._thursdayIsMutated = false;
        this._tuesdayIsMutated = false;
        this._wednesdayIsMutated = false;
        this.cartItem = null;
        this.description = null;
        this.friday = undefined;
        this.id = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.CartServiceDayOfWeek";
        this.monday = undefined;
        this.name = null;
        this.saturday = undefined;
        this.thursday = undefined;
        this.tuesday = undefined;
        this.wednesday = undefined;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._cartItemIsMutated = false;
        this._descriptionIsMutated = false;
        this._fridayIsMutated = false;
        this._mondayIsMutated = false;
        this._nameIsMutated = false;
        this._saturdayIsMutated = false;
        this._thursdayIsMutated = false;
        this._tuesdayIsMutated = false;
        this._wednesdayIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.CartServiceDayOfWeek");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsCartItemMutated() {
        return (this._cartItemIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDescriptionMutated() {
        return (this._descriptionIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsFridayMutated() {
        return (this._fridayIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsMondayMutated() {
        return (this._mondayIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSaturdayMutated() {
        return (this._saturdayIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsThursdayMutated() {
        return (this._thursdayIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsTuesdayMutated() {
        return (this._tuesdayIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWednesdayMutated() {
        return (this._wednesdayIsMutated);
    }
    /**
     * The cart item.
     * @returns CartItem | null
     */
    getCartItem() {
        return (this.cartItem);
    }
    /**
     * The description.
     * @returns string | null
     */
    getDescription() {
        return (this.description);
    }
    /**
     * Boolean value for the day Friday.
     * @returns boolean
     */
    getFriday() {
        return ((this.friday === undefined) ? false : this.friday);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * Boolean value for the day Monday.
     * @returns boolean
     */
    getMonday() {
        return ((this.monday === undefined) ? false : this.monday);
    }
    /**
     * The name.
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * Boolean value for the day Saturday.
     * @returns boolean
     */
    getSaturday() {
        return ((this.saturday === undefined) ? false : this.saturday);
    }
    /**
     * Boolean value for the day Thursday.
     * @returns boolean
     */
    getThursday() {
        return ((this.thursday === undefined) ? false : this.thursday);
    }
    /**
     * Boolean value for the day Tuesday.
     * @returns boolean
     */
    getTuesday() {
        return ((this.tuesday === undefined) ? false : this.tuesday);
    }
    /**
     * Boolean value for the day wWdnesday.
     * @returns boolean
     */
    getWednesday() {
        return ((this.wednesday === undefined) ? false : this.wednesday);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCartItemMutated(_cartItemIsMutated) {
        this._cartItemIsMutated = _cartItemIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDescriptionMutated(_descriptionIsMutated) {
        this._descriptionIsMutated = _descriptionIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsFridayMutated(_fridayIsMutated) {
        this._fridayIsMutated = _fridayIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsMondayMutated(_mondayIsMutated) {
        this._mondayIsMutated = _mondayIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSaturdayMutated(_saturdayIsMutated) {
        this._saturdayIsMutated = _saturdayIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsThursdayMutated(_thursdayIsMutated) {
        this._thursdayIsMutated = _thursdayIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsTuesdayMutated(_tuesdayIsMutated) {
        this._tuesdayIsMutated = _tuesdayIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWednesdayMutated(_wednesdayIsMutated) {
        this._wednesdayIsMutated = _wednesdayIsMutated;
        return (this);
    }
    /**
* ```
     * The cart item.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setCartItem(cartItem, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.cartItem !== cartItem) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(cartItem, persistanceType);
            this._setIsCartItemMutated(true);
        }
        this.cartItem = cartItem;
        return (this);
    }
    /**
* ```
     * The description.
* ```
     */
    setDescription(description) {
        if (!this._getIsMutateSuppressed() && this.description !== description) {
            this._setIsDescriptionMutated(true);
        }
        this.description = description;
        return (this);
    }
    /**
* ```
     * Boolean value for the day Friday.
* ```
     */
    setFriday(friday) {
        if (!this._getIsMutateSuppressed() && this.friday !== friday) {
            this._setIsFridayMutated(true);
        }
        this.friday = friday;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * Boolean value for the day Monday.
* ```
     */
    setMonday(monday) {
        if (!this._getIsMutateSuppressed() && this.monday !== monday) {
            this._setIsMondayMutated(true);
        }
        this.monday = monday;
        return (this);
    }
    /**
* ```
     * The name.
* ```
     */
    setName(name) {
        if (!this._getIsMutateSuppressed() && this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
* ```
     * Boolean value for the day Saturday.
* ```
     */
    setSaturday(saturday) {
        if (!this._getIsMutateSuppressed() && this.saturday !== saturday) {
            this._setIsSaturdayMutated(true);
        }
        this.saturday = saturday;
        return (this);
    }
    /**
* ```
     * Boolean value for the day Thursday.
* ```
     */
    setThursday(thursday) {
        if (!this._getIsMutateSuppressed() && this.thursday !== thursday) {
            this._setIsThursdayMutated(true);
        }
        this.thursday = thursday;
        return (this);
    }
    /**
* ```
     * Boolean value for the day Tuesday.
* ```
     */
    setTuesday(tuesday) {
        if (!this._getIsMutateSuppressed() && this.tuesday !== tuesday) {
            this._setIsTuesdayMutated(true);
        }
        this.tuesday = tuesday;
        return (this);
    }
    /**
* ```
     * Boolean value for the day wWdnesday.
* ```
     */
    setWednesday(wednesday) {
        if (!this._getIsMutateSuppressed() && this.wednesday !== wednesday) {
            this._setIsWednesdayMutated(true);
        }
        this.wednesday = wednesday;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setCurrentState2({
            attributeName: 'cartItem',
            value: this.cartItem
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'description',
            value: this.description
        });
        this._setCurrentState2({
            attributeName: 'friday',
            value: this.friday
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'monday',
            value: this.monday
        });
        this._setCurrentState2({
            attributeName: 'name',
            value: this.name
        });
        this._setCurrentState2({
            attributeName: 'saturday',
            value: this.saturday
        });
        this._setCurrentState2({
            attributeName: 'thursday',
            value: this.thursday
        });
        this._setCurrentState2({
            attributeName: 'tuesday',
            value: this.tuesday
        });
        this._setCurrentState2({
            attributeName: 'wednesday',
            value: this.wednesday
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setInitializedState2({
            attributeName: 'cartItem',
            value: this.cartItem
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'description',
            value: this.description
        });
        this._setInitializedState2({
            attributeName: 'friday',
            value: this.friday
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'monday',
            value: this.monday
        });
        this._setInitializedState2({
            attributeName: 'name',
            value: this.name
        });
        this._setInitializedState2({
            attributeName: 'saturday',
            value: this.saturday
        });
        this._setInitializedState2({
            attributeName: 'thursday',
            value: this.thursday
        });
        this._setInitializedState2({
            attributeName: 'tuesday',
            value: this.tuesday
        });
        this._setInitializedState2({
            attributeName: 'wednesday',
            value: this.wednesday
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.cartItem);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.description);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.friday);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.monday);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.name);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.saturday);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.thursday);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.tuesday);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.wednesday);
        return (hashCode_n);
    }
}
exports.CartServiceDayOfWeek = CartServiceDayOfWeek;
CartServiceDayOfWeek.metaDataForCartServiceDayOfWeek = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.CartServiceDayOfWeek", CartServiceDayOfWeek);
//# sourceMappingURL=CartServiceDayOfWeek.js.map