"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceDocument = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const EntityUtils_1 = require("../../../utils/entity/EntityUtils");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistenceType_1 = require("../../../data/PersistenceType");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._dsrSyncDateIsMutated = "_dsrSyncDateIsMutated";
        this._entityState = "_entityState";
        this._geoLatitudeIsMutated = "_geoLatitudeIsMutated";
        this._geoLongitudeIsMutated = "_geoLongitudeIsMutated";
        this._geoReverseJsonIsMutated = "_geoReverseJsonIsMutated";
        this._geoServiceAddressLookupJsonIsMutated = "_geoServiceAddressLookupJsonIsMutated";
        this._grandTotalIsMutated = "_grandTotalIsMutated";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._overwritePandaDocDetailJsonIsMutated = "_overwritePandaDocDetailJsonIsMutated";
        this._pandaDocDetailJsonIsMutated = "_pandaDocDetailJsonIsMutated";
        this._pandaDocIDIsMutated = "_pandaDocIDIsMutated";
        this._pandaDocModifiedDateIsMutated = "_pandaDocModifiedDateIsMutated";
        this._pandaDocStatusIsMutated = "_pandaDocStatusIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._routingSoftwareCustomerIdIsMutated = "_routingSoftwareCustomerIdIsMutated";
        this._routingSoftwareSyncStatusIsMutated = "_routingSoftwareSyncStatusIsMutated";
        this._softPakTaxBodyCodeIsMutated = "_softPakTaxBodyCodeIsMutated";
        this._workspaceDocumentAttributesIsMutated = "_workspaceDocumentAttributesIsMutated";
        this._workspaceIsMutated = "_workspaceIsMutated";
        this.createdDate = "createdDate";
        this.dsrSyncDate = "dsrSyncDate";
        this.geoLatitude = "geoLatitude";
        this.geoLongitude = "geoLongitude";
        this.geoReverseJson = "geoReverseJson";
        this.geoServiceAddressLookupJson = "geoServiceAddressLookupJson";
        this.grandTotal = "grandTotal";
        this.id = "id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.overwritePandaDocDetailJson = "overwritePandaDocDetailJson";
        this.pandaDocDetailJson = "pandaDocDetailJson";
        this.pandaDocID = "pandaDocID";
        this.pandaDocModifiedDate = "pandaDocModifiedDate";
        this.pandaDocStatus = "pandaDocStatus";
        this.routingSoftwareCustomerId = "routingSoftwareCustomerId";
        this.routingSoftwareSyncStatus = "routingSoftwareSyncStatus";
        this.softPakTaxBodyCode = "softPakTaxBodyCode";
        this.workspace = "workspace";
        this.workspaceDocumentAttributes = "workspaceDocumentAttributes";
    }
}
class MongoVirtual {
    constructor() {
        this.workspaceDocumentAttributes = "workspaceDocumentAttributes";
    }
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._dsrSyncDateIsMutated = "_dsrSyncDateIsMutated";
        this._entityState = "_entityState";
        this._geoLatitudeIsMutated = "_geoLatitudeIsMutated";
        this._geoLongitudeIsMutated = "_geoLongitudeIsMutated";
        this._geoReverseJsonIsMutated = "_geoReverseJsonIsMutated";
        this._geoServiceAddressLookupJsonIsMutated = "_geoServiceAddressLookupJsonIsMutated";
        this._grandTotalIsMutated = "_grandTotalIsMutated";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._overwritePandaDocDetailJsonIsMutated = "_overwritePandaDocDetailJsonIsMutated";
        this._pandaDocDetailJsonIsMutated = "_pandaDocDetailJsonIsMutated";
        this._pandaDocIDIsMutated = "_pandaDocIDIsMutated";
        this._pandaDocModifiedDateIsMutated = "_pandaDocModifiedDateIsMutated";
        this._pandaDocStatusIsMutated = "_pandaDocStatusIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._routingSoftwareCustomerIdIsMutated = "_routingSoftwareCustomerIdIsMutated";
        this._routingSoftwareSyncStatusIsMutated = "_routingSoftwareSyncStatusIsMutated";
        this._softPakTaxBodyCodeIsMutated = "_softPakTaxBodyCodeIsMutated";
        this._workspaceDocumentAttributesIsMutated = "_workspaceDocumentAttributesIsMutated";
        this._workspaceIsMutated = "_workspaceIsMutated";
        this.createdDate = "createdDate";
        this.dsrSyncDate = "dsrSyncDate";
        this.geoLatitude = "geoLatitude";
        this.geoLongitude = "geoLongitude";
        this.geoReverseJson = "geoReverseJson";
        this.geoServiceAddressLookupJson = "geoServiceAddressLookupJson";
        this.grandTotal = "grandTotal";
        this._id = "_id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.overwritePandaDocDetailJson = "overwritePandaDocDetailJson";
        this.pandaDocDetailJson = "pandaDocDetailJson";
        this.pandaDocID = "pandaDocID";
        this.pandaDocModifiedDate = "pandaDocModifiedDate";
        this.pandaDocStatus = "pandaDocStatus";
        this.routingSoftwareCustomerId = "routingSoftwareCustomerId";
        this.routingSoftwareSyncStatus = "routingSoftwareSyncStatus";
        this.softPakTaxBodyCode = "softPakTaxBodyCode";
        this.workspace = "workspace";
        this.workspaceDocumentAttributes = "workspaceDocumentAttributes";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.WorkspaceDocument";
        this.mongDataModeName = "WorkspaceDocument";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class WorkspaceDocument extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._dsrSyncDateIsMutated = false;
        this._geoLatitudeIsMutated = false;
        this._geoLongitudeIsMutated = false;
        this._geoReverseJsonIsMutated = false;
        this._geoServiceAddressLookupJsonIsMutated = false;
        this._grandTotalIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._isRemoveFromRelationship = false;
        this._isRemoveFromRelationshipIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._overwritePandaDocDetailJsonIsMutated = false;
        this._pandaDocDetailJsonIsMutated = false;
        this._pandaDocIDIsMutated = false;
        this._pandaDocModifiedDateIsMutated = false;
        this._pandaDocStatusIsMutated = false;
        this._routingSoftwareCustomerIdIsMutated = false;
        this._routingSoftwareSyncStatusIsMutated = false;
        this._softPakTaxBodyCodeIsMutated = false;
        this._workspaceDocumentAttributesIsMutated = false;
        this._workspaceIsMutated = false;
        this.dsrSyncDate = null;
        this.geoLatitude = 0;
        this.geoLongitude = 0;
        this.geoReverseJson = null;
        this.geoServiceAddressLookupJson = null;
        this.grandTotal = 0;
        this.id = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.WorkspaceDocument";
        this.name = null;
        this.organization = null;
        this.overwritePandaDocDetailJson = null;
        this.pandaDocDetailJson = null;
        this.pandaDocID = null;
        this.pandaDocModifiedDate = null;
        this.pandaDocStatus = 0;
        this.routingSoftwareCustomerId = null;
        this.routingSoftwareSyncStatus = 0;
        this.softPakTaxBodyCode = null;
        this.workspace = null;
        this.workspaceDocumentAttributes = new Array();
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._dsrSyncDateIsMutated = false;
        this._geoLatitudeIsMutated = false;
        this._geoLongitudeIsMutated = false;
        this._geoReverseJsonIsMutated = false;
        this._geoServiceAddressLookupJsonIsMutated = false;
        this._grandTotalIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._overwritePandaDocDetailJsonIsMutated = false;
        this._pandaDocDetailJsonIsMutated = false;
        this._pandaDocIDIsMutated = false;
        this._pandaDocModifiedDateIsMutated = false;
        this._pandaDocStatusIsMutated = false;
        this._routingSoftwareCustomerIdIsMutated = false;
        this._routingSoftwareSyncStatusIsMutated = false;
        this._softPakTaxBodyCodeIsMutated = false;
        this._workspaceIsMutated = false;
        this._workspaceDocumentAttributesIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.WorkspaceDocument");
    }
    /**
     * The workspace document attributes.
     *
     * Default PersistenceType : PersistenceType.ATTACH
     */
    addWorkspaceDocumentAttribute(workspaceDocumentAttribute, persistanceType = PersistenceType_1.PersistenceType.ATTACH) {
        if (this._getIsTrackingMutations()) {
            workspaceDocumentAttribute._trackMutations();
        }
        workspaceDocumentAttribute._setRelationshipPersistableType(persistanceType.getId());
        this.workspaceDocumentAttributes.push(workspaceDocumentAttribute);
        return (this);
    }
    /**
     * The workspace document attributes.
     * If the Entity ID is null, will not be added.
     * Default PersistenceType : PersistenceType.DETACH
     */
    removeWorkspaceDocumentAttribute(workspaceDocumentAttribute, persistanceType = PersistenceType_1.PersistenceType.DETACH) {
        if (this._getIsTrackingMutations()) {
            workspaceDocumentAttribute._trackMutations();
        }
        if (persistanceType === PersistenceType_1.PersistenceType.NONE) {
            let index = this.workspaceDocumentAttributes.findIndex(obj => obj === workspaceDocumentAttribute);
            if (index !== -1) {
                this.workspaceDocumentAttributes.splice(index, 1);
            }
            workspaceDocumentAttribute._setRelationshipPersistableType(PersistenceType_1.PersistenceType.NONE.getId());
            return (this);
        }
        workspaceDocumentAttribute._setRelationshipPersistableType(persistanceType.getId());
        this.workspaceDocumentAttributes.push(workspaceDocumentAttribute);
        return (this);
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsDsrSyncDateMutated() {
        return (this._dsrSyncDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsGeoLatitudeMutated() {
        return (this._geoLatitudeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsGeoLongitudeMutated() {
        return (this._geoLongitudeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsGeoReverseJsonMutated() {
        return (this._geoReverseJsonIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsGeoServiceAddressLookupJsonMutated() {
        return (this._geoServiceAddressLookupJsonIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsGrandTotalMutated() {
        return (this._grandTotalIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationship() {
        return (this._isRemoveFromRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationshipMutated() {
        return (this._isRemoveFromRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOverwritePandaDocDetailJsonMutated() {
        return (this._overwritePandaDocDetailJsonIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocDetailJsonMutated() {
        return (this._pandaDocDetailJsonIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocIDMutated() {
        return (this._pandaDocIDIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocModifiedDateMutated() {
        return (this._pandaDocModifiedDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocStatusMutated() {
        return (this._pandaDocStatusIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRoutingSoftwareCustomerIdMutated() {
        return (this._routingSoftwareCustomerIdIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRoutingSoftwareSyncStatusMutated() {
        return (this._routingSoftwareSyncStatusIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSoftPakTaxBodyCodeMutated() {
        return (this._softPakTaxBodyCodeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWorkspaceDocumentAttributesMutated() {
        return (this._workspaceDocumentAttributesIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWorkspaceMutated() {
        return (this._workspaceIsMutated);
    }
    /**
     * The date that the document was synced for the DSR date.
     * @returns Date | null
     */
    getDsrSyncDate() {
        return (this.dsrSyncDate);
    }
    /**
     * The geo coordinate latitude.
     * @returns number
     */
    getGeoLatitude() {
        return (this.geoLatitude);
    }
    /**
     * The geo coordinate longitude.
     * @returns number
     */
    getGeoLongitude() {
        return (this.geoLongitude);
    }
    /**
     * The reverse geo code lookup.
     * @returns string | null
     */
    getGeoReverseJson() {
        return (this.geoReverseJson);
    }
    /**
     * The address JSON that is return when using an address such as Google Map, MS Azure, etc.
     * @returns string | null
     */
    getGeoServiceAddressLookupJson() {
        return (this.geoServiceAddressLookupJson);
    }
    /**
     * The grand total cost for the document.
     * @returns number
     */
    getGrandTotal() {
        return (this.grandTotal);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The name of the document
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * The tenant Organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * A overwrite pandaDocDetailJson
     * @returns Object
     */
    getOverwritePandaDocDetailJson() {
        return EntityUtils_1.EntityUtils.jsonStringGetter({ value: this.overwritePandaDocDetailJson || '' });
    }
    /**
     * A JSON text that represents the PandaDoc Detail returned from the PandaDoc API.
     * @returns Object
     */
    getPandaDocDetailJson() {
        return EntityUtils_1.EntityUtils.jsonStringGetter({ value: this.pandaDocDetailJson || '' });
    }
    /**
     * The PandaDocument id
     * @returns string | null
     */
    getPandaDocID() {
        return (this.pandaDocID);
    }
    /**
     * The PandaDoc modified date.
     * @returns Date | null
     */
    getPandaDocModifiedDate() {
        return (this.pandaDocModifiedDate);
    }
    /**
     * The PandaDocument status, DRAFT = 0, COMPLETED = 2, VIEWED = 5, WAITINGPAY = 9, PAID = 10, VOIDED = 11, DECLINED = 12
     * @returns number
     */
    getPandaDocStatus() {
        return (this.pandaDocStatus);
    }
    /**
     * The customer id value that is returned from a successful post to the routing software customer import API. .
     * @returns string | null
     */
    getRoutingSoftwareCustomerId() {
        return (this.routingSoftwareCustomerId);
    }
    /**
     * The routingSoftwareSyncStatus status
     * @returns number
     */
    getRoutingSoftwareSyncStatus() {
        return (this.routingSoftwareSyncStatus);
    }
    /**
     * SoftPak tax body code for the document.
     * @returns string | null
     */
    getSoftPakTaxBodyCode() {
        return (this.softPakTaxBodyCode);
    }
    /**
     * The workspace this document belongs to.
     * @returns Workspace | null
     */
    getWorkspace() {
        return (this.workspace);
    }
    /**
     * The workspace document attributes.
     * @returns Array<WorkspaceDocumentAttribute>
     */
    getWorkspaceDocumentAttributes() {
        return (this.workspaceDocumentAttributes);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDsrSyncDateMutated(_dsrSyncDateIsMutated) {
        this._dsrSyncDateIsMutated = _dsrSyncDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsGeoLatitudeMutated(_geoLatitudeIsMutated) {
        this._geoLatitudeIsMutated = _geoLatitudeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsGeoLongitudeMutated(_geoLongitudeIsMutated) {
        this._geoLongitudeIsMutated = _geoLongitudeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsGeoReverseJsonMutated(_geoReverseJsonIsMutated) {
        this._geoReverseJsonIsMutated = _geoReverseJsonIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsGeoServiceAddressLookupJsonMutated(_geoServiceAddressLookupJsonIsMutated) {
        this._geoServiceAddressLookupJsonIsMutated = _geoServiceAddressLookupJsonIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsGrandTotalMutated(_grandTotalIsMutated) {
        this._grandTotalIsMutated = _grandTotalIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationship(_isRemoveFromRelationship) {
        if (this._isRemoveFromRelationship !== _isRemoveFromRelationship) {
            this._setIsRemoveFromRelationshipMutated(true);
        }
        this._isRemoveFromRelationship = _isRemoveFromRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationshipMutated(_isRemoveFromRelationshipIsMutated) {
        this._isRemoveFromRelationshipIsMutated = _isRemoveFromRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOverwritePandaDocDetailJsonMutated(_overwritePandaDocDetailJsonIsMutated) {
        this._overwritePandaDocDetailJsonIsMutated = _overwritePandaDocDetailJsonIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocDetailJsonMutated(_pandaDocDetailJsonIsMutated) {
        this._pandaDocDetailJsonIsMutated = _pandaDocDetailJsonIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocIDMutated(_pandaDocIDIsMutated) {
        this._pandaDocIDIsMutated = _pandaDocIDIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocModifiedDateMutated(_pandaDocModifiedDateIsMutated) {
        this._pandaDocModifiedDateIsMutated = _pandaDocModifiedDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocStatusMutated(_pandaDocStatusIsMutated) {
        this._pandaDocStatusIsMutated = _pandaDocStatusIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRoutingSoftwareCustomerIdMutated(_routingSoftwareCustomerIdIsMutated) {
        this._routingSoftwareCustomerIdIsMutated = _routingSoftwareCustomerIdIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRoutingSoftwareSyncStatusMutated(_routingSoftwareSyncStatusIsMutated) {
        this._routingSoftwareSyncStatusIsMutated = _routingSoftwareSyncStatusIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSoftPakTaxBodyCodeMutated(_softPakTaxBodyCodeIsMutated) {
        this._softPakTaxBodyCodeIsMutated = _softPakTaxBodyCodeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWorkspaceDocumentAttributesMutated(_workspaceDocumentAttributesIsMutated) {
        this._workspaceDocumentAttributesIsMutated = _workspaceDocumentAttributesIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWorkspaceMutated(_workspaceIsMutated) {
        this._workspaceIsMutated = _workspaceIsMutated;
        return (this);
    }
    /**
* ```
     * The date that the document was synced for the DSR date.
* ```
     */
    setDsrSyncDate(dsrSyncDate) {
        if (!this._getIsMutateSuppressed() && this.dsrSyncDate !== dsrSyncDate) {
            this._setIsDsrSyncDateMutated(true);
        }
        this.dsrSyncDate = dsrSyncDate;
        return (this);
    }
    /**
* ```
     * The geo coordinate latitude.
* ```
     */
    setGeoLatitude(geoLatitude) {
        if (!this._getIsMutateSuppressed() && this.geoLatitude !== geoLatitude) {
            this._setIsGeoLatitudeMutated(true);
        }
        this.geoLatitude = geoLatitude;
        return (this);
    }
    /**
* ```
     * The geo coordinate longitude.
* ```
     */
    setGeoLongitude(geoLongitude) {
        if (!this._getIsMutateSuppressed() && this.geoLongitude !== geoLongitude) {
            this._setIsGeoLongitudeMutated(true);
        }
        this.geoLongitude = geoLongitude;
        return (this);
    }
    /**
* ```
     * The reverse geo code lookup.
* ```
     */
    setGeoReverseJson(geoReverseJson) {
        if (!this._getIsMutateSuppressed() && this.geoReverseJson !== geoReverseJson) {
            this._setIsGeoReverseJsonMutated(true);
        }
        this.geoReverseJson = geoReverseJson;
        return (this);
    }
    /**
* ```
     * The address JSON that is return when using an address such as Google Map, MS Azure, etc.
* ```
     */
    setGeoServiceAddressLookupJson(geoServiceAddressLookupJson) {
        if (!this._getIsMutateSuppressed() && this.geoServiceAddressLookupJson !== geoServiceAddressLookupJson) {
            this._setIsGeoServiceAddressLookupJsonMutated(true);
        }
        this.geoServiceAddressLookupJson = geoServiceAddressLookupJson;
        return (this);
    }
    /**
* ```
     * The grand total cost for the document.
* ```
     */
    setGrandTotal(grandTotal) {
        if (!this._getIsMutateSuppressed() && this.grandTotal !== grandTotal) {
            this._setIsGrandTotalMutated(true);
        }
        this.grandTotal = grandTotal;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The name of the document
* ```
     */
    setName(name) {
        if (!this._getIsMutateSuppressed() && this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
* ```
     * The tenant Organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * A overwrite pandaDocDetailJson
* ```
     */
    setOverwritePandaDocDetailJson(overwritePandaDocDetailJson) {
        if (!this._getIsMutateSuppressed() && this.overwritePandaDocDetailJson !== EntityUtils_1.EntityUtils.jsonStringSetter({ value: overwritePandaDocDetailJson })) {
            this._setIsOverwritePandaDocDetailJsonMutated(true);
        }
        this.overwritePandaDocDetailJson = EntityUtils_1.EntityUtils.jsonStringSetter({ value: overwritePandaDocDetailJson });
        return (this);
    }
    /**
* ```
     * A JSON text that represents the PandaDoc Detail returned from the PandaDoc API.
* ```
     */
    setPandaDocDetailJson(pandaDocDetailJson) {
        if (!this._getIsMutateSuppressed() && this.pandaDocDetailJson !== EntityUtils_1.EntityUtils.jsonStringSetter({ value: pandaDocDetailJson })) {
            this._setIsPandaDocDetailJsonMutated(true);
        }
        this.pandaDocDetailJson = EntityUtils_1.EntityUtils.jsonStringSetter({ value: pandaDocDetailJson });
        return (this);
    }
    /**
* ```
     * The PandaDocument id
* ```
     */
    setPandaDocID(pandaDocID) {
        if (!this._getIsMutateSuppressed() && this.pandaDocID !== pandaDocID) {
            this._setIsPandaDocIDMutated(true);
        }
        this.pandaDocID = pandaDocID;
        return (this);
    }
    /**
* ```
     * The PandaDoc modified date.
* ```
     */
    setPandaDocModifiedDate(pandaDocModifiedDate) {
        if (!this._getIsMutateSuppressed() && this.pandaDocModifiedDate !== pandaDocModifiedDate) {
            this._setIsPandaDocModifiedDateMutated(true);
        }
        this.pandaDocModifiedDate = pandaDocModifiedDate;
        return (this);
    }
    /**
* ```
     * The PandaDocument status, DRAFT = 0, COMPLETED = 2, VIEWED = 5, WAITINGPAY = 9, PAID = 10, VOIDED = 11, DECLINED = 12
* ```
     */
    setPandaDocStatus(pandaDocStatus) {
        if (!this._getIsMutateSuppressed() && this.pandaDocStatus !== pandaDocStatus) {
            this._setIsPandaDocStatusMutated(true);
        }
        this.pandaDocStatus = pandaDocStatus;
        return (this);
    }
    /**
* ```
     * The customer id value that is returned from a successful post to the routing software customer import API. .
* ```
     */
    setRoutingSoftwareCustomerId(routingSoftwareCustomerId) {
        if (!this._getIsMutateSuppressed() && this.routingSoftwareCustomerId !== routingSoftwareCustomerId) {
            this._setIsRoutingSoftwareCustomerIdMutated(true);
        }
        this.routingSoftwareCustomerId = routingSoftwareCustomerId;
        return (this);
    }
    /**
* ```
     * The routingSoftwareSyncStatus status
* ```
     */
    setRoutingSoftwareSyncStatus(routingSoftwareSyncStatus) {
        if (!this._getIsMutateSuppressed() && this.routingSoftwareSyncStatus !== routingSoftwareSyncStatus) {
            this._setIsRoutingSoftwareSyncStatusMutated(true);
        }
        this.routingSoftwareSyncStatus = routingSoftwareSyncStatus;
        return (this);
    }
    /**
* ```
     * SoftPak tax body code for the document.
* ```
     */
    setSoftPakTaxBodyCode(softPakTaxBodyCode) {
        if (!this._getIsMutateSuppressed() && this.softPakTaxBodyCode !== softPakTaxBodyCode) {
            this._setIsSoftPakTaxBodyCodeMutated(true);
        }
        this.softPakTaxBodyCode = softPakTaxBodyCode;
        return (this);
    }
    /**
* ```
     * The workspace this document belongs to.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setWorkspace(workspace, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.workspace !== workspace) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(workspace, persistanceType);
            this._setIsWorkspaceMutated(true);
        }
        this.workspace = workspace;
        return (this);
    }
    /**
* ```
     * The workspace document attributes.
* ```
     */
    setWorkspaceDocumentAttributes(workspaceDocumentAttributes) {
        if (!this._getIsMutateSuppressed() && this.workspaceDocumentAttributes !== workspaceDocumentAttributes) {
            this._setIsWorkspaceDocumentAttributesMutated(true);
        }
        this.workspaceDocumentAttributes = workspaceDocumentAttributes;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_isRemoveFromRelationship',
            value: this._isRemoveFromRelationship
        });
        this._setCurrentState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'dsrSyncDate',
            value: this.dsrSyncDate
        });
        this._setCurrentState2({
            attributeName: 'geoLatitude',
            value: this.geoLatitude
        });
        this._setCurrentState2({
            attributeName: 'geoLongitude',
            value: this.geoLongitude
        });
        this._setCurrentState2({
            attributeName: 'geoReverseJson',
            value: this.geoReverseJson
        });
        this._setCurrentState2({
            attributeName: 'geoServiceAddressLookupJson',
            value: this.geoServiceAddressLookupJson
        });
        this._setCurrentState2({
            attributeName: 'grandTotal',
            value: this.grandTotal
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'name',
            value: this.name
        });
        this._setCurrentState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setCurrentState2({
            attributeName: 'overwritePandaDocDetailJson',
            value: this.overwritePandaDocDetailJson
        });
        this._setCurrentState2({
            attributeName: 'pandaDocDetailJson',
            value: this.pandaDocDetailJson
        });
        this._setCurrentState2({
            attributeName: 'pandaDocID',
            value: this.pandaDocID
        });
        this._setCurrentState2({
            attributeName: 'pandaDocModifiedDate',
            value: this.pandaDocModifiedDate
        });
        this._setCurrentState2({
            attributeName: 'pandaDocStatus',
            value: this.pandaDocStatus
        });
        this._setCurrentState2({
            attributeName: 'routingSoftwareCustomerId',
            value: this.routingSoftwareCustomerId
        });
        this._setCurrentState2({
            attributeName: 'routingSoftwareSyncStatus',
            value: this.routingSoftwareSyncStatus
        });
        this._setCurrentState2({
            attributeName: 'softPakTaxBodyCode',
            value: this.softPakTaxBodyCode
        });
        this._setCurrentState2({
            attributeName: 'workspace',
            value: this.workspace
        });
        this._setCurrentState2({
            attributeName: 'workspaceDocumentAttributes',
            value: this.workspaceDocumentAttributes
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_isRemoveFromRelationship',
            value: this._isRemoveFromRelationship
        });
        this._setInitializedState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'dsrSyncDate',
            value: this.dsrSyncDate
        });
        this._setInitializedState2({
            attributeName: 'geoLatitude',
            value: this.geoLatitude
        });
        this._setInitializedState2({
            attributeName: 'geoLongitude',
            value: this.geoLongitude
        });
        this._setInitializedState2({
            attributeName: 'geoReverseJson',
            value: this.geoReverseJson
        });
        this._setInitializedState2({
            attributeName: 'geoServiceAddressLookupJson',
            value: this.geoServiceAddressLookupJson
        });
        this._setInitializedState2({
            attributeName: 'grandTotal',
            value: this.grandTotal
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'name',
            value: this.name
        });
        this._setInitializedState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setInitializedState2({
            attributeName: 'overwritePandaDocDetailJson',
            value: this.overwritePandaDocDetailJson
        });
        this._setInitializedState2({
            attributeName: 'pandaDocDetailJson',
            value: this.pandaDocDetailJson
        });
        this._setInitializedState2({
            attributeName: 'pandaDocID',
            value: this.pandaDocID
        });
        this._setInitializedState2({
            attributeName: 'pandaDocModifiedDate',
            value: this.pandaDocModifiedDate
        });
        this._setInitializedState2({
            attributeName: 'pandaDocStatus',
            value: this.pandaDocStatus
        });
        this._setInitializedState2({
            attributeName: 'routingSoftwareCustomerId',
            value: this.routingSoftwareCustomerId
        });
        this._setInitializedState2({
            attributeName: 'routingSoftwareSyncStatus',
            value: this.routingSoftwareSyncStatus
        });
        this._setInitializedState2({
            attributeName: 'softPakTaxBodyCode',
            value: this.softPakTaxBodyCode
        });
        this._setInitializedState2({
            attributeName: 'workspace',
            value: this.workspace
        });
        this._setInitializedState2({
            attributeName: 'workspaceDocumentAttributes',
            value: this.workspaceDocumentAttributes
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this._isRemoveFromRelationship);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.dsrSyncDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.geoLatitude);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.geoLongitude);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.geoReverseJson);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.geoServiceAddressLookupJson);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.grandTotal);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.name);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organization);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.overwritePandaDocDetailJson);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocDetailJson);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocID);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocModifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocStatus);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.routingSoftwareCustomerId);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.routingSoftwareSyncStatus);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.softPakTaxBodyCode);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.workspace);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.workspaceDocumentAttributes);
        return (hashCode_n);
    }
}
exports.WorkspaceDocument = WorkspaceDocument;
WorkspaceDocument.metaDataForWorkspaceDocument = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.WorkspaceDocument", WorkspaceDocument);
//# sourceMappingURL=WorkspaceDocument.js.map