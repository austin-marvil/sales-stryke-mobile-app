"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingSoftwareAccount = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._accessTokenIsMutated = "_accessTokenIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._refreshTokenIsMutated = "_refreshTokenIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._routingSoftwareTypeIsMutated = "_routingSoftwareTypeIsMutated";
        this._routingSoftwareVersionIsMutated = "_routingSoftwareVersionIsMutated";
        this._stringVar1IsMutated = "_stringVar1IsMutated";
        this._stringVar2IsMutated = "_stringVar2IsMutated";
        this._stringVar3IsMutated = "_stringVar3IsMutated";
        this._tokenExpirationDateIsMutated = "_tokenExpirationDateIsMutated";
        this.accessToken = "accessToken";
        this.createdDate = "createdDate";
        this.description = "description";
        this.id = "id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.refreshToken = "refreshToken";
        this.routingSoftwareType = "routingSoftwareType";
        this.routingSoftwareVersion = "routingSoftwareVersion";
        this.stringVar1 = "stringVar1";
        this.stringVar2 = "stringVar2";
        this.stringVar3 = "stringVar3";
        this.tokenExpirationDate = "tokenExpirationDate";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._accessTokenIsMutated = "_accessTokenIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._refreshTokenIsMutated = "_refreshTokenIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._routingSoftwareTypeIsMutated = "_routingSoftwareTypeIsMutated";
        this._routingSoftwareVersionIsMutated = "_routingSoftwareVersionIsMutated";
        this._stringVar1IsMutated = "_stringVar1IsMutated";
        this._stringVar2IsMutated = "_stringVar2IsMutated";
        this._stringVar3IsMutated = "_stringVar3IsMutated";
        this._tokenExpirationDateIsMutated = "_tokenExpirationDateIsMutated";
        this.accessToken = "accessToken";
        this.createdDate = "createdDate";
        this.description = "description";
        this._id = "_id";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.refreshToken = "refreshToken";
        this.routingSoftwareType = "routingSoftwareType";
        this.routingSoftwareVersion = "routingSoftwareVersion";
        this.stringVar1 = "stringVar1";
        this.stringVar2 = "stringVar2";
        this.stringVar3 = "stringVar3";
        this.tokenExpirationDate = "tokenExpirationDate";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.RoutingSoftwareAccount";
        this.mongDataModeName = "RoutingSoftwareAccount";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class RoutingSoftwareAccount extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._accessTokenIsMutated = false;
        this._descriptionIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._refreshTokenIsMutated = false;
        this._routingSoftwareTypeIsMutated = false;
        this._routingSoftwareVersionIsMutated = false;
        this._stringVar1IsMutated = false;
        this._stringVar2IsMutated = false;
        this._stringVar3IsMutated = false;
        this._tokenExpirationDateIsMutated = false;
        this.accessToken = null;
        this.description = null;
        this.id = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.RoutingSoftwareAccount";
        this.name = null;
        this.organization = null;
        this.refreshToken = null;
        this.routingSoftwareType = null;
        this.routingSoftwareVersion = null;
        this.stringVar1 = null;
        this.stringVar2 = null;
        this.stringVar3 = null;
        this.tokenExpirationDate = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._accessTokenIsMutated = false;
        this._descriptionIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._refreshTokenIsMutated = false;
        this._routingSoftwareTypeIsMutated = false;
        this._routingSoftwareVersionIsMutated = false;
        this._stringVar1IsMutated = false;
        this._stringVar2IsMutated = false;
        this._stringVar3IsMutated = false;
        this._tokenExpirationDateIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.RoutingSoftwareAccount");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsAccessTokenMutated() {
        return (this._accessTokenIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDescriptionMutated() {
        return (this._descriptionIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRefreshTokenMutated() {
        return (this._refreshTokenIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRoutingSoftwareTypeMutated() {
        return (this._routingSoftwareTypeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRoutingSoftwareVersionMutated() {
        return (this._routingSoftwareVersionIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsStringVar1Mutated() {
        return (this._stringVar1IsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsStringVar2Mutated() {
        return (this._stringVar2IsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsStringVar3Mutated() {
        return (this._stringVar3IsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsTokenExpirationDateMutated() {
        return (this._tokenExpirationDateIsMutated);
    }
    /**
     * The accessToken of routing software account.
     * @returns string | null
     */
    getAccessToken() {
        return (this.accessToken);
    }
    /**
     * The description of routing software account.
     * @returns string | null
     */
    getDescription() {
        return (this.description);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The name of routing software account.
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * The refreshToken of routing software account.
     * @returns string | null
     */
    getRefreshToken() {
        return (this.refreshToken);
    }
    /**
     * The routingSoftwareType.
     * @returns RoutingSoftwareType | null
     */
    getRoutingSoftwareType() {
        return (this.routingSoftwareType);
    }
    /**
     * The routingSoftwareVersion.
     * @returns RoutingSoftwareVersion | null
     */
    getRoutingSoftwareVersion() {
        return (this.routingSoftwareVersion);
    }
    /**
     * The stringVar1 of routing software account.
     * @returns string | null
     */
    getStringVar1() {
        return (this.stringVar1);
    }
    /**
     * The stringVar2 of routing software account.
     * @returns string | null
     */
    getStringVar2() {
        return (this.stringVar2);
    }
    /**
     * The stringVar3 of routing software account.
     * @returns string | null
     */
    getStringVar3() {
        return (this.stringVar3);
    }
    /**
     * The tokenExpirationDate of routing software account.
     * @returns Date | null
     */
    getTokenExpirationDate() {
        return (this.tokenExpirationDate);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAccessTokenMutated(_accessTokenIsMutated) {
        this._accessTokenIsMutated = _accessTokenIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDescriptionMutated(_descriptionIsMutated) {
        this._descriptionIsMutated = _descriptionIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRefreshTokenMutated(_refreshTokenIsMutated) {
        this._refreshTokenIsMutated = _refreshTokenIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRoutingSoftwareTypeMutated(_routingSoftwareTypeIsMutated) {
        this._routingSoftwareTypeIsMutated = _routingSoftwareTypeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRoutingSoftwareVersionMutated(_routingSoftwareVersionIsMutated) {
        this._routingSoftwareVersionIsMutated = _routingSoftwareVersionIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsStringVar1Mutated(_stringVar1IsMutated) {
        this._stringVar1IsMutated = _stringVar1IsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsStringVar2Mutated(_stringVar2IsMutated) {
        this._stringVar2IsMutated = _stringVar2IsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsStringVar3Mutated(_stringVar3IsMutated) {
        this._stringVar3IsMutated = _stringVar3IsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsTokenExpirationDateMutated(_tokenExpirationDateIsMutated) {
        this._tokenExpirationDateIsMutated = _tokenExpirationDateIsMutated;
        return (this);
    }
    /**
* ```
     * The accessToken of routing software account.
* ```
     */
    setAccessToken(accessToken) {
        if (!this._getIsMutateSuppressed() && this.accessToken !== accessToken) {
            this._setIsAccessTokenMutated(true);
        }
        this.accessToken = accessToken;
        return (this);
    }
    /**
* ```
     * The description of routing software account.
* ```
     */
    setDescription(description) {
        if (!this._getIsMutateSuppressed() && this.description !== description) {
            this._setIsDescriptionMutated(true);
        }
        this.description = description;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The name of routing software account.
* ```
     */
    setName(name) {
        if (!this._getIsMutateSuppressed() && this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * The refreshToken of routing software account.
* ```
     */
    setRefreshToken(refreshToken) {
        if (!this._getIsMutateSuppressed() && this.refreshToken !== refreshToken) {
            this._setIsRefreshTokenMutated(true);
        }
        this.refreshToken = refreshToken;
        return (this);
    }
    /**
* ```
     * The routingSoftwareType.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setRoutingSoftwareType(routingSoftwareType, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.routingSoftwareType !== routingSoftwareType) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(routingSoftwareType, persistanceType);
            this._setIsRoutingSoftwareTypeMutated(true);
        }
        this.routingSoftwareType = routingSoftwareType;
        return (this);
    }
    /**
* ```
     * The routingSoftwareVersion.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setRoutingSoftwareVersion(routingSoftwareVersion, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.routingSoftwareVersion !== routingSoftwareVersion) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(routingSoftwareVersion, persistanceType);
            this._setIsRoutingSoftwareVersionMutated(true);
        }
        this.routingSoftwareVersion = routingSoftwareVersion;
        return (this);
    }
    /**
* ```
     * The stringVar1 of routing software account.
* ```
     */
    setStringVar1(stringVar1) {
        if (!this._getIsMutateSuppressed() && this.stringVar1 !== stringVar1) {
            this._setIsStringVar1Mutated(true);
        }
        this.stringVar1 = stringVar1;
        return (this);
    }
    /**
* ```
     * The stringVar2 of routing software account.
* ```
     */
    setStringVar2(stringVar2) {
        if (!this._getIsMutateSuppressed() && this.stringVar2 !== stringVar2) {
            this._setIsStringVar2Mutated(true);
        }
        this.stringVar2 = stringVar2;
        return (this);
    }
    /**
* ```
     * The stringVar3 of routing software account.
* ```
     */
    setStringVar3(stringVar3) {
        if (!this._getIsMutateSuppressed() && this.stringVar3 !== stringVar3) {
            this._setIsStringVar3Mutated(true);
        }
        this.stringVar3 = stringVar3;
        return (this);
    }
    /**
* ```
     * The tokenExpirationDate of routing software account.
* ```
     */
    setTokenExpirationDate(tokenExpirationDate) {
        if (!this._getIsMutateSuppressed() && this.tokenExpirationDate !== tokenExpirationDate) {
            this._setIsTokenExpirationDateMutated(true);
        }
        this.tokenExpirationDate = tokenExpirationDate;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setCurrentState2({
            attributeName: 'accessToken',
            value: this.accessToken
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'description',
            value: this.description
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'name',
            value: this.name
        });
        this._setCurrentState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setCurrentState2({
            attributeName: 'refreshToken',
            value: this.refreshToken
        });
        this._setCurrentState2({
            attributeName: 'routingSoftwareType',
            value: this.routingSoftwareType
        });
        this._setCurrentState2({
            attributeName: 'routingSoftwareVersion',
            value: this.routingSoftwareVersion
        });
        this._setCurrentState2({
            attributeName: 'stringVar1',
            value: this.stringVar1
        });
        this._setCurrentState2({
            attributeName: 'stringVar2',
            value: this.stringVar2
        });
        this._setCurrentState2({
            attributeName: 'stringVar3',
            value: this.stringVar3
        });
        this._setCurrentState2({
            attributeName: 'tokenExpirationDate',
            value: this.tokenExpirationDate
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setInitializedState2({
            attributeName: 'accessToken',
            value: this.accessToken
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'description',
            value: this.description
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'name',
            value: this.name
        });
        this._setInitializedState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setInitializedState2({
            attributeName: 'refreshToken',
            value: this.refreshToken
        });
        this._setInitializedState2({
            attributeName: 'routingSoftwareType',
            value: this.routingSoftwareType
        });
        this._setInitializedState2({
            attributeName: 'routingSoftwareVersion',
            value: this.routingSoftwareVersion
        });
        this._setInitializedState2({
            attributeName: 'stringVar1',
            value: this.stringVar1
        });
        this._setInitializedState2({
            attributeName: 'stringVar2',
            value: this.stringVar2
        });
        this._setInitializedState2({
            attributeName: 'stringVar3',
            value: this.stringVar3
        });
        this._setInitializedState2({
            attributeName: 'tokenExpirationDate',
            value: this.tokenExpirationDate
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.accessToken);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.description);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.name);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organization);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.refreshToken);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.routingSoftwareType);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.routingSoftwareVersion);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.stringVar1);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.stringVar2);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.stringVar3);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.tokenExpirationDate);
        return (hashCode_n);
    }
}
exports.RoutingSoftwareAccount = RoutingSoftwareAccount;
RoutingSoftwareAccount.metaDataForRoutingSoftwareAccount = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.RoutingSoftwareAccount", RoutingSoftwareAccount);
//# sourceMappingURL=RoutingSoftwareAccount.js.map