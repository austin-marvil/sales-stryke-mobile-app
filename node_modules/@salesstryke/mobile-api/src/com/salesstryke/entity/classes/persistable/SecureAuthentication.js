"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecureAuthentication = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._entityState = "_entityState";
        this._firstNameIsMutated = "_firstNameIsMutated";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._lastNameIsMutated = "_lastNameIsMutated";
        this._loginIsMutated = "_loginIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._passwordIsMutated = "_passwordIsMutated";
        this.createdDate = "createdDate";
        this.firstName = "firstName";
        this.id = "id";
        this.jsonType = "jsonType";
        this.lastName = "lastName";
        this.login = "login";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.password = "password";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._entityState = "_entityState";
        this._firstNameIsMutated = "_firstNameIsMutated";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._lastNameIsMutated = "_lastNameIsMutated";
        this._loginIsMutated = "_loginIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._passwordIsMutated = "_passwordIsMutated";
        this.createdDate = "createdDate";
        this.firstName = "firstName";
        this._id = "_id";
        this.jsonType = "jsonType";
        this.lastName = "lastName";
        this.login = "login";
        this.modifiedDate = "modifiedDate";
        this.organizationRef = "organizationRef";
        this.password = "password";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.SecureAuthentication";
        this.mongDataModeName = "SecureAuthentication";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class SecureAuthentication extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor() {
        super();
        this._firstNameIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._lastNameIsMutated = false;
        this._loginIsMutated = false;
        this._organizationIsMutated = false;
        this._passwordIsMutated = false;
        this.firstName = null;
        this.id = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.SecureAuthentication";
        this.lastName = null;
        this.login = null;
        this.organization = null;
        this.password = null;
    }
    /**
     * Returns true if any data has been modified.
     * @returns
     */
    _getIsMutated() {
        let isMutated_b = false;
        if (this._initializedDataKeyIsMutated) {
            isMutated_b = true;
        }
        if (this._firstNameIsMutated) {
            isMutated_b = true;
        }
        if (this._lastNameIsMutated) {
            isMutated_b = true;
        }
        if (this._loginIsMutated) {
            isMutated_b = true;
        }
        if (this._organizationIsMutated) {
            isMutated_b = true;
        }
        if (this._passwordIsMutated) {
            isMutated_b = true;
        }
        return (isMutated_b);
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._firstNameIsMutated = false;
        this._lastNameIsMutated = false;
        this._loginIsMutated = false;
        this._organizationIsMutated = false;
        this._passwordIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.SecureAuthentication");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsFirstNameMutated() {
        return (this._firstNameIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLastNameMutated() {
        return (this._lastNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLoginMutated() {
        return (this._loginIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPasswordMutated() {
        return (this._passwordIsMutated);
    }
    /**
     * The users first name.
     * @returns string | null
     */
    getFirstName() {
        return (this.firstName);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The users last name.
     * @returns string | null
     */
    getLastName() {
        return (this.lastName);
    }
    /**
     * The user login
     * @returns string | null
     */
    getLogin() {
        return (this.login);
    }
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * The user password
     * @returns string | null
     */
    getPassword() {
        return (this.password);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsFirstNameMutated(_firstNameIsMutated) {
        this._firstNameIsMutated = _firstNameIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLastNameMutated(_lastNameIsMutated) {
        this._lastNameIsMutated = _lastNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLoginMutated(_loginIsMutated) {
        this._loginIsMutated = _loginIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPasswordMutated(_passwordIsMutated) {
        this._passwordIsMutated = _passwordIsMutated;
        return (this);
    }
    /**
* ```
     * The users first name.
* ```
     */
    setFirstName(firstName) {
        if (!this._getIsMutateSuppressed() && this.firstName !== firstName) {
            this._setIsFirstNameMutated(true);
        }
        this.firstName = firstName;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The users last name.
* ```
     */
    setLastName(lastName) {
        if (!this._getIsMutateSuppressed() && this.lastName !== lastName) {
            this._setIsLastNameMutated(true);
        }
        this.lastName = lastName;
        return (this);
    }
    /**
* ```
     * The user login
* ```
     */
    setLogin(login) {
        if (!this._getIsMutateSuppressed() && this.login !== login) {
            this._setIsLoginMutated(true);
        }
        this.login = login;
        return (this);
    }
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * The user password
* ```
     */
    setPassword(password) {
        if (!this._getIsMutateSuppressed() && this.password !== password) {
            this._setIsPasswordMutated(true);
        }
        this.password = password;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        /**
                hashCode_n += HashCodeUtil.toHashCode(this._entityState);
                hashCode_n += HashCodeUtil.toHashCode(this._firstNameIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._idSetBySystem);
                hashCode_n += HashCodeUtil.toHashCode(this._initializedDataKey);
                hashCode_n += HashCodeUtil.toHashCode(this._initializedDataKeyIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._lastNameIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._loginIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._organizationIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._passwordIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this.createdDate);
                hashCode_n += HashCodeUtil.toHashCode(this.firstName);
                hashCode_n += HashCodeUtil.toHashCode(this.id);
                hashCode_n += HashCodeUtil.toHashCode(this.jsonType);
                hashCode_n += HashCodeUtil.toHashCode(this.lastName);
                hashCode_n += HashCodeUtil.toHashCode(this.login);
                hashCode_n += HashCodeUtil.toHashCode(this.modifiedDate);
                hashCode_n += HashCodeUtil.toHashCode(this.password);
        
        */
        return (hashCode_n);
    }
}
exports.SecureAuthentication = SecureAuthentication;
SecureAuthentication.metaDataForSecureAuthentication = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.SecureAuthentication", SecureAuthentication);
//# sourceMappingURL=SecureAuthentication.js.map