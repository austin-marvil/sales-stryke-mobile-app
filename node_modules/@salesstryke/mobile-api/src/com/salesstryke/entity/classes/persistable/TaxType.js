"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.tax = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._activeEndDateIsMutated = "_activeEndDateIsMutated";
        this._activeStartDateIsMutated = "_activeStartDateIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isCustomerForOrganizationIsMutated = "_isCustomerForOrganizationIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._taxRateIsMutated = "_taxRateIsMutated";
        this.activeEndDate = "activeEndDate";
        this.activeStartDate = "activeStartDate";
        this.createdDate = "createdDate";
        this.description = "description";
        this.id = "id";
        this.isCustomerForOrganization = "isCustomerForOrganization";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.taxRate = "taxRate";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._activeEndDateIsMutated = "_activeEndDateIsMutated";
        this._activeStartDateIsMutated = "_activeStartDateIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isCustomerForOrganizationIsMutated = "_isCustomerForOrganizationIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._taxRateIsMutated = "_taxRateIsMutated";
        this.activeEndDate = "activeEndDate";
        this.activeStartDate = "activeStartDate";
        this.createdDate = "createdDate";
        this.description = "description";
        this._id = "_id";
        this.isCustomerForOrganization = "isCustomerForOrganization";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.taxRate = "taxRate";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.tax";
        this.mongDataModeName = "tax";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class tax extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor() {
        super();
        this._activeEndDateIsMutated = false;
        this._activeStartDateIsMutated = false;
        this._descriptionIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._isCustomerForOrganizationIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._taxRateIsMutated = false;
        this.activeEndDate = null;
        this.activeStartDate = null;
        this.description = null;
        this.id = null;
        this.isCustomerForOrganization = undefined;
        this.jsonType = "com.salesstryke.entity.classes.persistable.tax";
        this.name = null;
        this.organization = null;
        this.taxRate = 0;
    }
    /**
     * Returns true if any data has been modified.
     * @returns
     */
    _getIsMutated() {
        let isMutated_b = false;
        if (!this._getIsMutatedFromMap()) {
            if (this._initializedDataKeyIsMutated) {
                isMutated_b = true;
            }
            if (this._activeEndDateIsMutated) {
                isMutated_b = true;
            }
            if (this._activeStartDateIsMutated) {
                isMutated_b = true;
            }
            if (this._descriptionIsMutated) {
                isMutated_b = true;
            }
            if (this._isCustomerForOrganizationIsMutated) {
                isMutated_b = true;
            }
            if (this._nameIsMutated) {
                isMutated_b = true;
            }
            if (this._organizationIsMutated) {
                isMutated_b = true;
            }
            if (this._taxRateIsMutated) {
                isMutated_b = true;
            }
        }
        if (this._getIsMutatedFromMap()) {
            // child entity
            this._initializedDataKeyIsMutated = false;
            if (this._isMutated({ obj0: this._getInitialAttributeState({ name: '_initializedDataKey' }), obj1: this._initializedDataKey })) {
                this._initializedDataKeyIsMutated = true;
                isMutated_b = true;
            }
            this._activeEndDateIsMutated = false;
            if (this._isMutated({ obj0: this._getInitialAttributeState({ name: 'activeEndDate' }), obj1: this.activeEndDate })) {
                this._activeEndDateIsMutated = true;
                isMutated_b = true;
            }
            this._activeStartDateIsMutated = false;
            if (this._isMutated({ obj0: this._getInitialAttributeState({ name: 'activeStartDate' }), obj1: this.activeStartDate })) {
                this._activeStartDateIsMutated = true;
                isMutated_b = true;
            }
            this._descriptionIsMutated = false;
            if (this._isMutated({ obj0: this._getInitialAttributeState({ name: 'description' }), obj1: this.description })) {
                this._descriptionIsMutated = true;
                isMutated_b = true;
            }
            this._isCustomerForOrganizationIsMutated = false;
            if (this._isMutated({ obj0: this._getInitialAttributeState({ name: 'isCustomerForOrganization' }), obj1: this.isCustomerForOrganization })) {
                this._isCustomerForOrganizationIsMutated = true;
                isMutated_b = true;
            }
            this._nameIsMutated = false;
            if (this._isMutated({ obj0: this._getInitialAttributeState({ name: 'name' }), obj1: this.name })) {
                this._nameIsMutated = true;
                isMutated_b = true;
            }
            this._organizationIsMutated = false;
            if (this._isMutated({ obj0: this._getInitialAttributeState({ name: 'organization' }), obj1: this.organization })) {
                this._organizationIsMutated = true;
                isMutated_b = true;
            }
            this._taxRateIsMutated = false;
            if (this._isMutated({ obj0: this._getInitialAttributeState({ name: 'taxRate' }), obj1: this.taxRate })) {
                this._taxRateIsMutated = true;
                isMutated_b = true;
            }
        }
        return (isMutated_b);
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._activeEndDateIsMutated = false;
        this._activeStartDateIsMutated = false;
        this._descriptionIsMutated = false;
        this._isCustomerForOrganizationIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._taxRateIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.tax");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveEndDateMutated() {
        return (this._activeEndDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveStartDateMutated() {
        return (this._activeStartDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDescriptionMutated() {
        return (this._descriptionIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCustomerForOrganizationMutated() {
        return (this._isCustomerForOrganizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsTaxRateMutated() {
        return (this._taxRateIsMutated);
    }
    /**
     * The active end date.
     * @returns Date | null
     */
    getActiveEndDate() {
        return (this.activeEndDate);
    }
    /**
     * The active start date.
     * @returns Date | null
     */
    getActiveStartDate() {
        return (this.activeStartDate);
    }
    /**
     * The description for this tax type.
     * @returns string | null
     */
    getDescription() {
        return (this.description);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     * Customer for organization.
     * @returns boolean
     */
    getIsCustomerForOrganization() {
        return ((this.isCustomerForOrganization === undefined) ? false : this.isCustomerForOrganization);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The name for this tax type.
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * The tax rate in.
     * @returns number
     */
    getTaxRate() {
        return (this.taxRate);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveEndDateMutated(_activeEndDateIsMutated) {
        this._activeEndDateIsMutated = _activeEndDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveStartDateMutated(_activeStartDateIsMutated) {
        this._activeStartDateIsMutated = _activeStartDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDescriptionMutated(_descriptionIsMutated) {
        this._descriptionIsMutated = _descriptionIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCustomerForOrganizationMutated(_isCustomerForOrganizationIsMutated) {
        this._isCustomerForOrganizationIsMutated = _isCustomerForOrganizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsTaxRateMutated(_taxRateIsMutated) {
        this._taxRateIsMutated = _taxRateIsMutated;
        return (this);
    }
    /**
* ```
     * The active end date.
* ```
     */
    setActiveEndDate(activeEndDate) {
        if (!this._getIsMutateSuppressed() && this.activeEndDate !== activeEndDate) {
            this._setIsActiveEndDateMutated(true);
        }
        this.activeEndDate = activeEndDate;
        return (this);
    }
    /**
* ```
     * The active start date.
* ```
     */
    setActiveStartDate(activeStartDate) {
        if (!this._getIsMutateSuppressed() && this.activeStartDate !== activeStartDate) {
            this._setIsActiveStartDateMutated(true);
        }
        this.activeStartDate = activeStartDate;
        return (this);
    }
    /**
* ```
     * The description for this tax type.
* ```
     */
    setDescription(description) {
        if (!this._getIsMutateSuppressed() && this.description !== description) {
            this._setIsDescriptionMutated(true);
        }
        this.description = description;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     * Customer for organization.
* ```
     */
    setIsCustomerForOrganization(isCustomerForOrganization) {
        if (!this._getIsMutateSuppressed() && this.isCustomerForOrganization !== isCustomerForOrganization) {
            this._setIsCustomerForOrganizationMutated(true);
        }
        this.isCustomerForOrganization = isCustomerForOrganization;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The name for this tax type.
* ```
     */
    setName(name) {
        if (!this._getIsMutateSuppressed() && this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * The tax rate in.
* ```
     */
    setTaxRate(taxRate) {
        if (!this._getIsMutateSuppressed() && this.taxRate !== taxRate) {
            this._setIsTaxRateMutated(true);
        }
        this.taxRate = taxRate;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        /**
                hashCode_n += HashCodeUtil.toHashCode(this._activeEndDateIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._activeStartDateIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._descriptionIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._entityState);
                hashCode_n += HashCodeUtil.toHashCode(this._idSetBySystem);
                hashCode_n += HashCodeUtil.toHashCode(this._initializedDataKey);
                hashCode_n += HashCodeUtil.toHashCode(this._initializedDataKeyIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._isAddToRelationship);
                hashCode_n += HashCodeUtil.toHashCode(this._isAddToRelationshipIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._isCustomerForOrganizationIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._nameIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._organizationIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this._relationshipPersistableType);
                hashCode_n += HashCodeUtil.toHashCode(this._taxRateIsMutated);
                hashCode_n += HashCodeUtil.toHashCode(this.activeEndDate);
                hashCode_n += HashCodeUtil.toHashCode(this.activeStartDate);
                hashCode_n += HashCodeUtil.toHashCode(this.createdDate);
                hashCode_n += HashCodeUtil.toHashCode(this.description);
                hashCode_n += HashCodeUtil.toHashCode(this.id);
                hashCode_n += HashCodeUtil.toHashCode(this.isCustomerForOrganization);
                hashCode_n += HashCodeUtil.toHashCode(this.jsonType);
                hashCode_n += HashCodeUtil.toHashCode(this.modifiedDate);
                hashCode_n += HashCodeUtil.toHashCode(this.name);
                hashCode_n += HashCodeUtil.toHashCode(this.taxRate);
        
        */
        return (hashCode_n);
    }
}
exports.tax = tax;
tax.metaDataFortax = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.tax", tax);
//# sourceMappingURL=TaxType.js.map