/**
 * This file is auto generated DO NOT EDIT.
 */
import { Organization } from './Organization';
import { JsonApiPersistableBase } from '../../../jsonApi/JsonApiPersistableBase';
import { PersistenceType } from '../../../data/PersistenceType';
declare class EntityAttributes {
    _cartIdIsMutated: string;
    _customerAddressIsMutated: string;
    _customerFirstNameIsMutated: string;
    _customerLastNameIsMutated: string;
    _dataJSONStrIsMutated: string;
    _entityState: string;
    _idSetBySystem: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _isRemoveFromRelationship: string;
    _isRemoveFromRelationshipIsMutated: string;
    _jsonStateStr: string;
    _organizationIsMutated: string;
    _relationshipPersistableType: string;
    _statusIsMutated: string;
    _widgetCustomerUUIDIsMutated: string;
    cartId: string;
    createdDate: string;
    customerAddress: string;
    customerFirstName: string;
    customerLastName: string;
    dataJSONStr: string;
    id: string;
    jsonType: string;
    modifiedDate: string;
    organization: string;
    status: string;
    widgetCustomerUUID: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _cartIdIsMutated: string;
    _customerAddressIsMutated: string;
    _customerFirstNameIsMutated: string;
    _customerLastNameIsMutated: string;
    _dataJSONStrIsMutated: string;
    _entityState: string;
    _idSetBySystem: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _isRemoveFromRelationship: string;
    _isRemoveFromRelationshipIsMutated: string;
    _jsonStateStr: string;
    _organizationIsMutated: string;
    _relationshipPersistableType: string;
    _statusIsMutated: string;
    _widgetCustomerUUIDIsMutated: string;
    cartId: string;
    createdDate: string;
    customerAddress: string;
    customerFirstName: string;
    customerLastName: string;
    dataJSONStr: string;
    _id: string;
    jsonType: string;
    modifiedDate: string;
    organization: string;
    status: string;
    widgetCustomerUUID: string;
}
declare class MetaData {
    namespace: string;
    mongDataModeName: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class ProductServiceViewStatusAudit extends JsonApiPersistableBase {
    static metaDataForProductServiceViewStatusAudit: MetaData;
    private _cartIdIsMutated;
    private _customerAddressIsMutated;
    private _customerFirstNameIsMutated;
    private _customerLastNameIsMutated;
    private _dataJSONStrIsMutated;
    private _idSetBySystem;
    private _initializedDataKey;
    private _initializedDataKeyIsMutated;
    private _isAddToRelationship;
    private _isAddToRelationshipIsMutated;
    private _isRemoveFromRelationship;
    private _isRemoveFromRelationshipIsMutated;
    private _organizationIsMutated;
    private _statusIsMutated;
    private _widgetCustomerUUIDIsMutated;
    private cartId;
    private customerAddress;
    private customerFirstName;
    private customerLastName;
    private dataJSONStr;
    private id;
    private jsonType;
    private organization;
    private status;
    private widgetCustomerUUID;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): ProductServiceViewStatusAudit;
    getClassName(): string;
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState(): string | null;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr(): string | null;
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType(): number;
    /**
     *
     * @returns Date | null
     */
    getCreatedDate(): Date | null;
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate(): Date | null;
    /**
     *
     * @returns boolean
     */
    _getIsCartIdMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsCustomerAddressMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsCustomerFirstNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsCustomerLastNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsDataJSONStrMutated(): boolean;
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem(): boolean;
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey(): string | null;
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationship(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationshipMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsStatusMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsWidgetCustomerUUIDMutated(): boolean;
    /**
     * The ID of the cart associated with this post-service view.
     * @returns string | null
     */
    getCartId(): string | null;
    /**
     * The address of the customer.
     * @returns string | null
     */
    getCustomerAddress(): string | null;
    /**
     * The first name of the customer.
     * @returns string | null
     */
    getCustomerFirstName(): string | null;
    /**
     * The last name of the customer.
     * @returns string | null
     */
    getCustomerLastName(): string | null;
    /**
     * JSON string containing the post-service view data.
     * @returns Object
     */
    getDataJSONStr(): Object;
    /**
     *
     * @returns string | null
     */
    getId(): string | null;
    /**
     *
     * @returns string | null
     */
    getJsonType(): string | null;
    /**
     * The tenant Organization.
     * @returns Organization | null
     */
    getOrganization(): Organization | null;
    /**
     * The status of the post-service view.
     * @returns string | null
     */
    getStatus(): string | null;
    /**
     * The UUID of the customer in the widget system.
     * @returns string | null
     */
    getWidgetCustomerUUID(): string | null;
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState: string | null): ProductServiceViewStatusAudit;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr: string | null): ProductServiceViewStatusAudit;
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType: number): ProductServiceViewStatusAudit;
    /**
     *
     */
    setCreatedDate(createdDate: Date | null): ProductServiceViewStatusAudit;
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate: Date | null): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsCartIdMutated(_cartIdIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsCustomerAddressMutated(_customerAddressIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsCustomerFirstNameMutated(_customerFirstNameIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsCustomerLastNameMutated(_customerLastNameIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsDataJSONStrMutated(_dataJSONStrIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey: string | null): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationship(_isRemoveFromRelationship: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationshipMutated(_isRemoveFromRelationshipIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsStatusMutated(_statusIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    _setIsWidgetCustomerUUIDMutated(_widgetCustomerUUIDIsMutated: boolean): ProductServiceViewStatusAudit;
    /**
* ```
     * The ID of the cart associated with this post-service view.
* ```
     */
    setCartId(cartId: string | null): ProductServiceViewStatusAudit;
    /**
* ```
     * The address of the customer.
* ```
     */
    setCustomerAddress(customerAddress: string | null): ProductServiceViewStatusAudit;
    /**
* ```
     * The first name of the customer.
* ```
     */
    setCustomerFirstName(customerFirstName: string | null): ProductServiceViewStatusAudit;
    /**
* ```
     * The last name of the customer.
* ```
     */
    setCustomerLastName(customerLastName: string | null): ProductServiceViewStatusAudit;
    /**
* ```
     * JSON string containing the post-service view data.
* ```
     */
    setDataJSONStr(dataJSONStr: Object): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    setId(id: string | null): ProductServiceViewStatusAudit;
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType: string | null): ProductServiceViewStatusAudit;
    /**
* ```
     * The tenant Organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization: Organization | null, persistanceType?: PersistenceType): ProductServiceViewStatusAudit;
    /**
* ```
     * The status of the post-service view.
* ```
     */
    setStatus(status: string | null): ProductServiceViewStatusAudit;
    /**
* ```
     * The UUID of the customer in the widget system.
* ```
     */
    setWidgetCustomerUUID(widgetCustomerUUID: string | null): ProductServiceViewStatusAudit;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
