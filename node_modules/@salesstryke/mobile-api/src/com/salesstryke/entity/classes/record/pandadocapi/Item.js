"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Item = void 0;
const ClassFor_1 = require("../../../../data/ClassFor");
const JsonApiRecordBase_1 = require("../../../../jsonApi/JsonApiRecordBase");
const HashCodeUtil_1 = require("../../../../utils/HashCodeUtil");
class EntityAttributes {
    constructor() {
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._priceIsMutated = "_priceIsMutated";
        this._qtyIsMutated = "_qtyIsMutated";
        this._subtotalIsMutated = "_subtotalIsMutated";
        this.description = "description";
        this.name = "name";
        this.options = "options";
        this.price = "price";
        this.qty = "qty";
        this.subtotal = "subtotal";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._priceIsMutated = "_priceIsMutated";
        this._qtyIsMutated = "_qtyIsMutated";
        this._subtotalIsMutated = "_subtotalIsMutated";
        this.description = "description";
        this.name = "name";
        this.options = "options";
        this.price = "price";
        this.qty = "qty";
        this.subtotal = "subtotal";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.record.pandadocapi.Item";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class Item extends JsonApiRecordBase_1.JsonApiRecordBase {
    constructor(p) {
        super(p);
        this._descriptionIsMutated = false;
        this._nameIsMutated = false;
        this._priceIsMutated = false;
        this._qtyIsMutated = false;
        this._subtotalIsMutated = false;
        this.description = null;
        this.name = null;
        this.options = null;
        this.price = 0;
        this.qty = 0;
        this.subtotal = 0;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.record.pandadocapi.Item");
    }
    /**
     *
     * @returns boolean
     */
    _getIsDescriptionMutated() {
        return (this._descriptionIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPriceMutated() {
        return (this._priceIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsQtyMutated() {
        return (this._qtyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSubtotalMutated() {
        return (this._subtotalIsMutated);
    }
    /**
     * The description of the item.
     * @returns string | null
     */
    getDescription() {
        return (this.description);
    }
    /**
     * The name of the item.
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * The options for the item.
     * @returns Options | null
     */
    getOptions() {
        return (this.options);
    }
    /**
     * The name of the item.
     * @returns number
     */
    getPrice() {
        return (this.price);
    }
    /**
     * The quantity of the item.
     * @returns number
     */
    getQty() {
        return (this.qty);
    }
    /**
     * The subtotal for the document.
     * @returns number
     */
    getSubtotal() {
        return (this.subtotal);
    }
    /**
* ```
     *
* ```
     */
    _setIsDescriptionMutated(_descriptionIsMutated) {
        this._descriptionIsMutated = _descriptionIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPriceMutated(_priceIsMutated) {
        this._priceIsMutated = _priceIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsQtyMutated(_qtyIsMutated) {
        this._qtyIsMutated = _qtyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSubtotalMutated(_subtotalIsMutated) {
        this._subtotalIsMutated = _subtotalIsMutated;
        return (this);
    }
    /**
* ```
     * The description of the item.
* ```
     */
    setDescription(description) {
        if (this.description !== description) {
            this._setIsDescriptionMutated(true);
        }
        this.description = description;
        return (this);
    }
    /**
* ```
     * The name of the item.
* ```
     */
    setName(name) {
        if (this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
* ```
     * The options for the item.
* ```
     */
    setOptions(options) {
        this.options = options;
        return (this);
    }
    /**
* ```
     * The name of the item.
* ```
     */
    setPrice(price) {
        if (this.price !== price) {
            this._setIsPriceMutated(true);
        }
        this.price = price;
        return (this);
    }
    /**
* ```
     * The quantity of the item.
* ```
     */
    setQty(qty) {
        if (this.qty !== qty) {
            this._setIsQtyMutated(true);
        }
        this.qty = qty;
        return (this);
    }
    /**
* ```
     * The subtotal for the document.
* ```
     */
    setSubtotal(subtotal) {
        if (this.subtotal !== subtotal) {
            this._setIsSubtotalMutated(true);
        }
        this.subtotal = subtotal;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'description',
            value: this.description
        });
        this._setCurrentState2({
            attributeName: 'name',
            value: this.name
        });
        this._setCurrentState2({
            attributeName: 'options',
            value: this.options
        });
        this._setCurrentState2({
            attributeName: 'price',
            value: this.price
        });
        this._setCurrentState2({
            attributeName: 'qty',
            value: this.qty
        });
        this._setCurrentState2({
            attributeName: 'subtotal',
            value: this.subtotal
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'description',
            value: this.description
        });
        this._setInitializedState2({
            attributeName: 'name',
            value: this.name
        });
        this._setInitializedState2({
            attributeName: 'options',
            value: this.options
        });
        this._setInitializedState2({
            attributeName: 'price',
            value: this.price
        });
        this._setInitializedState2({
            attributeName: 'qty',
            value: this.qty
        });
        this._setInitializedState2({
            attributeName: 'subtotal',
            value: this.subtotal
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.description);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.name);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.options);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.price);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.qty);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.subtotal);
        return (hashCode_n);
    }
}
exports.Item = Item;
Item.metaDataForItem = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.record.pandadocapi.Item", Item);
//# sourceMappingURL=Item.js.map