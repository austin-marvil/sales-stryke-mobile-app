/**
 * This file is auto generated DO NOT EDIT.
 */
import { Table } from './Table';
import { JsonApiRecordBase } from '../../../../jsonApi/JsonApiRecordBase';
declare class EntityAttributes {
    _totalIsMutated: string;
    tables: string;
    total: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _totalIsMutated: string;
    tables: string;
    total: string;
}
declare class MetaData {
    namespace: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class Pricing extends JsonApiRecordBase {
    static metaDataForPricing: MetaData;
    private _totalIsMutated;
    private tables;
    private total;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): Pricing;
    getClassName(): string;
    /**
     * The Tables.
     */
    addTable(table: Table): Pricing;
    /**
     *
     * @returns boolean
     */
    _getIsTotalMutated(): boolean;
    /**
     * The Tables.
     * @returns Array<Table>
     */
    getTables(): Array<Table>;
    /**
     * The total.
     * @returns number
     */
    getTotal(): number;
    /**
* ```
     *
* ```
     */
    _setIsTotalMutated(_totalIsMutated: boolean): Pricing;
    /**
* ```
     * The Tables.
* ```
     */
    setTables(tables: Array<Table>): Pricing;
    /**
* ```
     * The total.
* ```
     */
    setTotal(total: number): Pricing;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
