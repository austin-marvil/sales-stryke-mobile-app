/**
 * This file is auto generated DO NOT EDIT.
 */
import { JsonApiRecordBase } from '../../../../jsonApi/JsonApiRecordBase';
declare class EntityAttributes {
    _discountIsMutated: string;
    _subtotalIsMutated: string;
    _taxIsMutated: string;
    _totalIsMutated: string;
    discount: string;
    subtotal: string;
    tax: string;
    total: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _discountIsMutated: string;
    _subtotalIsMutated: string;
    _taxIsMutated: string;
    _totalIsMutated: string;
    discount: string;
    subtotal: string;
    tax: string;
    total: string;
}
declare class MetaData {
    namespace: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class Summary extends JsonApiRecordBase {
    static metaDataForSummary: MetaData;
    private _discountIsMutated;
    private _subtotalIsMutated;
    private _taxIsMutated;
    private _totalIsMutated;
    private discount;
    private subtotal;
    private tax;
    private total;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): Summary;
    getClassName(): string;
    /**
     *
     * @returns boolean
     */
    _getIsDiscountMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsSubtotalMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsTaxMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsTotalMutated(): boolean;
    /**
     * The summary discount.
     * @returns number
     */
    getDiscount(): number;
    /**
     * The summary subtotal.
     * @returns number
     */
    getSubtotal(): number;
    /**
     * The summary tax.
     * @returns number
     */
    getTax(): number;
    /**
     * The summary discount.
     * @returns number
     */
    getTotal(): number;
    /**
* ```
     *
* ```
     */
    _setIsDiscountMutated(_discountIsMutated: boolean): Summary;
    /**
* ```
     *
* ```
     */
    _setIsSubtotalMutated(_subtotalIsMutated: boolean): Summary;
    /**
* ```
     *
* ```
     */
    _setIsTaxMutated(_taxIsMutated: boolean): Summary;
    /**
* ```
     *
* ```
     */
    _setIsTotalMutated(_totalIsMutated: boolean): Summary;
    /**
* ```
     * The summary discount.
* ```
     */
    setDiscount(discount: number): Summary;
    /**
* ```
     * The summary subtotal.
* ```
     */
    setSubtotal(subtotal: number): Summary;
    /**
* ```
     * The summary tax.
* ```
     */
    setTax(tax: number): Summary;
    /**
* ```
     * The summary discount.
* ```
     */
    setTotal(total: number): Summary;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
