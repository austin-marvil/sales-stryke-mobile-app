"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CnsEndPoint = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._billingAddressIsMutated = "_billingAddressIsMutated";
        this._billingCellPhoneIsMutated = "_billingCellPhoneIsMutated";
        this._billingCityIsMutated = "_billingCityIsMutated";
        this._billingEmailAddressIsMutated = "_billingEmailAddressIsMutated";
        this._billingFirstNameIsMutated = "_billingFirstNameIsMutated";
        this._billingLastNameIsMutated = "_billingLastNameIsMutated";
        this._billingSignupTokenIsMutated = "_billingSignupTokenIsMutated";
        this._billingStateIsMutated = "_billingStateIsMutated";
        this._billingZipCodeIsMutated = "_billingZipCodeIsMutated";
        this._clientUUIDIsMutated = "_clientUUIDIsMutated";
        this._cnsEndPointChannelTypeIsMutated = "_cnsEndPointChannelTypeIsMutated";
        this._cnsEndPointSignupStatusTypeIsMutated = "_cnsEndPointSignupStatusTypeIsMutated";
        this._CnsSyncIsMutated = "_CnsSyncIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._importDataIsMutated = "_importDataIsMutated";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._organizationIsMutated = "_organizationIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._serviceAddressIsMutated = "_serviceAddressIsMutated";
        this._serviceCellPhoneIsMutated = "_serviceCellPhoneIsMutated";
        this._serviceCityIsMutated = "_serviceCityIsMutated";
        this._serviceEmailAddressIsMutated = "_serviceEmailAddressIsMutated";
        this._serviceFirstNameIsMutated = "_serviceFirstNameIsMutated";
        this._serviceLastNameIsMutated = "_serviceLastNameIsMutated";
        this._serviceSignupTokenIsMutated = "_serviceSignupTokenIsMutated";
        this._serviceStateIsMutated = "_serviceStateIsMutated";
        this._serviceZipCodeIsMutated = "_serviceZipCodeIsMutated";
        this._UserIsMutated = "_UserIsMutated";
        this.billingAddress = "billingAddress";
        this.billingCellPhone = "billingCellPhone";
        this.billingCity = "billingCity";
        this.billingEmailAddress = "billingEmailAddress";
        this.billingFirstName = "billingFirstName";
        this.billingLastName = "billingLastName";
        this.billingSignupToken = "billingSignupToken";
        this.billingState = "billingState";
        this.billingZipCode = "billingZipCode";
        this.clientUUID = "clientUUID";
        this.cnsEndPointChannelType = "cnsEndPointChannelType";
        this.cnsEndPointSignupStatusType = "cnsEndPointSignupStatusType";
        this.CnsSync = "CnsSync";
        this.createdDate = "createdDate";
        this.id = "id";
        this.importData = "importData";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.serviceAddress = "serviceAddress";
        this.serviceCellPhone = "serviceCellPhone";
        this.serviceCity = "serviceCity";
        this.serviceEmailAddress = "serviceEmailAddress";
        this.serviceFirstName = "serviceFirstName";
        this.serviceLastName = "serviceLastName";
        this.serviceSignupToken = "serviceSignupToken";
        this.serviceState = "serviceState";
        this.serviceZipCode = "serviceZipCode";
        this.User = "User";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._billingAddressIsMutated = "_billingAddressIsMutated";
        this._billingCellPhoneIsMutated = "_billingCellPhoneIsMutated";
        this._billingCityIsMutated = "_billingCityIsMutated";
        this._billingEmailAddressIsMutated = "_billingEmailAddressIsMutated";
        this._billingFirstNameIsMutated = "_billingFirstNameIsMutated";
        this._billingLastNameIsMutated = "_billingLastNameIsMutated";
        this._billingSignupTokenIsMutated = "_billingSignupTokenIsMutated";
        this._billingStateIsMutated = "_billingStateIsMutated";
        this._billingZipCodeIsMutated = "_billingZipCodeIsMutated";
        this._clientUUIDIsMutated = "_clientUUIDIsMutated";
        this._cnsEndPointChannelTypeIsMutated = "_cnsEndPointChannelTypeIsMutated";
        this._cnsEndPointSignupStatusTypeIsMutated = "_cnsEndPointSignupStatusTypeIsMutated";
        this._CnsSyncIsMutated = "_CnsSyncIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._importDataIsMutated = "_importDataIsMutated";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._organizationIsMutated = "_organizationIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._serviceAddressIsMutated = "_serviceAddressIsMutated";
        this._serviceCellPhoneIsMutated = "_serviceCellPhoneIsMutated";
        this._serviceCityIsMutated = "_serviceCityIsMutated";
        this._serviceEmailAddressIsMutated = "_serviceEmailAddressIsMutated";
        this._serviceFirstNameIsMutated = "_serviceFirstNameIsMutated";
        this._serviceLastNameIsMutated = "_serviceLastNameIsMutated";
        this._serviceSignupTokenIsMutated = "_serviceSignupTokenIsMutated";
        this._serviceStateIsMutated = "_serviceStateIsMutated";
        this._serviceZipCodeIsMutated = "_serviceZipCodeIsMutated";
        this._UserIsMutated = "_UserIsMutated";
        this.billingAddress = "billingAddress";
        this.billingCellPhone = "billingCellPhone";
        this.billingCity = "billingCity";
        this.billingEmailAddress = "billingEmailAddress";
        this.billingFirstName = "billingFirstName";
        this.billingLastName = "billingLastName";
        this.billingSignupToken = "billingSignupToken";
        this.billingState = "billingState";
        this.billingZipCode = "billingZipCode";
        this.clientUUID = "clientUUID";
        this.cnsEndPointChannelType = "cnsEndPointChannelType";
        this.cnsEndPointSignupStatusType = "cnsEndPointSignupStatusType";
        this.CnsSync = "CnsSync";
        this.createdDate = "createdDate";
        this._id = "_id";
        this.importData = "importData";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.serviceAddress = "serviceAddress";
        this.serviceCellPhone = "serviceCellPhone";
        this.serviceCity = "serviceCity";
        this.serviceEmailAddress = "serviceEmailAddress";
        this.serviceFirstName = "serviceFirstName";
        this.serviceLastName = "serviceLastName";
        this.serviceSignupToken = "serviceSignupToken";
        this.serviceState = "serviceState";
        this.serviceZipCode = "serviceZipCode";
        this.User = "User";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.CnsEndPoint";
        this.mongDataModeName = "CnsEndPoint";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class CnsEndPoint extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._billingAddressIsMutated = false;
        this._billingCellPhoneIsMutated = false;
        this._billingCityIsMutated = false;
        this._billingEmailAddressIsMutated = false;
        this._billingFirstNameIsMutated = false;
        this._billingLastNameIsMutated = false;
        this._billingSignupTokenIsMutated = false;
        this._billingStateIsMutated = false;
        this._billingZipCodeIsMutated = false;
        this._clientUUIDIsMutated = false;
        this._cnsEndPointChannelTypeIsMutated = false;
        this._cnsEndPointSignupStatusTypeIsMutated = false;
        this._CnsSyncIsMutated = false;
        this._idSetBySystem = false;
        this._importDataIsMutated = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._organizationIsMutated = false;
        this._serviceAddressIsMutated = false;
        this._serviceCellPhoneIsMutated = false;
        this._serviceCityIsMutated = false;
        this._serviceEmailAddressIsMutated = false;
        this._serviceFirstNameIsMutated = false;
        this._serviceLastNameIsMutated = false;
        this._serviceSignupTokenIsMutated = false;
        this._serviceStateIsMutated = false;
        this._serviceZipCodeIsMutated = false;
        this._UserIsMutated = false;
        this.billingAddress = null;
        this.billingCellPhone = null;
        this.billingCity = null;
        this.billingEmailAddress = null;
        this.billingFirstName = null;
        this.billingLastName = null;
        this.billingSignupToken = null;
        this.billingState = null;
        this.billingZipCode = null;
        this.clientUUID = null;
        this.cnsEndPointChannelType = null;
        this.cnsEndPointSignupStatusType = null;
        this.CnsSync = null;
        this.id = null;
        this.importData = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.CnsEndPoint";
        this.organization = null;
        this.serviceAddress = null;
        this.serviceCellPhone = null;
        this.serviceCity = null;
        this.serviceEmailAddress = null;
        this.serviceFirstName = null;
        this.serviceLastName = null;
        this.serviceSignupToken = null;
        this.serviceState = null;
        this.serviceZipCode = null;
        this.User = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._billingAddressIsMutated = false;
        this._billingCellPhoneIsMutated = false;
        this._billingCityIsMutated = false;
        this._billingEmailAddressIsMutated = false;
        this._billingFirstNameIsMutated = false;
        this._billingLastNameIsMutated = false;
        this._billingSignupTokenIsMutated = false;
        this._billingStateIsMutated = false;
        this._billingZipCodeIsMutated = false;
        this._clientUUIDIsMutated = false;
        this._cnsEndPointChannelTypeIsMutated = false;
        this._cnsEndPointSignupStatusTypeIsMutated = false;
        this._CnsSyncIsMutated = false;
        this._importDataIsMutated = false;
        this._organizationIsMutated = false;
        this._serviceAddressIsMutated = false;
        this._serviceCellPhoneIsMutated = false;
        this._serviceCityIsMutated = false;
        this._serviceEmailAddressIsMutated = false;
        this._serviceFirstNameIsMutated = false;
        this._serviceLastNameIsMutated = false;
        this._serviceSignupTokenIsMutated = false;
        this._serviceStateIsMutated = false;
        this._serviceZipCodeIsMutated = false;
        this._UserIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.CnsEndPoint");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingAddressMutated() {
        return (this._billingAddressIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingCellPhoneMutated() {
        return (this._billingCellPhoneIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingCityMutated() {
        return (this._billingCityIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingEmailAddressMutated() {
        return (this._billingEmailAddressIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingFirstNameMutated() {
        return (this._billingFirstNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingLastNameMutated() {
        return (this._billingLastNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingSignupTokenMutated() {
        return (this._billingSignupTokenIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingStateMutated() {
        return (this._billingStateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBillingZipCodeMutated() {
        return (this._billingZipCodeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsClientUUIDMutated() {
        return (this._clientUUIDIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCnsEndPointChannelTypeMutated() {
        return (this._cnsEndPointChannelTypeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCnsEndPointSignupStatusTypeMutated() {
        return (this._cnsEndPointSignupStatusTypeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCnsSyncMutated() {
        return (this._CnsSyncIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     *
     * @returns boolean
     */
    _getIsImportDataMutated() {
        return (this._importDataIsMutated);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceAddressMutated() {
        return (this._serviceAddressIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceCellPhoneMutated() {
        return (this._serviceCellPhoneIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceCityMutated() {
        return (this._serviceCityIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceEmailAddressMutated() {
        return (this._serviceEmailAddressIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceFirstNameMutated() {
        return (this._serviceFirstNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceLastNameMutated() {
        return (this._serviceLastNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceSignupTokenMutated() {
        return (this._serviceSignupTokenIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceStateMutated() {
        return (this._serviceStateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsServiceZipCodeMutated() {
        return (this._serviceZipCodeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsUserMutated() {
        return (this._UserIsMutated);
    }
    /**
     * The billing customer address.
     * @returns string | null
     */
    getBillingAddress() {
        return (this.billingAddress);
    }
    /**
     * The billing customer cell phone number.
     * @returns string | null
     */
    getBillingCellPhone() {
        return (this.billingCellPhone);
    }
    /**
     * The billing customer city.
     * @returns string | null
     */
    getBillingCity() {
        return (this.billingCity);
    }
    /**
     * The billing customer email address.
     * @returns string | null
     */
    getBillingEmailAddress() {
        return (this.billingEmailAddress);
    }
    /**
     * The billing customer first name.
     * @returns string | null
     */
    getBillingFirstName() {
        return (this.billingFirstName);
    }
    /**
     * The billing customer last name.
     * @returns string | null
     */
    getBillingLastName() {
        return (this.billingLastName);
    }
    /**
     * The billing customer signup token.
     * @returns string | null
     */
    getBillingSignupToken() {
        return (this.billingSignupToken);
    }
    /**
     * The billing customer state.
     * @returns string | null
     */
    getBillingState() {
        return (this.billingState);
    }
    /**
     * The billing customer zip code.
     * @returns string | null
     */
    getBillingZipCode() {
        return (this.billingZipCode);
    }
    /**
     * Client unique id for data, customer.
     * @returns string | null
     */
    getClientUUID() {
        return (this.clientUUID);
    }
    /**
     * The Channel Type, email, text, or app.
     * @returns CnsEndPointChannelType | null
     */
    getCnsEndPointChannelType() {
        return (this.cnsEndPointChannelType);
    }
    /**
     * The signup status type: OPT_IN, OPT_OUT, PENDING
     * @returns CnsEndPointSignupStatusType | null
     */
    getCnsEndPointSignupStatusType() {
        return (this.cnsEndPointSignupStatusType);
    }
    /**
     * The last CnsSync
     * @returns CnsSync | null
     */
    getCnsSync() {
        return (this.CnsSync);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     * The mongo object id for ImportData.
     * @returns ImportData | null
     */
    getImportData() {
        return (this.importData);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * The service customer address.
     * @returns string | null
     */
    getServiceAddress() {
        return (this.serviceAddress);
    }
    /**
     * The service customer cell phone number.
     * @returns string | null
     */
    getServiceCellPhone() {
        return (this.serviceCellPhone);
    }
    /**
     * The service customer city.
     * @returns string | null
     */
    getServiceCity() {
        return (this.serviceCity);
    }
    /**
     * The service customer email address.
     * @returns string | null
     */
    getServiceEmailAddress() {
        return (this.serviceEmailAddress);
    }
    /**
     * The service customer first name.
     * @returns string | null
     */
    getServiceFirstName() {
        return (this.serviceFirstName);
    }
    /**
     * The service customer last name.
     * @returns string | null
     */
    getServiceLastName() {
        return (this.serviceLastName);
    }
    /**
     * The service customer signup token.
     * @returns string | null
     */
    getServiceSignupToken() {
        return (this.serviceSignupToken);
    }
    /**
     * The service customer state.
     * @returns string | null
     */
    getServiceState() {
        return (this.serviceState);
    }
    /**
     * The service customer zip code.
     * @returns string | null
     */
    getServiceZipCode() {
        return (this.serviceZipCode);
    }
    /**
     * The mongo object id for User.
     * @returns User | null
     */
    getUser() {
        return (this.User);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingAddressMutated(_billingAddressIsMutated) {
        this._billingAddressIsMutated = _billingAddressIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingCellPhoneMutated(_billingCellPhoneIsMutated) {
        this._billingCellPhoneIsMutated = _billingCellPhoneIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingCityMutated(_billingCityIsMutated) {
        this._billingCityIsMutated = _billingCityIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingEmailAddressMutated(_billingEmailAddressIsMutated) {
        this._billingEmailAddressIsMutated = _billingEmailAddressIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingFirstNameMutated(_billingFirstNameIsMutated) {
        this._billingFirstNameIsMutated = _billingFirstNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingLastNameMutated(_billingLastNameIsMutated) {
        this._billingLastNameIsMutated = _billingLastNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingSignupTokenMutated(_billingSignupTokenIsMutated) {
        this._billingSignupTokenIsMutated = _billingSignupTokenIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingStateMutated(_billingStateIsMutated) {
        this._billingStateIsMutated = _billingStateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBillingZipCodeMutated(_billingZipCodeIsMutated) {
        this._billingZipCodeIsMutated = _billingZipCodeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsClientUUIDMutated(_clientUUIDIsMutated) {
        this._clientUUIDIsMutated = _clientUUIDIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCnsEndPointChannelTypeMutated(_cnsEndPointChannelTypeIsMutated) {
        this._cnsEndPointChannelTypeIsMutated = _cnsEndPointChannelTypeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCnsEndPointSignupStatusTypeMutated(_cnsEndPointSignupStatusTypeIsMutated) {
        this._cnsEndPointSignupStatusTypeIsMutated = _cnsEndPointSignupStatusTypeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCnsSyncMutated(_CnsSyncIsMutated) {
        this._CnsSyncIsMutated = _CnsSyncIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsImportDataMutated(_importDataIsMutated) {
        this._importDataIsMutated = _importDataIsMutated;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceAddressMutated(_serviceAddressIsMutated) {
        this._serviceAddressIsMutated = _serviceAddressIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceCellPhoneMutated(_serviceCellPhoneIsMutated) {
        this._serviceCellPhoneIsMutated = _serviceCellPhoneIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceCityMutated(_serviceCityIsMutated) {
        this._serviceCityIsMutated = _serviceCityIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceEmailAddressMutated(_serviceEmailAddressIsMutated) {
        this._serviceEmailAddressIsMutated = _serviceEmailAddressIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceFirstNameMutated(_serviceFirstNameIsMutated) {
        this._serviceFirstNameIsMutated = _serviceFirstNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceLastNameMutated(_serviceLastNameIsMutated) {
        this._serviceLastNameIsMutated = _serviceLastNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceSignupTokenMutated(_serviceSignupTokenIsMutated) {
        this._serviceSignupTokenIsMutated = _serviceSignupTokenIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceStateMutated(_serviceStateIsMutated) {
        this._serviceStateIsMutated = _serviceStateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsServiceZipCodeMutated(_serviceZipCodeIsMutated) {
        this._serviceZipCodeIsMutated = _serviceZipCodeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsUserMutated(_UserIsMutated) {
        this._UserIsMutated = _UserIsMutated;
        return (this);
    }
    /**
* ```
     * The billing customer address.
* ```
     */
    setBillingAddress(billingAddress) {
        if (!this._getIsMutateSuppressed() && this.billingAddress !== billingAddress) {
            this._setIsBillingAddressMutated(true);
        }
        this.billingAddress = billingAddress;
        return (this);
    }
    /**
* ```
     * The billing customer cell phone number.
* ```
     */
    setBillingCellPhone(billingCellPhone) {
        if (!this._getIsMutateSuppressed() && this.billingCellPhone !== billingCellPhone) {
            this._setIsBillingCellPhoneMutated(true);
        }
        this.billingCellPhone = billingCellPhone;
        return (this);
    }
    /**
* ```
     * The billing customer city.
* ```
     */
    setBillingCity(billingCity) {
        if (!this._getIsMutateSuppressed() && this.billingCity !== billingCity) {
            this._setIsBillingCityMutated(true);
        }
        this.billingCity = billingCity;
        return (this);
    }
    /**
* ```
     * The billing customer email address.
* ```
     */
    setBillingEmailAddress(billingEmailAddress) {
        if (!this._getIsMutateSuppressed() && this.billingEmailAddress !== billingEmailAddress) {
            this._setIsBillingEmailAddressMutated(true);
        }
        this.billingEmailAddress = billingEmailAddress;
        return (this);
    }
    /**
* ```
     * The billing customer first name.
* ```
     */
    setBillingFirstName(billingFirstName) {
        if (!this._getIsMutateSuppressed() && this.billingFirstName !== billingFirstName) {
            this._setIsBillingFirstNameMutated(true);
        }
        this.billingFirstName = billingFirstName;
        return (this);
    }
    /**
* ```
     * The billing customer last name.
* ```
     */
    setBillingLastName(billingLastName) {
        if (!this._getIsMutateSuppressed() && this.billingLastName !== billingLastName) {
            this._setIsBillingLastNameMutated(true);
        }
        this.billingLastName = billingLastName;
        return (this);
    }
    /**
* ```
     * The billing customer signup token.
* ```
     */
    setBillingSignupToken(billingSignupToken) {
        if (!this._getIsMutateSuppressed() && this.billingSignupToken !== billingSignupToken) {
            this._setIsBillingSignupTokenMutated(true);
        }
        this.billingSignupToken = billingSignupToken;
        return (this);
    }
    /**
* ```
     * The billing customer state.
* ```
     */
    setBillingState(billingState) {
        if (!this._getIsMutateSuppressed() && this.billingState !== billingState) {
            this._setIsBillingStateMutated(true);
        }
        this.billingState = billingState;
        return (this);
    }
    /**
* ```
     * The billing customer zip code.
* ```
     */
    setBillingZipCode(billingZipCode) {
        if (!this._getIsMutateSuppressed() && this.billingZipCode !== billingZipCode) {
            this._setIsBillingZipCodeMutated(true);
        }
        this.billingZipCode = billingZipCode;
        return (this);
    }
    /**
* ```
     * Client unique id for data, customer.
* ```
     */
    setClientUUID(clientUUID) {
        if (!this._getIsMutateSuppressed() && this.clientUUID !== clientUUID) {
            this._setIsClientUUIDMutated(true);
        }
        this.clientUUID = clientUUID;
        return (this);
    }
    /**
* ```
     * The Channel Type, email, text, or app.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setCnsEndPointChannelType(cnsEndPointChannelType, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.cnsEndPointChannelType !== cnsEndPointChannelType) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(cnsEndPointChannelType, persistanceType);
            this._setIsCnsEndPointChannelTypeMutated(true);
        }
        this.cnsEndPointChannelType = cnsEndPointChannelType;
        return (this);
    }
    /**
* ```
     * The signup status type: OPT_IN, OPT_OUT, PENDING
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setCnsEndPointSignupStatusType(cnsEndPointSignupStatusType, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.cnsEndPointSignupStatusType !== cnsEndPointSignupStatusType) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(cnsEndPointSignupStatusType, persistanceType);
            this._setIsCnsEndPointSignupStatusTypeMutated(true);
        }
        this.cnsEndPointSignupStatusType = cnsEndPointSignupStatusType;
        return (this);
    }
    /**
* ```
     * The last CnsSync
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setCnsSync(CnsSync, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.CnsSync !== CnsSync) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(CnsSync, persistanceType);
            this._setIsCnsSyncMutated(true);
        }
        this.CnsSync = CnsSync;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     * The mongo object id for ImportData.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setImportData(importData, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.importData !== importData) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(importData, persistanceType);
            this._setIsImportDataMutated(true);
        }
        this.importData = importData;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * The service customer address.
* ```
     */
    setServiceAddress(serviceAddress) {
        if (!this._getIsMutateSuppressed() && this.serviceAddress !== serviceAddress) {
            this._setIsServiceAddressMutated(true);
        }
        this.serviceAddress = serviceAddress;
        return (this);
    }
    /**
* ```
     * The service customer cell phone number.
* ```
     */
    setServiceCellPhone(serviceCellPhone) {
        if (!this._getIsMutateSuppressed() && this.serviceCellPhone !== serviceCellPhone) {
            this._setIsServiceCellPhoneMutated(true);
        }
        this.serviceCellPhone = serviceCellPhone;
        return (this);
    }
    /**
* ```
     * The service customer city.
* ```
     */
    setServiceCity(serviceCity) {
        if (!this._getIsMutateSuppressed() && this.serviceCity !== serviceCity) {
            this._setIsServiceCityMutated(true);
        }
        this.serviceCity = serviceCity;
        return (this);
    }
    /**
* ```
     * The service customer email address.
* ```
     */
    setServiceEmailAddress(serviceEmailAddress) {
        if (!this._getIsMutateSuppressed() && this.serviceEmailAddress !== serviceEmailAddress) {
            this._setIsServiceEmailAddressMutated(true);
        }
        this.serviceEmailAddress = serviceEmailAddress;
        return (this);
    }
    /**
* ```
     * The service customer first name.
* ```
     */
    setServiceFirstName(serviceFirstName) {
        if (!this._getIsMutateSuppressed() && this.serviceFirstName !== serviceFirstName) {
            this._setIsServiceFirstNameMutated(true);
        }
        this.serviceFirstName = serviceFirstName;
        return (this);
    }
    /**
* ```
     * The service customer last name.
* ```
     */
    setServiceLastName(serviceLastName) {
        if (!this._getIsMutateSuppressed() && this.serviceLastName !== serviceLastName) {
            this._setIsServiceLastNameMutated(true);
        }
        this.serviceLastName = serviceLastName;
        return (this);
    }
    /**
* ```
     * The service customer signup token.
* ```
     */
    setServiceSignupToken(serviceSignupToken) {
        if (!this._getIsMutateSuppressed() && this.serviceSignupToken !== serviceSignupToken) {
            this._setIsServiceSignupTokenMutated(true);
        }
        this.serviceSignupToken = serviceSignupToken;
        return (this);
    }
    /**
* ```
     * The service customer state.
* ```
     */
    setServiceState(serviceState) {
        if (!this._getIsMutateSuppressed() && this.serviceState !== serviceState) {
            this._setIsServiceStateMutated(true);
        }
        this.serviceState = serviceState;
        return (this);
    }
    /**
* ```
     * The service customer zip code.
* ```
     */
    setServiceZipCode(serviceZipCode) {
        if (!this._getIsMutateSuppressed() && this.serviceZipCode !== serviceZipCode) {
            this._setIsServiceZipCodeMutated(true);
        }
        this.serviceZipCode = serviceZipCode;
        return (this);
    }
    /**
* ```
     * The mongo object id for User.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setUser(User, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.User !== User) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(User, persistanceType);
            this._setIsUserMutated(true);
        }
        this.User = User;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setCurrentState2({
            attributeName: 'billingAddress',
            value: this.billingAddress
        });
        this._setCurrentState2({
            attributeName: 'billingCellPhone',
            value: this.billingCellPhone
        });
        this._setCurrentState2({
            attributeName: 'billingCity',
            value: this.billingCity
        });
        this._setCurrentState2({
            attributeName: 'billingEmailAddress',
            value: this.billingEmailAddress
        });
        this._setCurrentState2({
            attributeName: 'billingFirstName',
            value: this.billingFirstName
        });
        this._setCurrentState2({
            attributeName: 'billingLastName',
            value: this.billingLastName
        });
        this._setCurrentState2({
            attributeName: 'billingSignupToken',
            value: this.billingSignupToken
        });
        this._setCurrentState2({
            attributeName: 'billingState',
            value: this.billingState
        });
        this._setCurrentState2({
            attributeName: 'billingZipCode',
            value: this.billingZipCode
        });
        this._setCurrentState2({
            attributeName: 'clientUUID',
            value: this.clientUUID
        });
        this._setCurrentState2({
            attributeName: 'cnsEndPointChannelType',
            value: this.cnsEndPointChannelType
        });
        this._setCurrentState2({
            attributeName: 'cnsEndPointSignupStatusType',
            value: this.cnsEndPointSignupStatusType
        });
        this._setCurrentState2({
            attributeName: 'CnsSync',
            value: this.CnsSync
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'importData',
            value: this.importData
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setCurrentState2({
            attributeName: 'serviceAddress',
            value: this.serviceAddress
        });
        this._setCurrentState2({
            attributeName: 'serviceCellPhone',
            value: this.serviceCellPhone
        });
        this._setCurrentState2({
            attributeName: 'serviceCity',
            value: this.serviceCity
        });
        this._setCurrentState2({
            attributeName: 'serviceEmailAddress',
            value: this.serviceEmailAddress
        });
        this._setCurrentState2({
            attributeName: 'serviceFirstName',
            value: this.serviceFirstName
        });
        this._setCurrentState2({
            attributeName: 'serviceLastName',
            value: this.serviceLastName
        });
        this._setCurrentState2({
            attributeName: 'serviceSignupToken',
            value: this.serviceSignupToken
        });
        this._setCurrentState2({
            attributeName: 'serviceState',
            value: this.serviceState
        });
        this._setCurrentState2({
            attributeName: 'serviceZipCode',
            value: this.serviceZipCode
        });
        this._setCurrentState2({
            attributeName: 'User',
            value: this.User
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setInitializedState2({
            attributeName: 'billingAddress',
            value: this.billingAddress
        });
        this._setInitializedState2({
            attributeName: 'billingCellPhone',
            value: this.billingCellPhone
        });
        this._setInitializedState2({
            attributeName: 'billingCity',
            value: this.billingCity
        });
        this._setInitializedState2({
            attributeName: 'billingEmailAddress',
            value: this.billingEmailAddress
        });
        this._setInitializedState2({
            attributeName: 'billingFirstName',
            value: this.billingFirstName
        });
        this._setInitializedState2({
            attributeName: 'billingLastName',
            value: this.billingLastName
        });
        this._setInitializedState2({
            attributeName: 'billingSignupToken',
            value: this.billingSignupToken
        });
        this._setInitializedState2({
            attributeName: 'billingState',
            value: this.billingState
        });
        this._setInitializedState2({
            attributeName: 'billingZipCode',
            value: this.billingZipCode
        });
        this._setInitializedState2({
            attributeName: 'clientUUID',
            value: this.clientUUID
        });
        this._setInitializedState2({
            attributeName: 'cnsEndPointChannelType',
            value: this.cnsEndPointChannelType
        });
        this._setInitializedState2({
            attributeName: 'cnsEndPointSignupStatusType',
            value: this.cnsEndPointSignupStatusType
        });
        this._setInitializedState2({
            attributeName: 'CnsSync',
            value: this.CnsSync
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'importData',
            value: this.importData
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setInitializedState2({
            attributeName: 'serviceAddress',
            value: this.serviceAddress
        });
        this._setInitializedState2({
            attributeName: 'serviceCellPhone',
            value: this.serviceCellPhone
        });
        this._setInitializedState2({
            attributeName: 'serviceCity',
            value: this.serviceCity
        });
        this._setInitializedState2({
            attributeName: 'serviceEmailAddress',
            value: this.serviceEmailAddress
        });
        this._setInitializedState2({
            attributeName: 'serviceFirstName',
            value: this.serviceFirstName
        });
        this._setInitializedState2({
            attributeName: 'serviceLastName',
            value: this.serviceLastName
        });
        this._setInitializedState2({
            attributeName: 'serviceSignupToken',
            value: this.serviceSignupToken
        });
        this._setInitializedState2({
            attributeName: 'serviceState',
            value: this.serviceState
        });
        this._setInitializedState2({
            attributeName: 'serviceZipCode',
            value: this.serviceZipCode
        });
        this._setInitializedState2({
            attributeName: 'User',
            value: this.User
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingAddress);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingCellPhone);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingCity);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingEmailAddress);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingFirstName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingLastName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingSignupToken);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingState);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.billingZipCode);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.clientUUID);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.cnsEndPointChannelType);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.cnsEndPointSignupStatusType);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.CnsSync);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.importData);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organization);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceAddress);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceCellPhone);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceCity);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceEmailAddress);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceFirstName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceLastName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceSignupToken);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceState);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.serviceZipCode);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.User);
        return (hashCode_n);
    }
}
exports.CnsEndPoint = CnsEndPoint;
CnsEndPoint.metaDataForCnsEndPoint = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.CnsEndPoint", CnsEndPoint);
//# sourceMappingURL=CnsEndPoint.js.map