"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Address = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._administrativeLevel1IsMutated = "_administrativeLevel1IsMutated";
        this._administrativeLevel2IsMutated = "_administrativeLevel2IsMutated";
        this._administrativeLevel3IsMutated = "_administrativeLevel3IsMutated";
        this._cityIsMutated = "_cityIsMutated";
        this._confidenceIsMutated = "_confidenceIsMutated";
        this._directionIsMutated = "_directionIsMutated";
        this._entityState = "_entityState";
        this._formattedAddressIsMutated = "_formattedAddressIsMutated";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isValidatedIsMutated = "_isValidatedIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._latIsMutated = "_latIsMutated";
        this._lngIsMutated = "_lngIsMutated";
        this._neighborhoodIsMutated = "_neighborhoodIsMutated";
        this._postOfficeIsMutated = "_postOfficeIsMutated";
        this._streetIsMutated = "_streetIsMutated";
        this._streetNameIsMutated = "_streetNameIsMutated";
        this._streetNumberIsMutated = "_streetNumberIsMutated";
        this._streetSuffixIsMutated = "_streetSuffixIsMutated";
        this._subpremiseLevelIsMutated = "_subpremiseLevelIsMutated";
        this._usStateIsMutated = "_usStateIsMutated";
        this._validatedByIsMutated = "_validatedByIsMutated";
        this._zipcodeIsMutated = "_zipcodeIsMutated";
        this.administrativeLevel1 = "administrativeLevel1";
        this.administrativeLevel2 = "administrativeLevel2";
        this.administrativeLevel3 = "administrativeLevel3";
        this.city = "city";
        this.confidence = "confidence";
        this.createdDate = "createdDate";
        this.direction = "direction";
        this.formattedAddress = "formattedAddress";
        this.id = "id";
        this.isValidated = "isValidated";
        this.jsonType = "jsonType";
        this.lat = "lat";
        this.lng = "lng";
        this.modifiedDate = "modifiedDate";
        this.neighborhood = "neighborhood";
        this.postOffice = "postOffice";
        this.street = "street";
        this.streetName = "streetName";
        this.streetNumber = "streetNumber";
        this.streetSuffix = "streetSuffix";
        this.subpremiseLevel = "subpremiseLevel";
        this.usState = "usState";
        this.validatedBy = "validatedBy";
        this.zipcode = "zipcode";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._administrativeLevel1IsMutated = "_administrativeLevel1IsMutated";
        this._administrativeLevel2IsMutated = "_administrativeLevel2IsMutated";
        this._administrativeLevel3IsMutated = "_administrativeLevel3IsMutated";
        this._cityIsMutated = "_cityIsMutated";
        this._confidenceIsMutated = "_confidenceIsMutated";
        this._directionIsMutated = "_directionIsMutated";
        this._entityState = "_entityState";
        this._formattedAddressIsMutated = "_formattedAddressIsMutated";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isValidatedIsMutated = "_isValidatedIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._latIsMutated = "_latIsMutated";
        this._lngIsMutated = "_lngIsMutated";
        this._neighborhoodIsMutated = "_neighborhoodIsMutated";
        this._postOfficeIsMutated = "_postOfficeIsMutated";
        this._streetIsMutated = "_streetIsMutated";
        this._streetNameIsMutated = "_streetNameIsMutated";
        this._streetNumberIsMutated = "_streetNumberIsMutated";
        this._streetSuffixIsMutated = "_streetSuffixIsMutated";
        this._subpremiseLevelIsMutated = "_subpremiseLevelIsMutated";
        this._usStateIsMutated = "_usStateIsMutated";
        this._validatedByIsMutated = "_validatedByIsMutated";
        this._zipcodeIsMutated = "_zipcodeIsMutated";
        this.administrativeLevel1 = "administrativeLevel1";
        this.administrativeLevel2 = "administrativeLevel2";
        this.administrativeLevel3 = "administrativeLevel3";
        this.city = "city";
        this.confidence = "confidence";
        this.createdDate = "createdDate";
        this.direction = "direction";
        this.formattedAddress = "formattedAddress";
        this._id = "_id";
        this.isValidated = "isValidated";
        this.jsonType = "jsonType";
        this.lat = "lat";
        this.lng = "lng";
        this.modifiedDate = "modifiedDate";
        this.neighborhood = "neighborhood";
        this.postOffice = "postOffice";
        this.street = "street";
        this.streetName = "streetName";
        this.streetNumber = "streetNumber";
        this.streetSuffix = "streetSuffix";
        this.subpremiseLevel = "subpremiseLevel";
        this.usState = "usState";
        this.validatedBy = "validatedBy";
        this.zipcode = "zipcode";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.Address";
        this.mongDataModeName = "Address";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class Address extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._administrativeLevel1IsMutated = false;
        this._administrativeLevel2IsMutated = false;
        this._administrativeLevel3IsMutated = false;
        this._cityIsMutated = false;
        this._confidenceIsMutated = false;
        this._directionIsMutated = false;
        this._formattedAddressIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._isValidatedIsMutated = false;
        this._latIsMutated = false;
        this._lngIsMutated = false;
        this._neighborhoodIsMutated = false;
        this._postOfficeIsMutated = false;
        this._streetIsMutated = false;
        this._streetNameIsMutated = false;
        this._streetNumberIsMutated = false;
        this._streetSuffixIsMutated = false;
        this._subpremiseLevelIsMutated = false;
        this._usStateIsMutated = false;
        this._validatedByIsMutated = false;
        this._zipcodeIsMutated = false;
        this.administrativeLevel1 = null;
        this.administrativeLevel2 = null;
        this.administrativeLevel3 = null;
        this.city = null;
        this.confidence = 0;
        this.direction = null;
        this.formattedAddress = null;
        this.id = null;
        this.isValidated = undefined;
        this.jsonType = "com.salesstryke.entity.classes.persistable.Address";
        this.lat = 0;
        this.lng = 0;
        this.neighborhood = null;
        this.postOffice = null;
        this.street = null;
        this.streetName = null;
        this.streetNumber = null;
        this.streetSuffix = null;
        this.subpremiseLevel = null;
        this.usState = null;
        this.validatedBy = null;
        this.zipcode = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._administrativeLevel1IsMutated = false;
        this._administrativeLevel2IsMutated = false;
        this._administrativeLevel3IsMutated = false;
        this._cityIsMutated = false;
        this._confidenceIsMutated = false;
        this._directionIsMutated = false;
        this._formattedAddressIsMutated = false;
        this._isValidatedIsMutated = false;
        this._latIsMutated = false;
        this._lngIsMutated = false;
        this._neighborhoodIsMutated = false;
        this._postOfficeIsMutated = false;
        this._streetIsMutated = false;
        this._streetNameIsMutated = false;
        this._streetNumberIsMutated = false;
        this._streetSuffixIsMutated = false;
        this._subpremiseLevelIsMutated = false;
        this._usStateIsMutated = false;
        this._validatedByIsMutated = false;
        this._zipcodeIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.Address");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsAdministrativeLevel1Mutated() {
        return (this._administrativeLevel1IsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAdministrativeLevel2Mutated() {
        return (this._administrativeLevel2IsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAdministrativeLevel3Mutated() {
        return (this._administrativeLevel3IsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCityMutated() {
        return (this._cityIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsConfidenceMutated() {
        return (this._confidenceIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDirectionMutated() {
        return (this._directionIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsFormattedAddressMutated() {
        return (this._formattedAddressIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsValidatedMutated() {
        return (this._isValidatedIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLatMutated() {
        return (this._latIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLngMutated() {
        return (this._lngIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNeighborhoodMutated() {
        return (this._neighborhoodIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPostOfficeMutated() {
        return (this._postOfficeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsStreetMutated() {
        return (this._streetIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsStreetNameMutated() {
        return (this._streetNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsStreetNumberMutated() {
        return (this._streetNumberIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsStreetSuffixMutated() {
        return (this._streetSuffixIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSubpremiseLevelMutated() {
        return (this._subpremiseLevelIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsUsStateMutated() {
        return (this._usStateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsValidatedByMutated() {
        return (this._validatedByIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsZipcodeMutated() {
        return (this._zipcodeIsMutated);
    }
    /**
     * The administrativeLevel1 (state) for the address.
     * @returns string | null
     */
    getAdministrativeLevel1() {
        return (this.administrativeLevel1);
    }
    /**
     * The administrativeLevel2 (county) for the address.
     * @returns string | null
     */
    getAdministrativeLevel2() {
        return (this.administrativeLevel2);
    }
    /**
     * The administrativeLevel3 (city/town) for the address.
     * @returns string | null
     */
    getAdministrativeLevel3() {
        return (this.administrativeLevel3);
    }
    /**
     * The city
     * @returns string | null
     */
    getCity() {
        return (this.city);
    }
    /**
     * The confidence for the address.
     * @returns number
     */
    getConfidence() {
        return (this.confidence);
    }
    /**
     * The direction for the address.
     * @returns string | null
     */
    getDirection() {
        return (this.direction);
    }
    /**
     * The formattedAddress for the address.
     * @returns string | null
     */
    getFormattedAddress() {
        return (this.formattedAddress);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     * Is address validated by a service.
     * @returns boolean
     */
    getIsValidated() {
        return ((this.isValidated === undefined) ? false : this.isValidated);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The lat for the address.
     * @returns number
     */
    getLat() {
        return (this.lat);
    }
    /**
     * The lng for the address.
     * @returns number
     */
    getLng() {
        return (this.lng);
    }
    /**
     * The neighborhood for the address.
     * @returns string | null
     */
    getNeighborhood() {
        return (this.neighborhood);
    }
    /**
     * Is the address a post office/box.
     * @returns string | null
     */
    getPostOffice() {
        return (this.postOffice);
    }
    /**
     * The street for the address.
     * @returns string | null
     */
    getStreet() {
        return (this.street);
    }
    /**
     * The name of the street for the address.
     * @returns string | null
     */
    getStreetName() {
        return (this.streetName);
    }
    /**
     * The streetNumber for the address.
     * @returns string | null
     */
    getStreetNumber() {
        return (this.streetNumber);
    }
    /**
     * The street suffix for the address.
     * @returns string | null
     */
    getStreetSuffix() {
        return (this.streetSuffix);
    }
    /**
     * The subpremiseLevel for the address.
     * @returns string | null
     */
    getSubpremiseLevel() {
        return (this.subpremiseLevel);
    }
    /**
     * The US state for the address.
     * @returns USState | null
     */
    getUsState() {
        return (this.usState);
    }
    /**
     * The service that validate the address.
     * @returns string | null
     */
    getValidatedBy() {
        return (this.validatedBy);
    }
    /**
     * The zipcode for the address.
     * @returns string | null
     */
    getZipcode() {
        return (this.zipcode);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAdministrativeLevel1Mutated(_administrativeLevel1IsMutated) {
        this._administrativeLevel1IsMutated = _administrativeLevel1IsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAdministrativeLevel2Mutated(_administrativeLevel2IsMutated) {
        this._administrativeLevel2IsMutated = _administrativeLevel2IsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAdministrativeLevel3Mutated(_administrativeLevel3IsMutated) {
        this._administrativeLevel3IsMutated = _administrativeLevel3IsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCityMutated(_cityIsMutated) {
        this._cityIsMutated = _cityIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsConfidenceMutated(_confidenceIsMutated) {
        this._confidenceIsMutated = _confidenceIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDirectionMutated(_directionIsMutated) {
        this._directionIsMutated = _directionIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsFormattedAddressMutated(_formattedAddressIsMutated) {
        this._formattedAddressIsMutated = _formattedAddressIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsValidatedMutated(_isValidatedIsMutated) {
        this._isValidatedIsMutated = _isValidatedIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLatMutated(_latIsMutated) {
        this._latIsMutated = _latIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLngMutated(_lngIsMutated) {
        this._lngIsMutated = _lngIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNeighborhoodMutated(_neighborhoodIsMutated) {
        this._neighborhoodIsMutated = _neighborhoodIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPostOfficeMutated(_postOfficeIsMutated) {
        this._postOfficeIsMutated = _postOfficeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsStreetMutated(_streetIsMutated) {
        this._streetIsMutated = _streetIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsStreetNameMutated(_streetNameIsMutated) {
        this._streetNameIsMutated = _streetNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsStreetNumberMutated(_streetNumberIsMutated) {
        this._streetNumberIsMutated = _streetNumberIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsStreetSuffixMutated(_streetSuffixIsMutated) {
        this._streetSuffixIsMutated = _streetSuffixIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSubpremiseLevelMutated(_subpremiseLevelIsMutated) {
        this._subpremiseLevelIsMutated = _subpremiseLevelIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsUsStateMutated(_usStateIsMutated) {
        this._usStateIsMutated = _usStateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsValidatedByMutated(_validatedByIsMutated) {
        this._validatedByIsMutated = _validatedByIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsZipcodeMutated(_zipcodeIsMutated) {
        this._zipcodeIsMutated = _zipcodeIsMutated;
        return (this);
    }
    /**
* ```
     * The administrativeLevel1 (state) for the address.
* ```
     */
    setAdministrativeLevel1(administrativeLevel1) {
        if (!this._getIsMutateSuppressed() && this.administrativeLevel1 !== administrativeLevel1) {
            this._setIsAdministrativeLevel1Mutated(true);
        }
        this.administrativeLevel1 = administrativeLevel1;
        return (this);
    }
    /**
* ```
     * The administrativeLevel2 (county) for the address.
* ```
     */
    setAdministrativeLevel2(administrativeLevel2) {
        if (!this._getIsMutateSuppressed() && this.administrativeLevel2 !== administrativeLevel2) {
            this._setIsAdministrativeLevel2Mutated(true);
        }
        this.administrativeLevel2 = administrativeLevel2;
        return (this);
    }
    /**
* ```
     * The administrativeLevel3 (city/town) for the address.
* ```
     */
    setAdministrativeLevel3(administrativeLevel3) {
        if (!this._getIsMutateSuppressed() && this.administrativeLevel3 !== administrativeLevel3) {
            this._setIsAdministrativeLevel3Mutated(true);
        }
        this.administrativeLevel3 = administrativeLevel3;
        return (this);
    }
    /**
* ```
     * The city
* ```
     */
    setCity(city) {
        if (!this._getIsMutateSuppressed() && this.city !== city) {
            this._setIsCityMutated(true);
        }
        this.city = city;
        return (this);
    }
    /**
* ```
     * The confidence for the address.
* ```
     */
    setConfidence(confidence) {
        if (!this._getIsMutateSuppressed() && this.confidence !== confidence) {
            this._setIsConfidenceMutated(true);
        }
        this.confidence = confidence;
        return (this);
    }
    /**
* ```
     * The direction for the address.
* ```
     */
    setDirection(direction) {
        if (!this._getIsMutateSuppressed() && this.direction !== direction) {
            this._setIsDirectionMutated(true);
        }
        this.direction = direction;
        return (this);
    }
    /**
* ```
     * The formattedAddress for the address.
* ```
     */
    setFormattedAddress(formattedAddress) {
        if (!this._getIsMutateSuppressed() && this.formattedAddress !== formattedAddress) {
            this._setIsFormattedAddressMutated(true);
        }
        this.formattedAddress = formattedAddress;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     * Is address validated by a service.
* ```
     */
    setIsValidated(isValidated) {
        if (!this._getIsMutateSuppressed() && this.isValidated !== isValidated) {
            this._setIsValidatedMutated(true);
        }
        this.isValidated = isValidated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The lat for the address.
* ```
     */
    setLat(lat) {
        if (!this._getIsMutateSuppressed() && this.lat !== lat) {
            this._setIsLatMutated(true);
        }
        this.lat = lat;
        return (this);
    }
    /**
* ```
     * The lng for the address.
* ```
     */
    setLng(lng) {
        if (!this._getIsMutateSuppressed() && this.lng !== lng) {
            this._setIsLngMutated(true);
        }
        this.lng = lng;
        return (this);
    }
    /**
* ```
     * The neighborhood for the address.
* ```
     */
    setNeighborhood(neighborhood) {
        if (!this._getIsMutateSuppressed() && this.neighborhood !== neighborhood) {
            this._setIsNeighborhoodMutated(true);
        }
        this.neighborhood = neighborhood;
        return (this);
    }
    /**
* ```
     * Is the address a post office/box.
* ```
     */
    setPostOffice(postOffice) {
        if (!this._getIsMutateSuppressed() && this.postOffice !== postOffice) {
            this._setIsPostOfficeMutated(true);
        }
        this.postOffice = postOffice;
        return (this);
    }
    /**
* ```
     * The street for the address.
* ```
     */
    setStreet(street) {
        if (!this._getIsMutateSuppressed() && this.street !== street) {
            this._setIsStreetMutated(true);
        }
        this.street = street;
        return (this);
    }
    /**
* ```
     * The name of the street for the address.
* ```
     */
    setStreetName(streetName) {
        if (!this._getIsMutateSuppressed() && this.streetName !== streetName) {
            this._setIsStreetNameMutated(true);
        }
        this.streetName = streetName;
        return (this);
    }
    /**
* ```
     * The streetNumber for the address.
* ```
     */
    setStreetNumber(streetNumber) {
        if (!this._getIsMutateSuppressed() && this.streetNumber !== streetNumber) {
            this._setIsStreetNumberMutated(true);
        }
        this.streetNumber = streetNumber;
        return (this);
    }
    /**
* ```
     * The street suffix for the address.
* ```
     */
    setStreetSuffix(streetSuffix) {
        if (!this._getIsMutateSuppressed() && this.streetSuffix !== streetSuffix) {
            this._setIsStreetSuffixMutated(true);
        }
        this.streetSuffix = streetSuffix;
        return (this);
    }
    /**
* ```
     * The subpremiseLevel for the address.
* ```
     */
    setSubpremiseLevel(subpremiseLevel) {
        if (!this._getIsMutateSuppressed() && this.subpremiseLevel !== subpremiseLevel) {
            this._setIsSubpremiseLevelMutated(true);
        }
        this.subpremiseLevel = subpremiseLevel;
        return (this);
    }
    /**
* ```
     * The US state for the address.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setUsState(usState, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.usState !== usState) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(usState, persistanceType);
            this._setIsUsStateMutated(true);
        }
        this.usState = usState;
        return (this);
    }
    /**
* ```
     * The service that validate the address.
* ```
     */
    setValidatedBy(validatedBy) {
        if (!this._getIsMutateSuppressed() && this.validatedBy !== validatedBy) {
            this._setIsValidatedByMutated(true);
        }
        this.validatedBy = validatedBy;
        return (this);
    }
    /**
* ```
     * The zipcode for the address.
* ```
     */
    setZipcode(zipcode) {
        if (!this._getIsMutateSuppressed() && this.zipcode !== zipcode) {
            this._setIsZipcodeMutated(true);
        }
        this.zipcode = zipcode;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'administrativeLevel1',
            value: this.administrativeLevel1
        });
        this._setCurrentState2({
            attributeName: 'administrativeLevel2',
            value: this.administrativeLevel2
        });
        this._setCurrentState2({
            attributeName: 'administrativeLevel3',
            value: this.administrativeLevel3
        });
        this._setCurrentState2({
            attributeName: 'city',
            value: this.city
        });
        this._setCurrentState2({
            attributeName: 'confidence',
            value: this.confidence
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'direction',
            value: this.direction
        });
        this._setCurrentState2({
            attributeName: 'formattedAddress',
            value: this.formattedAddress
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'isValidated',
            value: this.isValidated
        });
        this._setCurrentState2({
            attributeName: 'lat',
            value: this.lat
        });
        this._setCurrentState2({
            attributeName: 'lng',
            value: this.lng
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'neighborhood',
            value: this.neighborhood
        });
        this._setCurrentState2({
            attributeName: 'postOffice',
            value: this.postOffice
        });
        this._setCurrentState2({
            attributeName: 'street',
            value: this.street
        });
        this._setCurrentState2({
            attributeName: 'streetName',
            value: this.streetName
        });
        this._setCurrentState2({
            attributeName: 'streetNumber',
            value: this.streetNumber
        });
        this._setCurrentState2({
            attributeName: 'streetSuffix',
            value: this.streetSuffix
        });
        this._setCurrentState2({
            attributeName: 'subpremiseLevel',
            value: this.subpremiseLevel
        });
        this._setCurrentState2({
            attributeName: 'usState',
            value: this.usState
        });
        this._setCurrentState2({
            attributeName: 'validatedBy',
            value: this.validatedBy
        });
        this._setCurrentState2({
            attributeName: 'zipcode',
            value: this.zipcode
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'administrativeLevel1',
            value: this.administrativeLevel1
        });
        this._setInitializedState2({
            attributeName: 'administrativeLevel2',
            value: this.administrativeLevel2
        });
        this._setInitializedState2({
            attributeName: 'administrativeLevel3',
            value: this.administrativeLevel3
        });
        this._setInitializedState2({
            attributeName: 'city',
            value: this.city
        });
        this._setInitializedState2({
            attributeName: 'confidence',
            value: this.confidence
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'direction',
            value: this.direction
        });
        this._setInitializedState2({
            attributeName: 'formattedAddress',
            value: this.formattedAddress
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'isValidated',
            value: this.isValidated
        });
        this._setInitializedState2({
            attributeName: 'lat',
            value: this.lat
        });
        this._setInitializedState2({
            attributeName: 'lng',
            value: this.lng
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'neighborhood',
            value: this.neighborhood
        });
        this._setInitializedState2({
            attributeName: 'postOffice',
            value: this.postOffice
        });
        this._setInitializedState2({
            attributeName: 'street',
            value: this.street
        });
        this._setInitializedState2({
            attributeName: 'streetName',
            value: this.streetName
        });
        this._setInitializedState2({
            attributeName: 'streetNumber',
            value: this.streetNumber
        });
        this._setInitializedState2({
            attributeName: 'streetSuffix',
            value: this.streetSuffix
        });
        this._setInitializedState2({
            attributeName: 'subpremiseLevel',
            value: this.subpremiseLevel
        });
        this._setInitializedState2({
            attributeName: 'usState',
            value: this.usState
        });
        this._setInitializedState2({
            attributeName: 'validatedBy',
            value: this.validatedBy
        });
        this._setInitializedState2({
            attributeName: 'zipcode',
            value: this.zipcode
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.administrativeLevel1);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.administrativeLevel2);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.administrativeLevel3);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.city);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.confidence);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.direction);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.formattedAddress);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isValidated);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.lat);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.lng);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.neighborhood);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.postOffice);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.street);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.streetName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.streetNumber);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.streetSuffix);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.subpremiseLevel);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.usState);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.validatedBy);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.zipcode);
        return (hashCode_n);
    }
}
exports.Address = Address;
Address.metaDataForAddress = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.Address", Address);
//# sourceMappingURL=Address.js.map