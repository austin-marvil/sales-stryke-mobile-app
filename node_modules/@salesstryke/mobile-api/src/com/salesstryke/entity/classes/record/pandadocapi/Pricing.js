"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pricing = void 0;
const ClassFor_1 = require("../../../../data/ClassFor");
const JsonApiRecordBase_1 = require("../../../../jsonApi/JsonApiRecordBase");
const HashCodeUtil_1 = require("../../../../utils/HashCodeUtil");
class EntityAttributes {
    constructor() {
        this._totalIsMutated = "_totalIsMutated";
        this.tables = "tables";
        this.total = "total";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._totalIsMutated = "_totalIsMutated";
        this.tables = "tables";
        this.total = "total";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.record.pandadocapi.Pricing";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class Pricing extends JsonApiRecordBase_1.JsonApiRecordBase {
    constructor(p) {
        super(p);
        this._totalIsMutated = false;
        this.tables = new Array();
        this.total = 0;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.record.pandadocapi.Pricing");
    }
    /**
     * The Tables.
     */
    addTable(table) {
        this.tables.push(table);
        return (this);
    }
    /**
     *
     * @returns boolean
     */
    _getIsTotalMutated() {
        return (this._totalIsMutated);
    }
    /**
     * The Tables.
     * @returns Array<Table>
     */
    getTables() {
        return (this.tables);
    }
    /**
     * The total.
     * @returns number
     */
    getTotal() {
        return (this.total);
    }
    /**
* ```
     *
* ```
     */
    _setIsTotalMutated(_totalIsMutated) {
        this._totalIsMutated = _totalIsMutated;
        return (this);
    }
    /**
* ```
     * The Tables.
* ```
     */
    setTables(tables) {
        this.tables = tables;
        return (this);
    }
    /**
* ```
     * The total.
* ```
     */
    setTotal(total) {
        if (this.total !== total) {
            this._setIsTotalMutated(true);
        }
        this.total = total;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'tables',
            value: this.tables
        });
        this._setCurrentState2({
            attributeName: 'total',
            value: this.total
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'tables',
            value: this.tables
        });
        this._setInitializedState2({
            attributeName: 'total',
            value: this.total
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.tables);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.total);
        return (hashCode_n);
    }
}
exports.Pricing = Pricing;
Pricing.metaDataForPricing = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.record.pandadocapi.Pricing", Pricing);
//# sourceMappingURL=Pricing.js.map