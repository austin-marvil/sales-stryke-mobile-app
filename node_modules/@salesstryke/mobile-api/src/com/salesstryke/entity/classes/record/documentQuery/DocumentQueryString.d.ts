/**
 * This file is auto generated DO NOT EDIT.
 */
import { JsonApiRecordBase } from '../../../../jsonApi/JsonApiRecordBase';
declare class EntityAttributes {
    _valueIsMutated: string;
    value: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _valueIsMutated: string;
    value: string;
}
declare class MetaData {
    namespace: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class DocumentQueryString extends JsonApiRecordBase {
    static metaDataForDocumentQueryString: MetaData;
    private _valueIsMutated;
    private value;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): DocumentQueryString;
    getClassName(): string;
    /**
     *
     * @returns boolean
     */
    _getIsValueMutated(): boolean;
    /**
     * the value of the String
     * @returns string | null
     */
    getValue(): string | null;
    /**
* ```
     *
* ```
     */
    _setIsValueMutated(_valueIsMutated: boolean): DocumentQueryString;
    /**
* ```
     * the value of the String
* ```
     */
    setValue(value: string | null): DocumentQueryString;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
