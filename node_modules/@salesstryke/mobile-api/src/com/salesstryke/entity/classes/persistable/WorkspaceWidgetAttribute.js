"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceWidgetAttribute = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._defaultValueIsMutated = "_defaultValueIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isActiveIsMutated = "_isActiveIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._labelI18nKeyIsMutated = "_labelI18nKeyIsMutated";
        this._labelIsMutated = "_labelIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._pandaDocKeyNameIsMutated = "_pandaDocKeyNameIsMutated";
        this._regexValidationErrorMessageI18nKeyIsMutated = "_regexValidationErrorMessageI18nKeyIsMutated";
        this._regexValidationErrorMessageIsMutated = "_regexValidationErrorMessageIsMutated";
        this._regexValidationIsMutated = "_regexValidationIsMutated";
        this._salesStrykeKeyNameIsMutated = "_salesStrykeKeyNameIsMutated";
        this._widgetAttributeTypeIsMutated = "_widgetAttributeTypeIsMutated";
        this._workspaceWidgetIsMutated = "_workspaceWidgetIsMutated";
        this.createdDate = "createdDate";
        this.defaultValue = "defaultValue";
        this.description = "description";
        this.id = "id";
        this.isActive = "isActive";
        this.jsonType = "jsonType";
        this.label = "label";
        this.labelI18nKey = "labelI18nKey";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.pandaDocKeyName = "pandaDocKeyName";
        this.regexValidation = "regexValidation";
        this.regexValidationErrorMessage = "regexValidationErrorMessage";
        this.regexValidationErrorMessageI18nKey = "regexValidationErrorMessageI18nKey";
        this.salesStrykeKeyName = "salesStrykeKeyName";
        this.widgetAttributeType = "widgetAttributeType";
        this.workspaceWidget = "workspaceWidget";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._defaultValueIsMutated = "_defaultValueIsMutated";
        this._descriptionIsMutated = "_descriptionIsMutated";
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isActiveIsMutated = "_isActiveIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isRemoveFromRelationship = "_isRemoveFromRelationship";
        this._isRemoveFromRelationshipIsMutated = "_isRemoveFromRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._labelI18nKeyIsMutated = "_labelI18nKeyIsMutated";
        this._labelIsMutated = "_labelIsMutated";
        this._nameIsMutated = "_nameIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._pandaDocKeyNameIsMutated = "_pandaDocKeyNameIsMutated";
        this._regexValidationErrorMessageI18nKeyIsMutated = "_regexValidationErrorMessageI18nKeyIsMutated";
        this._regexValidationErrorMessageIsMutated = "_regexValidationErrorMessageIsMutated";
        this._regexValidationIsMutated = "_regexValidationIsMutated";
        this._salesStrykeKeyNameIsMutated = "_salesStrykeKeyNameIsMutated";
        this._widgetAttributeTypeIsMutated = "_widgetAttributeTypeIsMutated";
        this._workspaceWidgetIsMutated = "_workspaceWidgetIsMutated";
        this.createdDate = "createdDate";
        this.defaultValue = "defaultValue";
        this.description = "description";
        this._id = "_id";
        this.isActive = "isActive";
        this.jsonType = "jsonType";
        this.label = "label";
        this.labelI18nKey = "labelI18nKey";
        this.modifiedDate = "modifiedDate";
        this.name = "name";
        this.organization = "organization";
        this.pandaDocKeyName = "pandaDocKeyName";
        this.regexValidation = "regexValidation";
        this.regexValidationErrorMessage = "regexValidationErrorMessage";
        this.regexValidationErrorMessageI18nKey = "regexValidationErrorMessageI18nKey";
        this.salesStrykeKeyName = "salesStrykeKeyName";
        this.widgetAttributeType = "widgetAttributeType";
        this.workspaceWidget = "workspaceWidget";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.WorkspaceWidgetAttribute";
        this.mongDataModeName = "WorkspaceWidgetAttribute";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class WorkspaceWidgetAttribute extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._defaultValueIsMutated = false;
        this._descriptionIsMutated = false;
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isActiveIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._isRemoveFromRelationship = false;
        this._isRemoveFromRelationshipIsMutated = false;
        this._labelI18nKeyIsMutated = false;
        this._labelIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._pandaDocKeyNameIsMutated = false;
        this._regexValidationErrorMessageI18nKeyIsMutated = false;
        this._regexValidationErrorMessageIsMutated = false;
        this._regexValidationIsMutated = false;
        this._salesStrykeKeyNameIsMutated = false;
        this._widgetAttributeTypeIsMutated = false;
        this._workspaceWidgetIsMutated = false;
        this.defaultValue = null;
        this.description = null;
        this.id = null;
        this.isActive = undefined;
        this.jsonType = "com.salesstryke.entity.classes.persistable.WorkspaceWidgetAttribute";
        this.label = null;
        this.labelI18nKey = null;
        this.name = null;
        this.organization = null;
        this.pandaDocKeyName = null;
        this.regexValidation = null;
        this.regexValidationErrorMessage = null;
        this.regexValidationErrorMessageI18nKey = null;
        this.salesStrykeKeyName = null;
        this.widgetAttributeType = null;
        this.workspaceWidget = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._defaultValueIsMutated = false;
        this._descriptionIsMutated = false;
        this._isActiveIsMutated = false;
        this._labelIsMutated = false;
        this._labelI18nKeyIsMutated = false;
        this._nameIsMutated = false;
        this._organizationIsMutated = false;
        this._pandaDocKeyNameIsMutated = false;
        this._regexValidationIsMutated = false;
        this._regexValidationErrorMessageIsMutated = false;
        this._regexValidationErrorMessageI18nKeyIsMutated = false;
        this._salesStrykeKeyNameIsMutated = false;
        this._widgetAttributeTypeIsMutated = false;
        this._workspaceWidgetIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.WorkspaceWidgetAttribute");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     *
     * @returns boolean
     */
    _getIsDefaultValueMutated() {
        return (this._defaultValueIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDescriptionMutated() {
        return (this._descriptionIsMutated);
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsActiveMutated() {
        return (this._isActiveIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationship() {
        return (this._isRemoveFromRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRemoveFromRelationshipMutated() {
        return (this._isRemoveFromRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLabelI18nKeyMutated() {
        return (this._labelI18nKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLabelMutated() {
        return (this._labelIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocKeyNameMutated() {
        return (this._pandaDocKeyNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRegexValidationErrorMessageI18nKeyMutated() {
        return (this._regexValidationErrorMessageI18nKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRegexValidationErrorMessageMutated() {
        return (this._regexValidationErrorMessageIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRegexValidationMutated() {
        return (this._regexValidationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSalesStrykeKeyNameMutated() {
        return (this._salesStrykeKeyNameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWidgetAttributeTypeMutated() {
        return (this._widgetAttributeTypeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWorkspaceWidgetMutated() {
        return (this._workspaceWidgetIsMutated);
    }
    /**
     * The default value of the attribute.
     * @returns string | null
     */
    getDefaultValue() {
        return (this.defaultValue);
    }
    /**
     * The description of the widget.
     * @returns string | null
     */
    getDescription() {
        return (this.description);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     * Identifies if the widget is active.
     * @returns boolean
     */
    getIsActive() {
        return ((this.isActive === undefined) ? false : this.isActive);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The label for the attribute.
     * @returns string | null
     */
    getLabel() {
        return (this.label);
    }
    /**
     * The label I18N key for the attribute.
     * @returns string | null
     */
    getLabelI18nKey() {
        return (this.labelI18nKey);
    }
    /**
     * The widget name.
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * The tenant Organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * The pandaDocKeyName attribute name.
     * @returns string | null
     */
    getPandaDocKeyName() {
        return (this.pandaDocKeyName);
    }
    /**
     * An regex for validation of a value of the attribute.
     * @returns string | null
     */
    getRegexValidation() {
        return (this.regexValidation);
    }
    /**
     * An error message for validation of a value of the attribute.
     * @returns string | null
     */
    getRegexValidationErrorMessage() {
        return (this.regexValidationErrorMessage);
    }
    /**
     * An error message for validation of a value of the attribute.
     * @returns string | null
     */
    getRegexValidationErrorMessageI18nKey() {
        return (this.regexValidationErrorMessageI18nKey);
    }
    /**
     * The salesStrykeKeyName attribute name.
     * @returns string | null
     */
    getSalesStrykeKeyName() {
        return (this.salesStrykeKeyName);
    }
    /**
     * The WidgetAttributeType this attribute belongs to.
     * @returns WidgetAttributeType | null
     */
    getWidgetAttributeType() {
        return (this.widgetAttributeType);
    }
    /**
     * The workspace widget this view belongs to.
     * @returns WorkspaceWidget | null
     */
    getWorkspaceWidget() {
        return (this.workspaceWidget);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDefaultValueMutated(_defaultValueIsMutated) {
        this._defaultValueIsMutated = _defaultValueIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDescriptionMutated(_descriptionIsMutated) {
        this._descriptionIsMutated = _descriptionIsMutated;
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsActiveMutated(_isActiveIsMutated) {
        this._isActiveIsMutated = _isActiveIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationship(_isRemoveFromRelationship) {
        if (this._isRemoveFromRelationship !== _isRemoveFromRelationship) {
            this._setIsRemoveFromRelationshipMutated(true);
        }
        this._isRemoveFromRelationship = _isRemoveFromRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRemoveFromRelationshipMutated(_isRemoveFromRelationshipIsMutated) {
        this._isRemoveFromRelationshipIsMutated = _isRemoveFromRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLabelI18nKeyMutated(_labelI18nKeyIsMutated) {
        this._labelI18nKeyIsMutated = _labelI18nKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLabelMutated(_labelIsMutated) {
        this._labelIsMutated = _labelIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocKeyNameMutated(_pandaDocKeyNameIsMutated) {
        this._pandaDocKeyNameIsMutated = _pandaDocKeyNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRegexValidationErrorMessageI18nKeyMutated(_regexValidationErrorMessageI18nKeyIsMutated) {
        this._regexValidationErrorMessageI18nKeyIsMutated = _regexValidationErrorMessageI18nKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRegexValidationErrorMessageMutated(_regexValidationErrorMessageIsMutated) {
        this._regexValidationErrorMessageIsMutated = _regexValidationErrorMessageIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRegexValidationMutated(_regexValidationIsMutated) {
        this._regexValidationIsMutated = _regexValidationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSalesStrykeKeyNameMutated(_salesStrykeKeyNameIsMutated) {
        this._salesStrykeKeyNameIsMutated = _salesStrykeKeyNameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWidgetAttributeTypeMutated(_widgetAttributeTypeIsMutated) {
        this._widgetAttributeTypeIsMutated = _widgetAttributeTypeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWorkspaceWidgetMutated(_workspaceWidgetIsMutated) {
        this._workspaceWidgetIsMutated = _workspaceWidgetIsMutated;
        return (this);
    }
    /**
* ```
     * The default value of the attribute.
* ```
     */
    setDefaultValue(defaultValue) {
        if (!this._getIsMutateSuppressed() && this.defaultValue !== defaultValue) {
            this._setIsDefaultValueMutated(true);
        }
        this.defaultValue = defaultValue;
        return (this);
    }
    /**
* ```
     * The description of the widget.
* ```
     */
    setDescription(description) {
        if (!this._getIsMutateSuppressed() && this.description !== description) {
            this._setIsDescriptionMutated(true);
        }
        this.description = description;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     * Identifies if the widget is active.
* ```
     */
    setIsActive(isActive) {
        if (!this._getIsMutateSuppressed() && this.isActive !== isActive) {
            this._setIsActiveMutated(true);
        }
        this.isActive = isActive;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The label for the attribute.
* ```
     */
    setLabel(label) {
        if (!this._getIsMutateSuppressed() && this.label !== label) {
            this._setIsLabelMutated(true);
        }
        this.label = label;
        return (this);
    }
    /**
* ```
     * The label I18N key for the attribute.
* ```
     */
    setLabelI18nKey(labelI18nKey) {
        if (!this._getIsMutateSuppressed() && this.labelI18nKey !== labelI18nKey) {
            this._setIsLabelI18nKeyMutated(true);
        }
        this.labelI18nKey = labelI18nKey;
        return (this);
    }
    /**
* ```
     * The widget name.
* ```
     */
    setName(name) {
        if (!this._getIsMutateSuppressed() && this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
* ```
     * The tenant Organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * The pandaDocKeyName attribute name.
* ```
     */
    setPandaDocKeyName(pandaDocKeyName) {
        if (!this._getIsMutateSuppressed() && this.pandaDocKeyName !== pandaDocKeyName) {
            this._setIsPandaDocKeyNameMutated(true);
        }
        this.pandaDocKeyName = pandaDocKeyName;
        return (this);
    }
    /**
* ```
     * An regex for validation of a value of the attribute.
* ```
     */
    setRegexValidation(regexValidation) {
        if (!this._getIsMutateSuppressed() && this.regexValidation !== regexValidation) {
            this._setIsRegexValidationMutated(true);
        }
        this.regexValidation = regexValidation;
        return (this);
    }
    /**
* ```
     * An error message for validation of a value of the attribute.
* ```
     */
    setRegexValidationErrorMessage(regexValidationErrorMessage) {
        if (!this._getIsMutateSuppressed() && this.regexValidationErrorMessage !== regexValidationErrorMessage) {
            this._setIsRegexValidationErrorMessageMutated(true);
        }
        this.regexValidationErrorMessage = regexValidationErrorMessage;
        return (this);
    }
    /**
* ```
     * An error message for validation of a value of the attribute.
* ```
     */
    setRegexValidationErrorMessageI18nKey(regexValidationErrorMessageI18nKey) {
        if (!this._getIsMutateSuppressed() && this.regexValidationErrorMessageI18nKey !== regexValidationErrorMessageI18nKey) {
            this._setIsRegexValidationErrorMessageI18nKeyMutated(true);
        }
        this.regexValidationErrorMessageI18nKey = regexValidationErrorMessageI18nKey;
        return (this);
    }
    /**
* ```
     * The salesStrykeKeyName attribute name.
* ```
     */
    setSalesStrykeKeyName(salesStrykeKeyName) {
        if (!this._getIsMutateSuppressed() && this.salesStrykeKeyName !== salesStrykeKeyName) {
            this._setIsSalesStrykeKeyNameMutated(true);
        }
        this.salesStrykeKeyName = salesStrykeKeyName;
        return (this);
    }
    /**
* ```
     * The WidgetAttributeType this attribute belongs to.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setWidgetAttributeType(widgetAttributeType, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.widgetAttributeType !== widgetAttributeType) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(widgetAttributeType, persistanceType);
            this._setIsWidgetAttributeTypeMutated(true);
        }
        this.widgetAttributeType = widgetAttributeType;
        return (this);
    }
    /**
* ```
     * The workspace widget this view belongs to.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setWorkspaceWidget(workspaceWidget, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.workspaceWidget !== workspaceWidget) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(workspaceWidget, persistanceType);
            this._setIsWorkspaceWidgetMutated(true);
        }
        this.workspaceWidget = workspaceWidget;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_isRemoveFromRelationship',
            value: this._isRemoveFromRelationship
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'defaultValue',
            value: this.defaultValue
        });
        this._setCurrentState2({
            attributeName: 'description',
            value: this.description
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'isActive',
            value: this.isActive
        });
        this._setCurrentState2({
            attributeName: 'label',
            value: this.label
        });
        this._setCurrentState2({
            attributeName: 'labelI18nKey',
            value: this.labelI18nKey
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'name',
            value: this.name
        });
        this._setCurrentState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setCurrentState2({
            attributeName: 'pandaDocKeyName',
            value: this.pandaDocKeyName
        });
        this._setCurrentState2({
            attributeName: 'regexValidation',
            value: this.regexValidation
        });
        this._setCurrentState2({
            attributeName: 'regexValidationErrorMessage',
            value: this.regexValidationErrorMessage
        });
        this._setCurrentState2({
            attributeName: 'regexValidationErrorMessageI18nKey',
            value: this.regexValidationErrorMessageI18nKey
        });
        this._setCurrentState2({
            attributeName: 'salesStrykeKeyName',
            value: this.salesStrykeKeyName
        });
        this._setCurrentState2({
            attributeName: 'widgetAttributeType',
            value: this.widgetAttributeType
        });
        this._setCurrentState2({
            attributeName: 'workspaceWidget',
            value: this.workspaceWidget
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_isRemoveFromRelationship',
            value: this._isRemoveFromRelationship
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'defaultValue',
            value: this.defaultValue
        });
        this._setInitializedState2({
            attributeName: 'description',
            value: this.description
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'isActive',
            value: this.isActive
        });
        this._setInitializedState2({
            attributeName: 'label',
            value: this.label
        });
        this._setInitializedState2({
            attributeName: 'labelI18nKey',
            value: this.labelI18nKey
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'name',
            value: this.name
        });
        this._setInitializedState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setInitializedState2({
            attributeName: 'pandaDocKeyName',
            value: this.pandaDocKeyName
        });
        this._setInitializedState2({
            attributeName: 'regexValidation',
            value: this.regexValidation
        });
        this._setInitializedState2({
            attributeName: 'regexValidationErrorMessage',
            value: this.regexValidationErrorMessage
        });
        this._setInitializedState2({
            attributeName: 'regexValidationErrorMessageI18nKey',
            value: this.regexValidationErrorMessageI18nKey
        });
        this._setInitializedState2({
            attributeName: 'salesStrykeKeyName',
            value: this.salesStrykeKeyName
        });
        this._setInitializedState2({
            attributeName: 'widgetAttributeType',
            value: this.widgetAttributeType
        });
        this._setInitializedState2({
            attributeName: 'workspaceWidget',
            value: this.workspaceWidget
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this._isRemoveFromRelationship);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.defaultValue);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.description);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isActive);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.label);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.labelI18nKey);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.name);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organization);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocKeyName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.regexValidation);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.regexValidationErrorMessage);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.regexValidationErrorMessageI18nKey);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.salesStrykeKeyName);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.widgetAttributeType);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.workspaceWidget);
        return (hashCode_n);
    }
}
exports.WorkspaceWidgetAttribute = WorkspaceWidgetAttribute;
WorkspaceWidgetAttribute.metaDataForWorkspaceWidgetAttribute = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.WorkspaceWidgetAttribute", WorkspaceWidgetAttribute);
//# sourceMappingURL=WorkspaceWidgetAttribute.js.map