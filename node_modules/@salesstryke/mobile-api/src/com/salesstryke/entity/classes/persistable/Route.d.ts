/**
 * This file is auto generated DO NOT EDIT.
 */
import { Organization } from './Organization';
import { ProductCategoryRoute } from './ProductCategoryRoute';
import { ProductColorRoute } from './ProductColorRoute';
import { ProductPricingRoute } from './ProductPricingRoute';
import { ProductRoute } from './ProductRoute';
import { Workspace } from './Workspace';
import { JsonApiPersistableBase } from '../../../jsonApi/JsonApiPersistableBase';
import { PersistenceType } from '../../../data/PersistenceType';
declare class EntityAttributes {
    _clientRouteIdIsMutated: string;
    _entityState: string;
    _idSetBySystem: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _jsonStateStr: string;
    _nameIsMutated: string;
    _organizationIsMutated: string;
    _productCategoryRoutesIsMutated: string;
    _productColorRoutesIsMutated: string;
    _productPricingRoutesIsMutated: string;
    _productRoutesIsMutated: string;
    _relationshipPersistableType: string;
    _workspaceIsMutated: string;
    clientRouteId: string;
    createdDate: string;
    id: string;
    jsonType: string;
    modifiedDate: string;
    name: string;
    organization: string;
    productCategoryRoutes: string;
    productColorRoutes: string;
    productPricingRoutes: string;
    productRoutes: string;
    workspace: string;
}
declare class MongoVirtual {
    productCategoryRoutes: string;
    productColorRoutes: string;
    productPricingRoutes: string;
    productRoutes: string;
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _clientRouteIdIsMutated: string;
    _entityState: string;
    _idSetBySystem: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _jsonStateStr: string;
    _nameIsMutated: string;
    _organizationIsMutated: string;
    _productCategoryRoutesIsMutated: string;
    _productColorRoutesIsMutated: string;
    _productPricingRoutesIsMutated: string;
    _productRoutesIsMutated: string;
    _relationshipPersistableType: string;
    _workspaceIsMutated: string;
    clientRouteId: string;
    createdDate: string;
    _id: string;
    jsonType: string;
    modifiedDate: string;
    name: string;
    organization: string;
    productCategoryRoutes: string;
    productColorRoutes: string;
    productPricingRoutes: string;
    productRoutes: string;
    workspace: string;
}
declare class MetaData {
    namespace: string;
    mongDataModeName: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class Route extends JsonApiPersistableBase {
    static metaDataForRoute: MetaData;
    private _clientRouteIdIsMutated;
    private _idSetBySystem;
    private _initializedDataKey;
    private _initializedDataKeyIsMutated;
    private _isAddToRelationship;
    private _isAddToRelationshipIsMutated;
    private _nameIsMutated;
    private _organizationIsMutated;
    private _productCategoryRoutesIsMutated;
    private _productColorRoutesIsMutated;
    private _productPricingRoutesIsMutated;
    private _productRoutesIsMutated;
    private _workspaceIsMutated;
    private clientRouteId;
    private id;
    private jsonType;
    private name;
    private organization;
    private productCategoryRoutes;
    private productColorRoutes;
    private productPricingRoutes;
    private productRoutes;
    private workspace;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): Route;
    getClassName(): string;
    /**
     * The product category route
     *
     * Default PersistenceType : PersistenceType.ATTACH
     */
    addProductCategoryRoute(productCategoryRoute: ProductCategoryRoute, persistanceType?: PersistenceType): Route;
    /**
     * The product category route
     * If the Entity ID is null, will not be added.
     * Default PersistenceType : PersistenceType.DETACH
     */
    removeProductCategoryRoute(productCategoryRoute: ProductCategoryRoute, persistanceType?: PersistenceType): Route;
    /**
     * The product color route
     *
     * Default PersistenceType : PersistenceType.ATTACH
     */
    addProductColorRoute(productColorRoute: ProductColorRoute, persistanceType?: PersistenceType): Route;
    /**
     * The product color route
     * If the Entity ID is null, will not be added.
     * Default PersistenceType : PersistenceType.DETACH
     */
    removeProductColorRoute(productColorRoute: ProductColorRoute, persistanceType?: PersistenceType): Route;
    /**
     * The product pricing route
     *
     * Default PersistenceType : PersistenceType.ATTACH
     */
    addProductPricingRoute(productPricingRoute: ProductPricingRoute, persistanceType?: PersistenceType): Route;
    /**
     * The product pricing route
     * If the Entity ID is null, will not be added.
     * Default PersistenceType : PersistenceType.DETACH
     */
    removeProductPricingRoute(productPricingRoute: ProductPricingRoute, persistanceType?: PersistenceType): Route;
    /**
     * The product route
     *
     * Default PersistenceType : PersistenceType.ATTACH
     */
    addProductRoute(productRoute: ProductRoute, persistanceType?: PersistenceType): Route;
    /**
     * The product route
     * If the Entity ID is null, will not be added.
     * Default PersistenceType : PersistenceType.DETACH
     */
    removeProductRoute(productRoute: ProductRoute, persistanceType?: PersistenceType): Route;
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState(): string | null;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr(): string | null;
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType(): number;
    /**
     *
     * @returns Date | null
     */
    getCreatedDate(): Date | null;
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate(): Date | null;
    /**
     *
     * @returns boolean
     */
    _getIsClientRouteIdMutated(): boolean;
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem(): boolean;
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey(): string | null;
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsProductCategoryRoutesMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsProductColorRoutesMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsProductPricingRoutesMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsProductRoutesMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsWorkspaceMutated(): boolean;
    /**
     * The client route ID.
     * @returns string | null
     */
    getClientRouteId(): string | null;
    /**
     *
     * @returns string | null
     */
    getId(): string | null;
    /**
     *
     * @returns string | null
     */
    getJsonType(): string | null;
    /**
     * The name of the route.
     * @returns string | null
     */
    getName(): string | null;
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization(): Organization | null;
    /**
     * The product category route
     * @returns Array<ProductCategoryRoute>
     */
    getProductCategoryRoutes(): Array<ProductCategoryRoute>;
    /**
     * The product color route
     * @returns Array<ProductColorRoute>
     */
    getProductColorRoutes(): Array<ProductColorRoute>;
    /**
     * The product pricing route
     * @returns Array<ProductPricingRoute>
     */
    getProductPricingRoutes(): Array<ProductPricingRoute>;
    /**
     * The product route
     * @returns Array<ProductRoute>
     */
    getProductRoutes(): Array<ProductRoute>;
    /**
     * The workspace.
     * @returns Workspace | null
     */
    getWorkspace(): Workspace | null;
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState: string | null): Route;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr: string | null): Route;
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType: number): Route;
    /**
     *
     */
    setCreatedDate(createdDate: Date | null): Route;
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate: Date | null): Route;
    /**
* ```
     *
* ```
     */
    _setIsClientRouteIdMutated(_clientRouteIdIsMutated: boolean): Route;
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem: boolean): Route;
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey: string | null): Route;
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsProductCategoryRoutesMutated(_productCategoryRoutesIsMutated: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsProductColorRoutesMutated(_productColorRoutesIsMutated: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsProductPricingRoutesMutated(_productPricingRoutesIsMutated: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsProductRoutesMutated(_productRoutesIsMutated: boolean): Route;
    /**
* ```
     *
* ```
     */
    _setIsWorkspaceMutated(_workspaceIsMutated: boolean): Route;
    /**
* ```
     * The client route ID.
* ```
     */
    setClientRouteId(clientRouteId: string | null): Route;
    /**
* ```
     *
* ```
     */
    setId(id: string | null): Route;
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType: string | null): Route;
    /**
* ```
     * The name of the route.
* ```
     */
    setName(name: string | null): Route;
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization: Organization | null, persistanceType?: PersistenceType): Route;
    /**
* ```
     * The product category route
* ```
     */
    setProductCategoryRoutes(productCategoryRoutes: Array<ProductCategoryRoute>): Route;
    /**
* ```
     * The product color route
* ```
     */
    setProductColorRoutes(productColorRoutes: Array<ProductColorRoute>): Route;
    /**
* ```
     * The product pricing route
* ```
     */
    setProductPricingRoutes(productPricingRoutes: Array<ProductPricingRoute>): Route;
    /**
* ```
     * The product route
* ```
     */
    setProductRoutes(productRoutes: Array<ProductRoute>): Route;
    /**
* ```
     * The workspace.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setWorkspace(workspace: Workspace | null, persistanceType?: PersistenceType): Route;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
