"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingWorkspace = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const EntityUtils_1 = require("../../../utils/entity/EntityUtils");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isBPSEnabledIsMutated = "_isBPSEnabledIsMutated";
        this._isCALEnabledIsMutated = "_isCALEnabledIsMutated";
        this._isCNSEnabledIsMutated = "_isCNSEnabledIsMutated";
        this._isCSPEnabledIsMutated = "_isCSPEnabledIsMutated";
        this._isDefaultIsMutated = "_isDefaultIsMutated";
        this._isDGSEnabledIsMutated = "_isDGSEnabledIsMutated";
        this._isOSSEnabledIsMutated = "_isOSSEnabledIsMutated";
        this._isRouteBasedIsMutated = "_isRouteBasedIsMutated";
        this._isSESEnabledIsMutated = "_isSESEnabledIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._locationIsMutated = "_locationIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._settingIntegrationsIsMutated = "_settingIntegrationsIsMutated";
        this._workspaceIsMutated = "_workspaceIsMutated";
        this.createdDate = "createdDate";
        this.id = "id";
        this.isBPSEnabled = "isBPSEnabled";
        this.isCALEnabled = "isCALEnabled";
        this.isCNSEnabled = "isCNSEnabled";
        this.isCSPEnabled = "isCSPEnabled";
        this.isDefault = "isDefault";
        this.isDGSEnabled = "isDGSEnabled";
        this.isOSSEnabled = "isOSSEnabled";
        this.isRouteBased = "isRouteBased";
        this.isSESEnabled = "isSESEnabled";
        this.jsonType = "jsonType";
        this.location = "location";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.settingIntegrations = "settingIntegrations";
        this.workspace = "workspace";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._isBPSEnabledIsMutated = "_isBPSEnabledIsMutated";
        this._isCALEnabledIsMutated = "_isCALEnabledIsMutated";
        this._isCNSEnabledIsMutated = "_isCNSEnabledIsMutated";
        this._isCSPEnabledIsMutated = "_isCSPEnabledIsMutated";
        this._isDefaultIsMutated = "_isDefaultIsMutated";
        this._isDGSEnabledIsMutated = "_isDGSEnabledIsMutated";
        this._isOSSEnabledIsMutated = "_isOSSEnabledIsMutated";
        this._isRouteBasedIsMutated = "_isRouteBasedIsMutated";
        this._isSESEnabledIsMutated = "_isSESEnabledIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._locationIsMutated = "_locationIsMutated";
        this._organizationIsMutated = "_organizationIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._settingIntegrationsIsMutated = "_settingIntegrationsIsMutated";
        this._workspaceIsMutated = "_workspaceIsMutated";
        this.createdDate = "createdDate";
        this._id = "_id";
        this.isBPSEnabled = "isBPSEnabled";
        this.isCALEnabled = "isCALEnabled";
        this.isCNSEnabled = "isCNSEnabled";
        this.isCSPEnabled = "isCSPEnabled";
        this.isDefault = "isDefault";
        this.isDGSEnabled = "isDGSEnabled";
        this.isOSSEnabled = "isOSSEnabled";
        this.isRouteBased = "isRouteBased";
        this.isSESEnabled = "isSESEnabled";
        this.jsonType = "jsonType";
        this.location = "location";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.settingIntegrations = "settingIntegrations";
        this.workspace = "workspace";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.SettingWorkspace";
        this.mongDataModeName = "SettingWorkspace";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class SettingWorkspace extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._isBPSEnabledIsMutated = false;
        this._isCALEnabledIsMutated = false;
        this._isCNSEnabledIsMutated = false;
        this._isCSPEnabledIsMutated = false;
        this._isDefaultIsMutated = false;
        this._isDGSEnabledIsMutated = false;
        this._isOSSEnabledIsMutated = false;
        this._isRouteBasedIsMutated = false;
        this._isSESEnabledIsMutated = false;
        this._locationIsMutated = false;
        this._organizationIsMutated = false;
        this._settingIntegrationsIsMutated = false;
        this._workspaceIsMutated = false;
        this.id = null;
        this.isBPSEnabled = undefined;
        this.isCALEnabled = undefined;
        this.isCNSEnabled = undefined;
        this.isCSPEnabled = undefined;
        this.isDefault = undefined;
        this.isDGSEnabled = undefined;
        this.isOSSEnabled = undefined;
        this.isRouteBased = undefined;
        this.isSESEnabled = undefined;
        this.jsonType = "com.salesstryke.entity.classes.persistable.SettingWorkspace";
        this.location = null;
        this.organization = null;
        this.settingIntegrations = null;
        this.workspace = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._isBPSEnabledIsMutated = false;
        this._isCALEnabledIsMutated = false;
        this._isCNSEnabledIsMutated = false;
        this._isCSPEnabledIsMutated = false;
        this._isDefaultIsMutated = false;
        this._isDGSEnabledIsMutated = false;
        this._isOSSEnabledIsMutated = false;
        this._isRouteBasedIsMutated = false;
        this._isSESEnabledIsMutated = false;
        this._locationIsMutated = false;
        this._organizationIsMutated = false;
        this._settingIntegrationsIsMutated = false;
        this._workspaceIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.SettingWorkspace");
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsBPSEnabledMutated() {
        return (this._isBPSEnabledIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCALEnabledMutated() {
        return (this._isCALEnabledIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCNSEnabledMutated() {
        return (this._isCNSEnabledIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsCSPEnabledMutated() {
        return (this._isCSPEnabledIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDefaultMutated() {
        return (this._isDefaultIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDGSEnabledMutated() {
        return (this._isDGSEnabledIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOSSEnabledMutated() {
        return (this._isOSSEnabledIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRouteBasedMutated() {
        return (this._isRouteBasedIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSESEnabledMutated() {
        return (this._isSESEnabledIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLocationMutated() {
        return (this._locationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSettingIntegrationsMutated() {
        return (this._settingIntegrationsIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsWorkspaceMutated() {
        return (this._workspaceIsMutated);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     * is BPS Enabled for this organization.
     * @returns boolean
     */
    getIsBPSEnabled() {
        return ((this.isBPSEnabled === undefined) ? false : this.isBPSEnabled);
    }
    /**
     * is CAL Enabled for this organization.
     * @returns boolean
     */
    getIsCALEnabled() {
        return ((this.isCALEnabled === undefined) ? false : this.isCALEnabled);
    }
    /**
     * is CNS Enabled for this organization.
     * @returns boolean
     */
    getIsCNSEnabled() {
        return ((this.isCNSEnabled === undefined) ? false : this.isCNSEnabled);
    }
    /**
     * is CSP Enabled for this organization.
     * @returns boolean
     */
    getIsCSPEnabled() {
        return ((this.isCSPEnabled === undefined) ? false : this.isCSPEnabled);
    }
    /**
     * Is setting default.
     * @returns boolean
     */
    getIsDefault() {
        return ((this.isDefault === undefined) ? false : this.isDefault);
    }
    /**
     * is DGS Enabled for this organization.
     * @returns boolean
     */
    getIsDGSEnabled() {
        return ((this.isDGSEnabled === undefined) ? false : this.isDGSEnabled);
    }
    /**
     * is OSS Enabled for this organization.
     * @returns boolean
     */
    getIsOSSEnabled() {
        return ((this.isOSSEnabled === undefined) ? false : this.isOSSEnabled);
    }
    /**
     * is workspace route based
     * @returns boolean
     */
    getIsRouteBased() {
        return ((this.isRouteBased === undefined) ? false : this.isRouteBased);
    }
    /**
     * is SES Enabled for this organization.
     * @returns boolean
     */
    getIsSESEnabled() {
        return ((this.isSESEnabled === undefined) ? false : this.isSESEnabled);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The location that the workspace is associated with.
     * @returns string | null
     */
    getLocation() {
        return (this.location);
    }
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * A JSON text that represents the settingIntegrations data
     * @returns Object
     */
    getSettingIntegrations() {
        return EntityUtils_1.EntityUtils.jsonStringGetter({ value: this.settingIntegrations || '' });
    }
    /**
     * The workspace.
     * @returns Workspace | null
     */
    getWorkspace() {
        return (this.workspace);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsBPSEnabledMutated(_isBPSEnabledIsMutated) {
        this._isBPSEnabledIsMutated = _isBPSEnabledIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCALEnabledMutated(_isCALEnabledIsMutated) {
        this._isCALEnabledIsMutated = _isCALEnabledIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCNSEnabledMutated(_isCNSEnabledIsMutated) {
        this._isCNSEnabledIsMutated = _isCNSEnabledIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsCSPEnabledMutated(_isCSPEnabledIsMutated) {
        this._isCSPEnabledIsMutated = _isCSPEnabledIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDefaultMutated(_isDefaultIsMutated) {
        this._isDefaultIsMutated = _isDefaultIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDGSEnabledMutated(_isDGSEnabledIsMutated) {
        this._isDGSEnabledIsMutated = _isDGSEnabledIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOSSEnabledMutated(_isOSSEnabledIsMutated) {
        this._isOSSEnabledIsMutated = _isOSSEnabledIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRouteBasedMutated(_isRouteBasedIsMutated) {
        this._isRouteBasedIsMutated = _isRouteBasedIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSESEnabledMutated(_isSESEnabledIsMutated) {
        this._isSESEnabledIsMutated = _isSESEnabledIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLocationMutated(_locationIsMutated) {
        this._locationIsMutated = _locationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSettingIntegrationsMutated(_settingIntegrationsIsMutated) {
        this._settingIntegrationsIsMutated = _settingIntegrationsIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsWorkspaceMutated(_workspaceIsMutated) {
        this._workspaceIsMutated = _workspaceIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     * is BPS Enabled for this organization.
* ```
     */
    setIsBPSEnabled(isBPSEnabled) {
        if (!this._getIsMutateSuppressed() && this.isBPSEnabled !== isBPSEnabled) {
            this._setIsBPSEnabledMutated(true);
        }
        this.isBPSEnabled = isBPSEnabled;
        return (this);
    }
    /**
* ```
     * is CAL Enabled for this organization.
* ```
     */
    setIsCALEnabled(isCALEnabled) {
        if (!this._getIsMutateSuppressed() && this.isCALEnabled !== isCALEnabled) {
            this._setIsCALEnabledMutated(true);
        }
        this.isCALEnabled = isCALEnabled;
        return (this);
    }
    /**
* ```
     * is CNS Enabled for this organization.
* ```
     */
    setIsCNSEnabled(isCNSEnabled) {
        if (!this._getIsMutateSuppressed() && this.isCNSEnabled !== isCNSEnabled) {
            this._setIsCNSEnabledMutated(true);
        }
        this.isCNSEnabled = isCNSEnabled;
        return (this);
    }
    /**
* ```
     * is CSP Enabled for this organization.
* ```
     */
    setIsCSPEnabled(isCSPEnabled) {
        if (!this._getIsMutateSuppressed() && this.isCSPEnabled !== isCSPEnabled) {
            this._setIsCSPEnabledMutated(true);
        }
        this.isCSPEnabled = isCSPEnabled;
        return (this);
    }
    /**
* ```
     * Is setting default.
* ```
     */
    setIsDefault(isDefault) {
        if (!this._getIsMutateSuppressed() && this.isDefault !== isDefault) {
            this._setIsDefaultMutated(true);
        }
        this.isDefault = isDefault;
        return (this);
    }
    /**
* ```
     * is DGS Enabled for this organization.
* ```
     */
    setIsDGSEnabled(isDGSEnabled) {
        if (!this._getIsMutateSuppressed() && this.isDGSEnabled !== isDGSEnabled) {
            this._setIsDGSEnabledMutated(true);
        }
        this.isDGSEnabled = isDGSEnabled;
        return (this);
    }
    /**
* ```
     * is OSS Enabled for this organization.
* ```
     */
    setIsOSSEnabled(isOSSEnabled) {
        if (!this._getIsMutateSuppressed() && this.isOSSEnabled !== isOSSEnabled) {
            this._setIsOSSEnabledMutated(true);
        }
        this.isOSSEnabled = isOSSEnabled;
        return (this);
    }
    /**
* ```
     * is workspace route based
* ```
     */
    setIsRouteBased(isRouteBased) {
        if (!this._getIsMutateSuppressed() && this.isRouteBased !== isRouteBased) {
            this._setIsRouteBasedMutated(true);
        }
        this.isRouteBased = isRouteBased;
        return (this);
    }
    /**
* ```
     * is SES Enabled for this organization.
* ```
     */
    setIsSESEnabled(isSESEnabled) {
        if (!this._getIsMutateSuppressed() && this.isSESEnabled !== isSESEnabled) {
            this._setIsSESEnabledMutated(true);
        }
        this.isSESEnabled = isSESEnabled;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The location that the workspace is associated with.
* ```
     */
    setLocation(location) {
        if (!this._getIsMutateSuppressed() && this.location !== location) {
            this._setIsLocationMutated(true);
        }
        this.location = location;
        return (this);
    }
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * A JSON text that represents the settingIntegrations data
* ```
     */
    setSettingIntegrations(settingIntegrations) {
        if (!this._getIsMutateSuppressed() && this.settingIntegrations !== EntityUtils_1.EntityUtils.jsonStringSetter({ value: settingIntegrations })) {
            this._setIsSettingIntegrationsMutated(true);
        }
        this.settingIntegrations = EntityUtils_1.EntityUtils.jsonStringSetter({ value: settingIntegrations });
        return (this);
    }
    /**
* ```
     * The workspace.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setWorkspace(workspace, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.workspace !== workspace) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(workspace, persistanceType);
            this._setIsWorkspaceMutated(true);
        }
        this.workspace = workspace;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'isBPSEnabled',
            value: this.isBPSEnabled
        });
        this._setCurrentState2({
            attributeName: 'isCALEnabled',
            value: this.isCALEnabled
        });
        this._setCurrentState2({
            attributeName: 'isCNSEnabled',
            value: this.isCNSEnabled
        });
        this._setCurrentState2({
            attributeName: 'isCSPEnabled',
            value: this.isCSPEnabled
        });
        this._setCurrentState2({
            attributeName: 'isDefault',
            value: this.isDefault
        });
        this._setCurrentState2({
            attributeName: 'isDGSEnabled',
            value: this.isDGSEnabled
        });
        this._setCurrentState2({
            attributeName: 'isOSSEnabled',
            value: this.isOSSEnabled
        });
        this._setCurrentState2({
            attributeName: 'isRouteBased',
            value: this.isRouteBased
        });
        this._setCurrentState2({
            attributeName: 'isSESEnabled',
            value: this.isSESEnabled
        });
        this._setCurrentState2({
            attributeName: 'location',
            value: this.location
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setCurrentState2({
            attributeName: 'settingIntegrations',
            value: this.settingIntegrations
        });
        this._setCurrentState2({
            attributeName: 'workspace',
            value: this.workspace
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'isBPSEnabled',
            value: this.isBPSEnabled
        });
        this._setInitializedState2({
            attributeName: 'isCALEnabled',
            value: this.isCALEnabled
        });
        this._setInitializedState2({
            attributeName: 'isCNSEnabled',
            value: this.isCNSEnabled
        });
        this._setInitializedState2({
            attributeName: 'isCSPEnabled',
            value: this.isCSPEnabled
        });
        this._setInitializedState2({
            attributeName: 'isDefault',
            value: this.isDefault
        });
        this._setInitializedState2({
            attributeName: 'isDGSEnabled',
            value: this.isDGSEnabled
        });
        this._setInitializedState2({
            attributeName: 'isOSSEnabled',
            value: this.isOSSEnabled
        });
        this._setInitializedState2({
            attributeName: 'isRouteBased',
            value: this.isRouteBased
        });
        this._setInitializedState2({
            attributeName: 'isSESEnabled',
            value: this.isSESEnabled
        });
        this._setInitializedState2({
            attributeName: 'location',
            value: this.location
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setInitializedState2({
            attributeName: 'settingIntegrations',
            value: this.settingIntegrations
        });
        this._setInitializedState2({
            attributeName: 'workspace',
            value: this.workspace
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isBPSEnabled);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isCALEnabled);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isCNSEnabled);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isCSPEnabled);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isDefault);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isDGSEnabled);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isOSSEnabled);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isRouteBased);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.isSESEnabled);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.location);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organization);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.settingIntegrations);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.workspace);
        return (hashCode_n);
    }
}
exports.SettingWorkspace = SettingWorkspace;
SettingWorkspace.metaDataForSettingWorkspace = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.SettingWorkspace", SettingWorkspace);
//# sourceMappingURL=SettingWorkspace.js.map