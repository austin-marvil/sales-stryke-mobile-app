"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentQuery = void 0;
const ClassFor_1 = require("../../../../data/ClassFor");
const JsonApiRecordBase_1 = require("../../../../jsonApi/JsonApiRecordBase");
const HashCodeUtil_1 = require("../../../../utils/HashCodeUtil");
class EntityAttributes {
    constructor() {
        this._documentModifiedDateFromIsMutated = "_documentModifiedDateFromIsMutated";
        this._documentModifiedDateIsMutated = "_documentModifiedDateIsMutated";
        this._documentModifiedDateToIsMutated = "_documentModifiedDateToIsMutated";
        this._dsrSyncDateFromIsMutated = "_dsrSyncDateFromIsMutated";
        this._dsrSyncDateIsMutated = "_dsrSyncDateIsMutated";
        this._dsrSyncDateToIsMutated = "_dsrSyncDateToIsMutated";
        this._filterTitleIsMutated = "_filterTitleIsMutated";
        this._limitIsMutated = "_limitIsMutated";
        this._pageIsMutated = "_pageIsMutated";
        this._pandaDocModifiedDateFromIsMutated = "_pandaDocModifiedDateFromIsMutated";
        this._pandaDocModifiedDateIsMutated = "_pandaDocModifiedDateIsMutated";
        this._pandaDocModifiedDateToIsMutated = "_pandaDocModifiedDateToIsMutated";
        this._routingSoftwareCustomerIdIsMutated = "_routingSoftwareCustomerIdIsMutated";
        this._skipIsMutated = "_skipIsMutated";
        this._sortIsMutated = "_sortIsMutated";
        this.documentModifiedDate = "documentModifiedDate";
        this.documentModifiedDateFrom = "documentModifiedDateFrom";
        this.documentModifiedDateTo = "documentModifiedDateTo";
        this.dsrSyncDate = "dsrSyncDate";
        this.dsrSyncDateFrom = "dsrSyncDateFrom";
        this.dsrSyncDateTo = "dsrSyncDateTo";
        this.filterTitle = "filterTitle";
        this.limit = "limit";
        this.page = "page";
        this.pandaDocIds = "pandaDocIds";
        this.pandaDocModifiedDate = "pandaDocModifiedDate";
        this.pandaDocModifiedDateFrom = "pandaDocModifiedDateFrom";
        this.pandaDocModifiedDateTo = "pandaDocModifiedDateTo";
        this.pandaDocStatuses = "pandaDocStatuses";
        this.routingSoftwareCustomerId = "routingSoftwareCustomerId";
        this.routingSoftwareSyncStatuses = "routingSoftwareSyncStatuses";
        this.skip = "skip";
        this.sort = "sort";
        this.workspace = "workspace";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._documentModifiedDateFromIsMutated = "_documentModifiedDateFromIsMutated";
        this._documentModifiedDateIsMutated = "_documentModifiedDateIsMutated";
        this._documentModifiedDateToIsMutated = "_documentModifiedDateToIsMutated";
        this._dsrSyncDateFromIsMutated = "_dsrSyncDateFromIsMutated";
        this._dsrSyncDateIsMutated = "_dsrSyncDateIsMutated";
        this._dsrSyncDateToIsMutated = "_dsrSyncDateToIsMutated";
        this._filterTitleIsMutated = "_filterTitleIsMutated";
        this._limitIsMutated = "_limitIsMutated";
        this._pageIsMutated = "_pageIsMutated";
        this._pandaDocModifiedDateFromIsMutated = "_pandaDocModifiedDateFromIsMutated";
        this._pandaDocModifiedDateIsMutated = "_pandaDocModifiedDateIsMutated";
        this._pandaDocModifiedDateToIsMutated = "_pandaDocModifiedDateToIsMutated";
        this._routingSoftwareCustomerIdIsMutated = "_routingSoftwareCustomerIdIsMutated";
        this._skipIsMutated = "_skipIsMutated";
        this._sortIsMutated = "_sortIsMutated";
        this.documentModifiedDate = "documentModifiedDate";
        this.documentModifiedDateFrom = "documentModifiedDateFrom";
        this.documentModifiedDateTo = "documentModifiedDateTo";
        this.dsrSyncDate = "dsrSyncDate";
        this.dsrSyncDateFrom = "dsrSyncDateFrom";
        this.dsrSyncDateTo = "dsrSyncDateTo";
        this.filterTitle = "filterTitle";
        this.limit = "limit";
        this.page = "page";
        this.pandaDocIds = "pandaDocIds";
        this.pandaDocModifiedDate = "pandaDocModifiedDate";
        this.pandaDocModifiedDateFrom = "pandaDocModifiedDateFrom";
        this.pandaDocModifiedDateTo = "pandaDocModifiedDateTo";
        this.pandaDocStatuses = "pandaDocStatuses";
        this.routingSoftwareCustomerId = "routingSoftwareCustomerId";
        this.routingSoftwareSyncStatuses = "routingSoftwareSyncStatuses";
        this.skip = "skip";
        this.sort = "sort";
        this.workspace = "workspace";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.record.documentQuery.DocumentQuery";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class DocumentQuery extends JsonApiRecordBase_1.JsonApiRecordBase {
    constructor(p) {
        super(p);
        this._documentModifiedDateFromIsMutated = false;
        this._documentModifiedDateIsMutated = false;
        this._documentModifiedDateToIsMutated = false;
        this._dsrSyncDateFromIsMutated = false;
        this._dsrSyncDateIsMutated = false;
        this._dsrSyncDateToIsMutated = false;
        this._filterTitleIsMutated = false;
        this._limitIsMutated = false;
        this._pageIsMutated = false;
        this._pandaDocModifiedDateFromIsMutated = false;
        this._pandaDocModifiedDateIsMutated = false;
        this._pandaDocModifiedDateToIsMutated = false;
        this._routingSoftwareCustomerIdIsMutated = false;
        this._skipIsMutated = false;
        this._sortIsMutated = false;
        this.documentModifiedDate = null;
        this.documentModifiedDateFrom = null;
        this.documentModifiedDateTo = null;
        this.dsrSyncDate = null;
        this.dsrSyncDateFrom = null;
        this.dsrSyncDateTo = null;
        this.filterTitle = null;
        this.limit = 0;
        this.page = 0;
        this.pandaDocIds = new Array();
        this.pandaDocModifiedDate = null;
        this.pandaDocModifiedDateFrom = null;
        this.pandaDocModifiedDateTo = null;
        this.pandaDocStatuses = new Array();
        this.routingSoftwareCustomerId = null;
        this.routingSoftwareSyncStatuses = new Array();
        this.skip = 0;
        this.sort = null;
        this.workspace = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.record.documentQuery.DocumentQuery");
    }
    /**
     * pandaDocId of the documentQuery
     */
    addPandaDocId(pandaDocId) {
        this.pandaDocIds.push(pandaDocId);
        return (this);
    }
    /**
     * pandaDocStatus of the documentQuery
     */
    addPandaDocStatus(pandaDocStatus) {
        this.pandaDocStatuses.push(pandaDocStatus);
        return (this);
    }
    /**
     * routingSoftwareSyncStatus of the documentQuery
     */
    addRoutingSoftwareSyncStatus(routingSoftwareSyncStatus) {
        this.routingSoftwareSyncStatuses.push(routingSoftwareSyncStatus);
        return (this);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDocumentModifiedDateFromMutated() {
        return (this._documentModifiedDateFromIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDocumentModifiedDateMutated() {
        return (this._documentModifiedDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDocumentModifiedDateToMutated() {
        return (this._documentModifiedDateToIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDsrSyncDateFromMutated() {
        return (this._dsrSyncDateFromIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDsrSyncDateMutated() {
        return (this._dsrSyncDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsDsrSyncDateToMutated() {
        return (this._dsrSyncDateToIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsFilterTitleMutated() {
        return (this._filterTitleIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsLimitMutated() {
        return (this._limitIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPageMutated() {
        return (this._pageIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocModifiedDateFromMutated() {
        return (this._pandaDocModifiedDateFromIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocModifiedDateMutated() {
        return (this._pandaDocModifiedDateIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPandaDocModifiedDateToMutated() {
        return (this._pandaDocModifiedDateToIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsRoutingSoftwareCustomerIdMutated() {
        return (this._routingSoftwareCustomerIdIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSkipMutated() {
        return (this._skipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSortMutated() {
        return (this._sortIsMutated);
    }
    /**
     * documentModifiedDate of the documentQuery
     * @returns Date | null
     */
    getDocumentModifiedDate() {
        return (this.documentModifiedDate);
    }
    /**
     * documentModifiedDateFrom of the documentQuery
     * @returns Date | null
     */
    getDocumentModifiedDateFrom() {
        return (this.documentModifiedDateFrom);
    }
    /**
     * documentModifiedDateTo of the documentQuery
     * @returns Date | null
     */
    getDocumentModifiedDateTo() {
        return (this.documentModifiedDateTo);
    }
    /**
     * dsrSyncDate of the documentQuery
     * @returns Date | null
     */
    getDsrSyncDate() {
        return (this.dsrSyncDate);
    }
    /**
     * dsrSyncDateFrom of the documentQuery
     * @returns Date | null
     */
    getDsrSyncDateFrom() {
        return (this.dsrSyncDateFrom);
    }
    /**
     * dsrSyncDateTo of the documentQuery
     * @returns Date | null
     */
    getDsrSyncDateTo() {
        return (this.dsrSyncDateTo);
    }
    /**
     * filterTitle of the documentQuery
     * @returns string | null
     */
    getFilterTitle() {
        return (this.filterTitle);
    }
    /**
     * limit of the documentQuery
     * @returns number
     */
    getLimit() {
        return (this.limit);
    }
    /**
     * page of the documentQuery
     * @returns number
     */
    getPage() {
        return (this.page);
    }
    /**
     * pandaDocId of the documentQuery
     * @returns Array<DocumentQueryString>
     */
    getPandaDocIds() {
        return (this.pandaDocIds);
    }
    /**
     * pandaDocModifiedDate of the documentQuery
     * @returns Date | null
     */
    getPandaDocModifiedDate() {
        return (this.pandaDocModifiedDate);
    }
    /**
     * pandaDocModifiedDateFrom of the documentQuery
     * @returns Date | null
     */
    getPandaDocModifiedDateFrom() {
        return (this.pandaDocModifiedDateFrom);
    }
    /**
     * pandaDocModifiedDateTo of the documentQuery
     * @returns Date | null
     */
    getPandaDocModifiedDateTo() {
        return (this.pandaDocModifiedDateTo);
    }
    /**
     * pandaDocStatus of the documentQuery
     * @returns Array<DocumentQueryInteger>
     */
    getPandaDocStatuses() {
        return (this.pandaDocStatuses);
    }
    /**
     * routingSoftwareCustomerId of the documentQuery
     * @returns string | null
     */
    getRoutingSoftwareCustomerId() {
        return (this.routingSoftwareCustomerId);
    }
    /**
     * routingSoftwareSyncStatus of the documentQuery
     * @returns Array<DocumentQueryInteger>
     */
    getRoutingSoftwareSyncStatuses() {
        return (this.routingSoftwareSyncStatuses);
    }
    /**
     * skip of the documentQuery
     * @returns number
     */
    getSkip() {
        return (this.skip);
    }
    /**
     * sort of the documentQuery
     * @returns string | null
     */
    getSort() {
        return (this.sort);
    }
    /**
     * workspace of the documentQuery
     * @returns Workspace | null
     */
    getWorkspace() {
        return (this.workspace);
    }
    /**
* ```
     *
* ```
     */
    _setIsDocumentModifiedDateFromMutated(_documentModifiedDateFromIsMutated) {
        this._documentModifiedDateFromIsMutated = _documentModifiedDateFromIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDocumentModifiedDateMutated(_documentModifiedDateIsMutated) {
        this._documentModifiedDateIsMutated = _documentModifiedDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDocumentModifiedDateToMutated(_documentModifiedDateToIsMutated) {
        this._documentModifiedDateToIsMutated = _documentModifiedDateToIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDsrSyncDateFromMutated(_dsrSyncDateFromIsMutated) {
        this._dsrSyncDateFromIsMutated = _dsrSyncDateFromIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDsrSyncDateMutated(_dsrSyncDateIsMutated) {
        this._dsrSyncDateIsMutated = _dsrSyncDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsDsrSyncDateToMutated(_dsrSyncDateToIsMutated) {
        this._dsrSyncDateToIsMutated = _dsrSyncDateToIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsFilterTitleMutated(_filterTitleIsMutated) {
        this._filterTitleIsMutated = _filterTitleIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsLimitMutated(_limitIsMutated) {
        this._limitIsMutated = _limitIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPageMutated(_pageIsMutated) {
        this._pageIsMutated = _pageIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocModifiedDateFromMutated(_pandaDocModifiedDateFromIsMutated) {
        this._pandaDocModifiedDateFromIsMutated = _pandaDocModifiedDateFromIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocModifiedDateMutated(_pandaDocModifiedDateIsMutated) {
        this._pandaDocModifiedDateIsMutated = _pandaDocModifiedDateIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPandaDocModifiedDateToMutated(_pandaDocModifiedDateToIsMutated) {
        this._pandaDocModifiedDateToIsMutated = _pandaDocModifiedDateToIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsRoutingSoftwareCustomerIdMutated(_routingSoftwareCustomerIdIsMutated) {
        this._routingSoftwareCustomerIdIsMutated = _routingSoftwareCustomerIdIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSkipMutated(_skipIsMutated) {
        this._skipIsMutated = _skipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSortMutated(_sortIsMutated) {
        this._sortIsMutated = _sortIsMutated;
        return (this);
    }
    /**
* ```
     * documentModifiedDate of the documentQuery
* ```
     */
    setDocumentModifiedDate(documentModifiedDate) {
        if (this.documentModifiedDate !== documentModifiedDate) {
            this._setIsDocumentModifiedDateMutated(true);
        }
        this.documentModifiedDate = documentModifiedDate;
        return (this);
    }
    /**
* ```
     * documentModifiedDateFrom of the documentQuery
* ```
     */
    setDocumentModifiedDateFrom(documentModifiedDateFrom) {
        if (this.documentModifiedDateFrom !== documentModifiedDateFrom) {
            this._setIsDocumentModifiedDateFromMutated(true);
        }
        this.documentModifiedDateFrom = documentModifiedDateFrom;
        return (this);
    }
    /**
* ```
     * documentModifiedDateTo of the documentQuery
* ```
     */
    setDocumentModifiedDateTo(documentModifiedDateTo) {
        if (this.documentModifiedDateTo !== documentModifiedDateTo) {
            this._setIsDocumentModifiedDateToMutated(true);
        }
        this.documentModifiedDateTo = documentModifiedDateTo;
        return (this);
    }
    /**
* ```
     * dsrSyncDate of the documentQuery
* ```
     */
    setDsrSyncDate(dsrSyncDate) {
        if (this.dsrSyncDate !== dsrSyncDate) {
            this._setIsDsrSyncDateMutated(true);
        }
        this.dsrSyncDate = dsrSyncDate;
        return (this);
    }
    /**
* ```
     * dsrSyncDateFrom of the documentQuery
* ```
     */
    setDsrSyncDateFrom(dsrSyncDateFrom) {
        if (this.dsrSyncDateFrom !== dsrSyncDateFrom) {
            this._setIsDsrSyncDateFromMutated(true);
        }
        this.dsrSyncDateFrom = dsrSyncDateFrom;
        return (this);
    }
    /**
* ```
     * dsrSyncDateTo of the documentQuery
* ```
     */
    setDsrSyncDateTo(dsrSyncDateTo) {
        if (this.dsrSyncDateTo !== dsrSyncDateTo) {
            this._setIsDsrSyncDateToMutated(true);
        }
        this.dsrSyncDateTo = dsrSyncDateTo;
        return (this);
    }
    /**
* ```
     * filterTitle of the documentQuery
* ```
     */
    setFilterTitle(filterTitle) {
        if (this.filterTitle !== filterTitle) {
            this._setIsFilterTitleMutated(true);
        }
        this.filterTitle = filterTitle;
        return (this);
    }
    /**
* ```
     * limit of the documentQuery
* ```
     */
    setLimit(limit) {
        if (this.limit !== limit) {
            this._setIsLimitMutated(true);
        }
        this.limit = limit;
        return (this);
    }
    /**
* ```
     * page of the documentQuery
* ```
     */
    setPage(page) {
        if (this.page !== page) {
            this._setIsPageMutated(true);
        }
        this.page = page;
        return (this);
    }
    /**
* ```
     * pandaDocId of the documentQuery
* ```
     */
    setPandaDocIds(pandaDocIds) {
        this.pandaDocIds = pandaDocIds;
        return (this);
    }
    /**
* ```
     * pandaDocModifiedDate of the documentQuery
* ```
     */
    setPandaDocModifiedDate(pandaDocModifiedDate) {
        if (this.pandaDocModifiedDate !== pandaDocModifiedDate) {
            this._setIsPandaDocModifiedDateMutated(true);
        }
        this.pandaDocModifiedDate = pandaDocModifiedDate;
        return (this);
    }
    /**
* ```
     * pandaDocModifiedDateFrom of the documentQuery
* ```
     */
    setPandaDocModifiedDateFrom(pandaDocModifiedDateFrom) {
        if (this.pandaDocModifiedDateFrom !== pandaDocModifiedDateFrom) {
            this._setIsPandaDocModifiedDateFromMutated(true);
        }
        this.pandaDocModifiedDateFrom = pandaDocModifiedDateFrom;
        return (this);
    }
    /**
* ```
     * pandaDocModifiedDateTo of the documentQuery
* ```
     */
    setPandaDocModifiedDateTo(pandaDocModifiedDateTo) {
        if (this.pandaDocModifiedDateTo !== pandaDocModifiedDateTo) {
            this._setIsPandaDocModifiedDateToMutated(true);
        }
        this.pandaDocModifiedDateTo = pandaDocModifiedDateTo;
        return (this);
    }
    /**
* ```
     * pandaDocStatus of the documentQuery
* ```
     */
    setPandaDocStatuses(pandaDocStatuses) {
        this.pandaDocStatuses = pandaDocStatuses;
        return (this);
    }
    /**
* ```
     * routingSoftwareCustomerId of the documentQuery
* ```
     */
    setRoutingSoftwareCustomerId(routingSoftwareCustomerId) {
        if (this.routingSoftwareCustomerId !== routingSoftwareCustomerId) {
            this._setIsRoutingSoftwareCustomerIdMutated(true);
        }
        this.routingSoftwareCustomerId = routingSoftwareCustomerId;
        return (this);
    }
    /**
* ```
     * routingSoftwareSyncStatus of the documentQuery
* ```
     */
    setRoutingSoftwareSyncStatuses(routingSoftwareSyncStatuses) {
        this.routingSoftwareSyncStatuses = routingSoftwareSyncStatuses;
        return (this);
    }
    /**
* ```
     * skip of the documentQuery
* ```
     */
    setSkip(skip) {
        if (this.skip !== skip) {
            this._setIsSkipMutated(true);
        }
        this.skip = skip;
        return (this);
    }
    /**
* ```
     * sort of the documentQuery
* ```
     */
    setSort(sort) {
        if (this.sort !== sort) {
            this._setIsSortMutated(true);
        }
        this.sort = sort;
        return (this);
    }
    /**
* ```
     * workspace of the documentQuery
* ```
     */
    setWorkspace(workspace) {
        this.workspace = workspace;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'documentModifiedDate',
            value: this.documentModifiedDate
        });
        this._setCurrentState2({
            attributeName: 'documentModifiedDateFrom',
            value: this.documentModifiedDateFrom
        });
        this._setCurrentState2({
            attributeName: 'documentModifiedDateTo',
            value: this.documentModifiedDateTo
        });
        this._setCurrentState2({
            attributeName: 'dsrSyncDate',
            value: this.dsrSyncDate
        });
        this._setCurrentState2({
            attributeName: 'dsrSyncDateFrom',
            value: this.dsrSyncDateFrom
        });
        this._setCurrentState2({
            attributeName: 'dsrSyncDateTo',
            value: this.dsrSyncDateTo
        });
        this._setCurrentState2({
            attributeName: 'filterTitle',
            value: this.filterTitle
        });
        this._setCurrentState2({
            attributeName: 'limit',
            value: this.limit
        });
        this._setCurrentState2({
            attributeName: 'page',
            value: this.page
        });
        this._setCurrentState2({
            attributeName: 'pandaDocIds',
            value: this.pandaDocIds
        });
        this._setCurrentState2({
            attributeName: 'pandaDocModifiedDate',
            value: this.pandaDocModifiedDate
        });
        this._setCurrentState2({
            attributeName: 'pandaDocModifiedDateFrom',
            value: this.pandaDocModifiedDateFrom
        });
        this._setCurrentState2({
            attributeName: 'pandaDocModifiedDateTo',
            value: this.pandaDocModifiedDateTo
        });
        this._setCurrentState2({
            attributeName: 'pandaDocStatuses',
            value: this.pandaDocStatuses
        });
        this._setCurrentState2({
            attributeName: 'routingSoftwareCustomerId',
            value: this.routingSoftwareCustomerId
        });
        this._setCurrentState2({
            attributeName: 'routingSoftwareSyncStatuses',
            value: this.routingSoftwareSyncStatuses
        });
        this._setCurrentState2({
            attributeName: 'skip',
            value: this.skip
        });
        this._setCurrentState2({
            attributeName: 'sort',
            value: this.sort
        });
        this._setCurrentState2({
            attributeName: 'workspace',
            value: this.workspace
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'documentModifiedDate',
            value: this.documentModifiedDate
        });
        this._setInitializedState2({
            attributeName: 'documentModifiedDateFrom',
            value: this.documentModifiedDateFrom
        });
        this._setInitializedState2({
            attributeName: 'documentModifiedDateTo',
            value: this.documentModifiedDateTo
        });
        this._setInitializedState2({
            attributeName: 'dsrSyncDate',
            value: this.dsrSyncDate
        });
        this._setInitializedState2({
            attributeName: 'dsrSyncDateFrom',
            value: this.dsrSyncDateFrom
        });
        this._setInitializedState2({
            attributeName: 'dsrSyncDateTo',
            value: this.dsrSyncDateTo
        });
        this._setInitializedState2({
            attributeName: 'filterTitle',
            value: this.filterTitle
        });
        this._setInitializedState2({
            attributeName: 'limit',
            value: this.limit
        });
        this._setInitializedState2({
            attributeName: 'page',
            value: this.page
        });
        this._setInitializedState2({
            attributeName: 'pandaDocIds',
            value: this.pandaDocIds
        });
        this._setInitializedState2({
            attributeName: 'pandaDocModifiedDate',
            value: this.pandaDocModifiedDate
        });
        this._setInitializedState2({
            attributeName: 'pandaDocModifiedDateFrom',
            value: this.pandaDocModifiedDateFrom
        });
        this._setInitializedState2({
            attributeName: 'pandaDocModifiedDateTo',
            value: this.pandaDocModifiedDateTo
        });
        this._setInitializedState2({
            attributeName: 'pandaDocStatuses',
            value: this.pandaDocStatuses
        });
        this._setInitializedState2({
            attributeName: 'routingSoftwareCustomerId',
            value: this.routingSoftwareCustomerId
        });
        this._setInitializedState2({
            attributeName: 'routingSoftwareSyncStatuses',
            value: this.routingSoftwareSyncStatuses
        });
        this._setInitializedState2({
            attributeName: 'skip',
            value: this.skip
        });
        this._setInitializedState2({
            attributeName: 'sort',
            value: this.sort
        });
        this._setInitializedState2({
            attributeName: 'workspace',
            value: this.workspace
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.documentModifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.documentModifiedDateFrom);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.documentModifiedDateTo);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.dsrSyncDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.dsrSyncDateFrom);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.dsrSyncDateTo);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.filterTitle);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.limit);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.page);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocIds);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocModifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocModifiedDateFrom);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocModifiedDateTo);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.pandaDocStatuses);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.routingSoftwareCustomerId);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.routingSoftwareSyncStatuses);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.skip);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.sort);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.workspace);
        return (hashCode_n);
    }
}
exports.DocumentQuery = DocumentQuery;
DocumentQuery.metaDataForDocumentQuery = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.record.documentQuery.DocumentQuery", DocumentQuery);
//# sourceMappingURL=DocumentQuery.js.map