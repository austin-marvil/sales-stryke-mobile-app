/**
 * This file is auto generated DO NOT EDIT.
 */
import { JsonApiRecordBase } from '../../../jsonApi/JsonApiRecordBase';
declare class EntityAttributes {
    _firstNameIsMutated: string;
    _isValidIsMutated: string;
    _jwtTokenIsMutated: string;
    _lastNameIsMutated: string;
    _loginIsMutated: string;
    _passwordIsMutated: string;
    firstName: string;
    isValid: string;
    jwtToken: string;
    lastName: string;
    login: string;
    password: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _firstNameIsMutated: string;
    _isValidIsMutated: string;
    _jwtTokenIsMutated: string;
    _lastNameIsMutated: string;
    _loginIsMutated: string;
    _passwordIsMutated: string;
    firstName: string;
    isValid: string;
    jwtToken: string;
    lastName: string;
    login: string;
    password: string;
}
declare class MetaData {
    namespace: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class Authentication extends JsonApiRecordBase {
    static metaDataForAuthentication: MetaData;
    private _firstNameIsMutated;
    private _isValidIsMutated;
    private _jwtTokenIsMutated;
    private _lastNameIsMutated;
    private _loginIsMutated;
    private _passwordIsMutated;
    private firstName;
    private isValid;
    private jwtToken;
    private lastName;
    private login;
    private password;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): Authentication;
    getClassName(): string;
    /**
     *
     * @returns boolean
     */
    _getIsFirstNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsValidMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsJwtTokenMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsLastNameMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsLoginMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsPasswordMutated(): boolean;
    /**
     * The user first name for Authentication
     * @returns string | null
     */
    getFirstName(): string | null;
    /**
     * Indicates if authenication was successful or not. Is true if successful.
     * @returns boolean
     */
    getIsValid(): boolean;
    /**
     * The jwtToken for Authentication
     * @returns string | null
     */
    getJwtToken(): string | null;
    /**
     * The user last name for Authentication
     * @returns string | null
     */
    getLastName(): string | null;
    /**
     * The user login for Authentication
     * @returns string | null
     */
    getLogin(): string | null;
    /**
     * The user password for Authentication
     * @returns string | null
     */
    getPassword(): string | null;
    /**
* ```
     *
* ```
     */
    _setIsFirstNameMutated(_firstNameIsMutated: boolean): Authentication;
    /**
* ```
     *
* ```
     */
    _setIsValidMutated(_isValidIsMutated: boolean): Authentication;
    /**
* ```
     *
* ```
     */
    _setIsJwtTokenMutated(_jwtTokenIsMutated: boolean): Authentication;
    /**
* ```
     *
* ```
     */
    _setIsLastNameMutated(_lastNameIsMutated: boolean): Authentication;
    /**
* ```
     *
* ```
     */
    _setIsLoginMutated(_loginIsMutated: boolean): Authentication;
    /**
* ```
     *
* ```
     */
    _setIsPasswordMutated(_passwordIsMutated: boolean): Authentication;
    /**
* ```
     * The user first name for Authentication
* ```
     */
    setFirstName(firstName: string | null): Authentication;
    /**
* ```
     * Indicates if authenication was successful or not. Is true if successful.
* ```
     */
    setIsValid(isValid: boolean): Authentication;
    /**
* ```
     * The jwtToken for Authentication
* ```
     */
    setJwtToken(jwtToken: string | null): Authentication;
    /**
* ```
     * The user last name for Authentication
* ```
     */
    setLastName(lastName: string | null): Authentication;
    /**
* ```
     * The user login for Authentication
* ```
     */
    setLogin(login: string | null): Authentication;
    /**
* ```
     * The user password for Authentication
* ```
     */
    setPassword(password: string | null): Authentication;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
