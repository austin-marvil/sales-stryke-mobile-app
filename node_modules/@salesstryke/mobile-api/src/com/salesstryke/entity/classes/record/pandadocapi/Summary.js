"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Summary = void 0;
const ClassFor_1 = require("../../../../data/ClassFor");
const JsonApiRecordBase_1 = require("../../../../jsonApi/JsonApiRecordBase");
const HashCodeUtil_1 = require("../../../../utils/HashCodeUtil");
class EntityAttributes {
    constructor() {
        this._discountIsMutated = "_discountIsMutated";
        this._subtotalIsMutated = "_subtotalIsMutated";
        this._taxIsMutated = "_taxIsMutated";
        this._totalIsMutated = "_totalIsMutated";
        this.discount = "discount";
        this.subtotal = "subtotal";
        this.tax = "tax";
        this.total = "total";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._discountIsMutated = "_discountIsMutated";
        this._subtotalIsMutated = "_subtotalIsMutated";
        this._taxIsMutated = "_taxIsMutated";
        this._totalIsMutated = "_totalIsMutated";
        this.discount = "discount";
        this.subtotal = "subtotal";
        this.tax = "tax";
        this.total = "total";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.record.pandadocapi.Summary";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class Summary extends JsonApiRecordBase_1.JsonApiRecordBase {
    constructor(p) {
        super(p);
        this._discountIsMutated = false;
        this._subtotalIsMutated = false;
        this._taxIsMutated = false;
        this._totalIsMutated = false;
        this.discount = 0;
        this.subtotal = 0;
        this.tax = 0;
        this.total = 0;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.record.pandadocapi.Summary");
    }
    /**
     *
     * @returns boolean
     */
    _getIsDiscountMutated() {
        return (this._discountIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSubtotalMutated() {
        return (this._subtotalIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsTaxMutated() {
        return (this._taxIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsTotalMutated() {
        return (this._totalIsMutated);
    }
    /**
     * The summary discount.
     * @returns number
     */
    getDiscount() {
        return (this.discount);
    }
    /**
     * The summary subtotal.
     * @returns number
     */
    getSubtotal() {
        return (this.subtotal);
    }
    /**
     * The summary tax.
     * @returns number
     */
    getTax() {
        return (this.tax);
    }
    /**
     * The summary discount.
     * @returns number
     */
    getTotal() {
        return (this.total);
    }
    /**
* ```
     *
* ```
     */
    _setIsDiscountMutated(_discountIsMutated) {
        this._discountIsMutated = _discountIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSubtotalMutated(_subtotalIsMutated) {
        this._subtotalIsMutated = _subtotalIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsTaxMutated(_taxIsMutated) {
        this._taxIsMutated = _taxIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsTotalMutated(_totalIsMutated) {
        this._totalIsMutated = _totalIsMutated;
        return (this);
    }
    /**
* ```
     * The summary discount.
* ```
     */
    setDiscount(discount) {
        if (this.discount !== discount) {
            this._setIsDiscountMutated(true);
        }
        this.discount = discount;
        return (this);
    }
    /**
* ```
     * The summary subtotal.
* ```
     */
    setSubtotal(subtotal) {
        if (this.subtotal !== subtotal) {
            this._setIsSubtotalMutated(true);
        }
        this.subtotal = subtotal;
        return (this);
    }
    /**
* ```
     * The summary tax.
* ```
     */
    setTax(tax) {
        if (this.tax !== tax) {
            this._setIsTaxMutated(true);
        }
        this.tax = tax;
        return (this);
    }
    /**
* ```
     * The summary discount.
* ```
     */
    setTotal(total) {
        if (this.total !== total) {
            this._setIsTotalMutated(true);
        }
        this.total = total;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'discount',
            value: this.discount
        });
        this._setCurrentState2({
            attributeName: 'subtotal',
            value: this.subtotal
        });
        this._setCurrentState2({
            attributeName: 'tax',
            value: this.tax
        });
        this._setCurrentState2({
            attributeName: 'total',
            value: this.total
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'discount',
            value: this.discount
        });
        this._setInitializedState2({
            attributeName: 'subtotal',
            value: this.subtotal
        });
        this._setInitializedState2({
            attributeName: 'tax',
            value: this.tax
        });
        this._setInitializedState2({
            attributeName: 'total',
            value: this.total
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.discount);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.subtotal);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.tax);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.total);
        return (hashCode_n);
    }
}
exports.Summary = Summary;
Summary.metaDataForSummary = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.record.pandadocapi.Summary", Summary);
//# sourceMappingURL=Summary.js.map