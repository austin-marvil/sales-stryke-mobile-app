"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormContainer = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiRecordBase_1 = require("../../../jsonApi/JsonApiRecordBase");
class EntityAttributes {
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.record.FormContainer";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class FormContainer extends JsonApiRecordBase_1.JsonApiRecordBase {
    constructor(p) {
        super(p);
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.record.FormContainer");
    }
    _getIsMutated() {
        let isMutated = false;
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        return (hashCode_n);
    }
}
exports.FormContainer = FormContainer;
FormContainer.metaDataForFormContainer = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.record.FormContainer", FormContainer);
//# sourceMappingURL=FormContainer.js.map