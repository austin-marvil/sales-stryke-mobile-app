"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingIntegration = void 0;
const ClassFor_1 = require("../../../data/ClassFor");
const JsonApiPersistableBase_1 = require("../../../jsonApi/JsonApiPersistableBase");
const HashCodeUtil_1 = require("../../../utils/HashCodeUtil");
const PersistenceType_1 = require("../../../data/PersistenceType");
const PersistableUtils_1 = require("../../../data/PersistableUtils");
class EntityAttributes {
    constructor() {
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._integrationErrorEmailsIsMutated = "_integrationErrorEmailsIsMutated";
        this._integrationVersionIsMutated = "_integrationVersionIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._organizationIsMutated = "_organizationIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._settingIntegrationTypeIsMutated = "_settingIntegrationTypeIsMutated";
        this._settingTokenIsMutated = "_settingTokenIsMutated";
        this._softpakCompanyIdIsMutated = "_softpakCompanyIdIsMutated";
        this._softpakRobotApiEndpointIsMutated = "_softpakRobotApiEndpointIsMutated";
        this._softpakRobotApiLoginIsMutated = "_softpakRobotApiLoginIsMutated";
        this._softpakRobotApiPasswordIsMutated = "_softpakRobotApiPasswordIsMutated";
        this.createdDate = "createdDate";
        this.id = "id";
        this.integrationErrorEmails = "integrationErrorEmails";
        this.integrationVersion = "integrationVersion";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.settingIntegrationType = "settingIntegrationType";
        this.settingToken = "settingToken";
        this.softpakCompanyId = "softpakCompanyId";
        this.softpakRobotApiEndpoint = "softpakRobotApiEndpoint";
        this.softpakRobotApiLogin = "softpakRobotApiLogin";
        this.softpakRobotApiPassword = "softpakRobotApiPassword";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._entityState = "_entityState";
        this._idSetBySystem = "_idSetBySystem";
        this._initializedDataKey = "_initializedDataKey";
        this._initializedDataKeyIsMutated = "_initializedDataKeyIsMutated";
        this._integrationErrorEmailsIsMutated = "_integrationErrorEmailsIsMutated";
        this._integrationVersionIsMutated = "_integrationVersionIsMutated";
        this._isAddToRelationship = "_isAddToRelationship";
        this._isAddToRelationshipIsMutated = "_isAddToRelationshipIsMutated";
        this._jsonStateStr = "_jsonStateStr";
        this._organizationIsMutated = "_organizationIsMutated";
        this._relationshipPersistableType = "_relationshipPersistableType";
        this._settingIntegrationTypeIsMutated = "_settingIntegrationTypeIsMutated";
        this._settingTokenIsMutated = "_settingTokenIsMutated";
        this._softpakCompanyIdIsMutated = "_softpakCompanyIdIsMutated";
        this._softpakRobotApiEndpointIsMutated = "_softpakRobotApiEndpointIsMutated";
        this._softpakRobotApiLoginIsMutated = "_softpakRobotApiLoginIsMutated";
        this._softpakRobotApiPasswordIsMutated = "_softpakRobotApiPasswordIsMutated";
        this.createdDate = "createdDate";
        this._id = "_id";
        this.integrationErrorEmails = "integrationErrorEmails";
        this.integrationVersion = "integrationVersion";
        this.jsonType = "jsonType";
        this.modifiedDate = "modifiedDate";
        this.organization = "organization";
        this.settingIntegrationType = "settingIntegrationType";
        this.settingToken = "settingToken";
        this.softpakCompanyId = "softpakCompanyId";
        this.softpakRobotApiEndpoint = "softpakRobotApiEndpoint";
        this.softpakRobotApiLogin = "softpakRobotApiLogin";
        this.softpakRobotApiPassword = "softpakRobotApiPassword";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.persistable.SettingIntegration";
        this.mongDataModeName = "SettingIntegration";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class SettingIntegration extends JsonApiPersistableBase_1.JsonApiPersistableBase {
    constructor(p) {
        super(p);
        this._idSetBySystem = false;
        this._initializedDataKey = null;
        this._initializedDataKeyIsMutated = false;
        this._integrationErrorEmailsIsMutated = false;
        this._integrationVersionIsMutated = false;
        this._isAddToRelationship = false;
        this._isAddToRelationshipIsMutated = false;
        this._organizationIsMutated = false;
        this._settingIntegrationTypeIsMutated = false;
        this._settingTokenIsMutated = false;
        this._softpakCompanyIdIsMutated = false;
        this._softpakRobotApiEndpointIsMutated = false;
        this._softpakRobotApiLoginIsMutated = false;
        this._softpakRobotApiPasswordIsMutated = false;
        this.id = null;
        this.integrationErrorEmails = new Array();
        this.integrationVersion = null;
        this.jsonType = "com.salesstryke.entity.classes.persistable.SettingIntegration";
        this.organization = null;
        this.settingIntegrationType = null;
        this.settingToken = null;
        this.softpakCompanyId = null;
        this.softpakRobotApiEndpoint = null;
        this.softpakRobotApiLogin = null;
        this.softpakRobotApiPassword = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        this._initializedDataKeyIsMutated = false;
        this._integrationErrorEmailsIsMutated = false;
        this._integrationVersionIsMutated = false;
        this._organizationIsMutated = false;
        this._settingIntegrationTypeIsMutated = false;
        this._settingTokenIsMutated = false;
        this._softpakCompanyIdIsMutated = false;
        this._softpakRobotApiEndpointIsMutated = false;
        this._softpakRobotApiLoginIsMutated = false;
        this._softpakRobotApiPasswordIsMutated = false;
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.persistable.SettingIntegration");
    }
    /**
     * The email address to send integration error notifications to.
     *
     * Default PersistenceType : PersistenceType.ATTACH
     */
    addIntegrationErrorEmail(integrationErrorEmail, persistanceType = PersistenceType_1.PersistenceType.ATTACH) {
        if (this._getIsTrackingMutations()) {
            integrationErrorEmail._trackMutations();
        }
        integrationErrorEmail._setRelationshipPersistableType(persistanceType.getId());
        this.integrationErrorEmails.push(integrationErrorEmail);
        return (this);
    }
    /**
     * The email address to send integration error notifications to.
     * If the Entity ID is null, will not be added.
     * Default PersistenceType : PersistenceType.DETACH
     */
    removeIntegrationErrorEmail(integrationErrorEmail, persistanceType = PersistenceType_1.PersistenceType.DETACH) {
        if (this._getIsTrackingMutations()) {
            integrationErrorEmail._trackMutations();
        }
        if (persistanceType === PersistenceType_1.PersistenceType.NONE) {
            let index = this.integrationErrorEmails.findIndex(obj => obj === integrationErrorEmail);
            if (index !== -1) {
                this.integrationErrorEmails.splice(index, 1);
            }
            integrationErrorEmail._setRelationshipPersistableType(PersistenceType_1.PersistenceType.NONE.getId());
            return (this);
        }
        integrationErrorEmail._setRelationshipPersistableType(persistanceType.getId());
        this.integrationErrorEmails.push(integrationErrorEmail);
        return (this);
    }
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState() {
        //return(super._getEntityState());
        return (super._getEntityState());
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr() {
        //return(super._getEntityState());
        return (super._getJsonStateStr());
    }
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType() {
        //return(super._getEntityState());
        return (super._getRelationshipPersistableType());
    }
    /**
     *
     * @returns Date | null
     */
    getCreatedDate() {
        //return(super._getEntityState());
        return (super.getCreatedDate());
    }
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate() {
        //return(super._getEntityState());
        return (super.getModifiedDate());
    }
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem() {
        return (this._idSetBySystem);
    }
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey() {
        return (this._initializedDataKey);
    }
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated() {
        return (this._initializedDataKeyIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsIntegrationErrorEmailsMutated() {
        return (this._integrationErrorEmailsIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsIntegrationVersionMutated() {
        return (this._integrationVersionIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship() {
        return (this._isAddToRelationship);
    }
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated() {
        return (this._isAddToRelationshipIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated() {
        return (this._organizationIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSettingIntegrationTypeMutated() {
        return (this._settingIntegrationTypeIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSettingTokenMutated() {
        return (this._settingTokenIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSoftpakCompanyIdMutated() {
        return (this._softpakCompanyIdIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSoftpakRobotApiEndpointMutated() {
        return (this._softpakRobotApiEndpointIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSoftpakRobotApiLoginMutated() {
        return (this._softpakRobotApiLoginIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsSoftpakRobotApiPasswordMutated() {
        return (this._softpakRobotApiPasswordIsMutated);
    }
    /**
     *
     * @returns string | null
     */
    getId() {
        return (this.id);
    }
    /**
     * The email address to send integration error notifications to.
     * @returns Array<EmailAddress>
     */
    getIntegrationErrorEmails() {
        return (this.integrationErrorEmails);
    }
    /**
     * The version of the integration.
     * @returns string | null
     */
    getIntegrationVersion() {
        return (this.integrationVersion);
    }
    /**
     *
     * @returns string | null
     */
    getJsonType() {
        return (this.jsonType);
    }
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization() {
        return (this.organization);
    }
    /**
     * The settingIntegrationType.
     * @returns SettingIntegrationType | null
     */
    getSettingIntegrationType() {
        return (this.settingIntegrationType);
    }
    /**
     * The settingToken.
     * @returns SettingToken | null
     */
    getSettingToken() {
        return (this.settingToken);
    }
    /**
     * The softpak company ID.
     * @returns string | null
     */
    getSoftpakCompanyId() {
        return (this.softpakCompanyId);
    }
    /**
     * The softpak robot API endpoint.
     * @returns string | null
     */
    getSoftpakRobotApiEndpoint() {
        return (this.softpakRobotApiEndpoint);
    }
    /**
     * The softpak robot API login.
     * @returns string | null
     */
    getSoftpakRobotApiLogin() {
        return (this.softpakRobotApiLogin);
    }
    /**
     * The softpak robot API password.
     * @returns string | null
     */
    getSoftpakRobotApiPassword() {
        return (this.softpakRobotApiPassword);
    }
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState) {
        super._setEntityState(_entityState);
        return (this);
    }
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr) {
        super._setJsonStateStr(_jsonStateStr);
        return (this);
    }
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType) {
        super._setRelationshipPersistableType(_relationshipPersistableType);
        return (this);
    }
    /**
     *
     */
    setCreatedDate(createdDate) {
        super.setCreatedDate(createdDate);
        return (this);
    }
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate) {
        super.setModifiedDate(modifiedDate);
        return (this);
    }
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem) {
        this._idSetBySystem = _idSetBySystem;
        return (this);
    }
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey) {
        if (!this._getIsMutateSuppressed() && this._initializedDataKey !== _initializedDataKey) {
            this._setIsInitializedDataKeyMutated(true);
        }
        this._initializedDataKey = _initializedDataKey;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated) {
        this._initializedDataKeyIsMutated = _initializedDataKeyIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsIntegrationErrorEmailsMutated(_integrationErrorEmailsIsMutated) {
        this._integrationErrorEmailsIsMutated = _integrationErrorEmailsIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsIntegrationVersionMutated(_integrationVersionIsMutated) {
        this._integrationVersionIsMutated = _integrationVersionIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship) {
        if (this._isAddToRelationship !== _isAddToRelationship) {
            this._setIsAddToRelationshipMutated(true);
        }
        this._isAddToRelationship = _isAddToRelationship;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated) {
        this._isAddToRelationshipIsMutated = _isAddToRelationshipIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated) {
        this._organizationIsMutated = _organizationIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSettingIntegrationTypeMutated(_settingIntegrationTypeIsMutated) {
        this._settingIntegrationTypeIsMutated = _settingIntegrationTypeIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSettingTokenMutated(_settingTokenIsMutated) {
        this._settingTokenIsMutated = _settingTokenIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSoftpakCompanyIdMutated(_softpakCompanyIdIsMutated) {
        this._softpakCompanyIdIsMutated = _softpakCompanyIdIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSoftpakRobotApiEndpointMutated(_softpakRobotApiEndpointIsMutated) {
        this._softpakRobotApiEndpointIsMutated = _softpakRobotApiEndpointIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSoftpakRobotApiLoginMutated(_softpakRobotApiLoginIsMutated) {
        this._softpakRobotApiLoginIsMutated = _softpakRobotApiLoginIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsSoftpakRobotApiPasswordMutated(_softpakRobotApiPasswordIsMutated) {
        this._softpakRobotApiPasswordIsMutated = _softpakRobotApiPasswordIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setId(id) {
        this.id = id;
        return (this);
    }
    /**
* ```
     * The email address to send integration error notifications to.
* ```
     */
    setIntegrationErrorEmails(integrationErrorEmails) {
        if (!this._getIsMutateSuppressed() && this.integrationErrorEmails !== integrationErrorEmails) {
            this._setIsIntegrationErrorEmailsMutated(true);
        }
        this.integrationErrorEmails = integrationErrorEmails;
        return (this);
    }
    /**
* ```
     * The version of the integration.
* ```
     */
    setIntegrationVersion(integrationVersion) {
        if (!this._getIsMutateSuppressed() && this.integrationVersion !== integrationVersion) {
            this._setIsIntegrationVersionMutated(true);
        }
        this.integrationVersion = integrationVersion;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType) {
        this.jsonType = jsonType;
        return (this);
    }
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.organization !== organization) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(organization, persistanceType);
            this._setIsOrganizationMutated(true);
        }
        this.organization = organization;
        return (this);
    }
    /**
* ```
     * The settingIntegrationType.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setSettingIntegrationType(settingIntegrationType, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.settingIntegrationType !== settingIntegrationType) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(settingIntegrationType, persistanceType);
            this._setIsSettingIntegrationTypeMutated(true);
        }
        this.settingIntegrationType = settingIntegrationType;
        return (this);
    }
    /**
* ```
     * The settingToken.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setSettingToken(settingToken, persistanceType) {
        if (!this._getIsMutateSuppressed() && this.settingToken !== settingToken) {
            PersistableUtils_1.PersistableUtils.mongoRefSetter(settingToken, persistanceType);
            this._setIsSettingTokenMutated(true);
        }
        this.settingToken = settingToken;
        return (this);
    }
    /**
* ```
     * The softpak company ID.
* ```
     */
    setSoftpakCompanyId(softpakCompanyId) {
        if (!this._getIsMutateSuppressed() && this.softpakCompanyId !== softpakCompanyId) {
            this._setIsSoftpakCompanyIdMutated(true);
        }
        this.softpakCompanyId = softpakCompanyId;
        return (this);
    }
    /**
* ```
     * The softpak robot API endpoint.
* ```
     */
    setSoftpakRobotApiEndpoint(softpakRobotApiEndpoint) {
        if (!this._getIsMutateSuppressed() && this.softpakRobotApiEndpoint !== softpakRobotApiEndpoint) {
            this._setIsSoftpakRobotApiEndpointMutated(true);
        }
        this.softpakRobotApiEndpoint = softpakRobotApiEndpoint;
        return (this);
    }
    /**
* ```
     * The softpak robot API login.
* ```
     */
    setSoftpakRobotApiLogin(softpakRobotApiLogin) {
        if (!this._getIsMutateSuppressed() && this.softpakRobotApiLogin !== softpakRobotApiLogin) {
            this._setIsSoftpakRobotApiLoginMutated(true);
        }
        this.softpakRobotApiLogin = softpakRobotApiLogin;
        return (this);
    }
    /**
* ```
     * The softpak robot API password.
* ```
     */
    setSoftpakRobotApiPassword(softpakRobotApiPassword) {
        if (!this._getIsMutateSuppressed() && this.softpakRobotApiPassword !== softpakRobotApiPassword) {
            this._setIsSoftpakRobotApiPasswordMutated(true);
        }
        this.softpakRobotApiPassword = softpakRobotApiPassword;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setCurrentState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setCurrentState2({
            attributeName: 'id',
            value: this.id
        });
        this._setCurrentState2({
            attributeName: 'integrationErrorEmails',
            value: this.integrationErrorEmails
        });
        this._setCurrentState2({
            attributeName: 'integrationVersion',
            value: this.integrationVersion
        });
        this._setCurrentState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setCurrentState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setCurrentState2({
            attributeName: 'settingIntegrationType',
            value: this.settingIntegrationType
        });
        this._setCurrentState2({
            attributeName: 'settingToken',
            value: this.settingToken
        });
        this._setCurrentState2({
            attributeName: 'softpakCompanyId',
            value: this.softpakCompanyId
        });
        this._setCurrentState2({
            attributeName: 'softpakRobotApiEndpoint',
            value: this.softpakRobotApiEndpoint
        });
        this._setCurrentState2({
            attributeName: 'softpakRobotApiLogin',
            value: this.softpakRobotApiLogin
        });
        this._setCurrentState2({
            attributeName: 'softpakRobotApiPassword',
            value: this.softpakRobotApiPassword
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: '_relationshipPersistableType',
            value: this._relationshipPersistableType
        });
        this._setInitializedState2({
            attributeName: 'createdDate',
            value: this.createdDate
        });
        this._setInitializedState2({
            attributeName: 'id',
            value: this.id
        });
        this._setInitializedState2({
            attributeName: 'integrationErrorEmails',
            value: this.integrationErrorEmails
        });
        this._setInitializedState2({
            attributeName: 'integrationVersion',
            value: this.integrationVersion
        });
        this._setInitializedState2({
            attributeName: 'modifiedDate',
            value: this.modifiedDate
        });
        this._setInitializedState2({
            attributeName: 'organization',
            value: this.organization
        });
        this._setInitializedState2({
            attributeName: 'settingIntegrationType',
            value: this.settingIntegrationType
        });
        this._setInitializedState2({
            attributeName: 'settingToken',
            value: this.settingToken
        });
        this._setInitializedState2({
            attributeName: 'softpakCompanyId',
            value: this.softpakCompanyId
        });
        this._setInitializedState2({
            attributeName: 'softpakRobotApiEndpoint',
            value: this.softpakRobotApiEndpoint
        });
        this._setInitializedState2({
            attributeName: 'softpakRobotApiLogin',
            value: this.softpakRobotApiLogin
        });
        this._setInitializedState2({
            attributeName: 'softpakRobotApiPassword',
            value: this.softpakRobotApiPassword
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.createdDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.id);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.integrationErrorEmails);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.integrationVersion);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.modifiedDate);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.organization);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.settingIntegrationType);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.settingToken);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.softpakCompanyId);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.softpakRobotApiEndpoint);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.softpakRobotApiLogin);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.softpakRobotApiPassword);
        return (hashCode_n);
    }
}
exports.SettingIntegration = SettingIntegration;
SettingIntegration.metaDataForSettingIntegration = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.persistable.SettingIntegration", SettingIntegration);
//# sourceMappingURL=SettingIntegration.js.map