/**
 * This file is auto generated DO NOT EDIT.
 */
import { Organization } from './Organization';
import { JsonApiPersistableBase } from '../../../jsonApi/JsonApiPersistableBase';
import { PersistenceType } from '../../../data/PersistenceType';
declare class EntityAttributes {
    _entityState: string;
    _idSetBySystem: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _isBPSEnabledIsMutated: string;
    _isCALEnabledIsMutated: string;
    _isCNSEnabledIsMutated: string;
    _isCSPEnabledIsMutated: string;
    _isDefaultIsMutated: string;
    _isDGSEnabledIsMutated: string;
    _isOSSEnabledIsMutated: string;
    _isSESEnabledIsMutated: string;
    _jsonStateStr: string;
    _logoIsMutated: string;
    _organizationIsMutated: string;
    _relationshipPersistableType: string;
    createdDate: string;
    id: string;
    isBPSEnabled: string;
    isCALEnabled: string;
    isCNSEnabled: string;
    isCSPEnabled: string;
    isDefault: string;
    isDGSEnabled: string;
    isOSSEnabled: string;
    isSESEnabled: string;
    jsonType: string;
    logo: string;
    modifiedDate: string;
    organization: string;
}
declare class MongoVirtual {
}
declare class MongoAttributes {
    virtual: MongoVirtual;
    _entityState: string;
    _idSetBySystem: string;
    _initializedDataKey: string;
    _initializedDataKeyIsMutated: string;
    _isAddToRelationship: string;
    _isAddToRelationshipIsMutated: string;
    _isBPSEnabledIsMutated: string;
    _isCALEnabledIsMutated: string;
    _isCNSEnabledIsMutated: string;
    _isCSPEnabledIsMutated: string;
    _isDefaultIsMutated: string;
    _isDGSEnabledIsMutated: string;
    _isOSSEnabledIsMutated: string;
    _isSESEnabledIsMutated: string;
    _jsonStateStr: string;
    _logoIsMutated: string;
    _organizationIsMutated: string;
    _relationshipPersistableType: string;
    createdDate: string;
    _id: string;
    isBPSEnabled: string;
    isCALEnabled: string;
    isCNSEnabled: string;
    isCSPEnabled: string;
    isDefault: string;
    isDGSEnabled: string;
    isOSSEnabled: string;
    isSESEnabled: string;
    jsonType: string;
    logo: string;
    modifiedDate: string;
    organization: string;
}
declare class MetaData {
    namespace: string;
    mongDataModeName: string;
    entityAttributes: EntityAttributes;
    mongoAttributes: MongoAttributes;
}
export declare class SettingOrganization extends JsonApiPersistableBase {
    static metaDataForSettingOrganization: MetaData;
    private _idSetBySystem;
    private _initializedDataKey;
    private _initializedDataKeyIsMutated;
    private _isAddToRelationship;
    private _isAddToRelationshipIsMutated;
    private _isBPSEnabledIsMutated;
    private _isCALEnabledIsMutated;
    private _isCNSEnabledIsMutated;
    private _isCSPEnabledIsMutated;
    private _isDefaultIsMutated;
    private _isDGSEnabledIsMutated;
    private _isOSSEnabledIsMutated;
    private _isSESEnabledIsMutated;
    private _logoIsMutated;
    private _organizationIsMutated;
    private id;
    private isBPSEnabled;
    private isCALEnabled;
    private isCNSEnabled;
    private isCSPEnabled;
    private isDefault;
    private isDGSEnabled;
    private isOSSEnabled;
    private isSESEnabled;
    private jsonType;
    private logo;
    private organization;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated(): SettingOrganization;
    getClassName(): string;
    /**
     * CREATE, DELETE, UPDATE
     * @returns string | null
     */
    _getEntityState(): string | null;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     * @returns string | null
     */
    _getJsonStateStr(): string | null;
    /**
     * A system attribute to identify the relationship persisable type.
     * @returns number
     */
    _getRelationshipPersistableType(): number;
    /**
     *
     * @returns Date | null
     */
    getCreatedDate(): Date | null;
    /**
     * The modified date of the document
     * @returns Date | null
     */
    getModifiedDate(): Date | null;
    /**
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
     * @returns boolean
     */
    _getIsIdSetBySystem(): boolean;
    /**
     * This is a key that is used to initialize data one time. Example: setting the USState information.
     * @returns string | null
     */
    _getInitializedDataKey(): string | null;
    /**
     *
     * @returns boolean
     */
    _getIsInitializedDataKeyMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationship(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsAddToRelationshipMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsBPSEnabledMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsCALEnabledMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsCNSEnabledMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsCSPEnabledMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsDefaultMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsDGSEnabledMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsOSSEnabledMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsSESEnabledMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsLogoMutated(): boolean;
    /**
     *
     * @returns boolean
     */
    _getIsOrganizationMutated(): boolean;
    /**
     *
     * @returns string | null
     */
    getId(): string | null;
    /**
     * is BPS Enabled for this organization.
     * @returns boolean
     */
    getIsBPSEnabled(): boolean;
    /**
     * is CAL Enabled for this organization.
     * @returns boolean
     */
    getIsCALEnabled(): boolean;
    /**
     * is CNS Enabled for this organization.
     * @returns boolean
     */
    getIsCNSEnabled(): boolean;
    /**
     * is CSP Enabled for this organization.
     * @returns boolean
     */
    getIsCSPEnabled(): boolean;
    /**
     * Is setting default.
     * @returns boolean
     */
    getIsDefault(): boolean;
    /**
     * is DGS Enabled for this organization.
     * @returns boolean
     */
    getIsDGSEnabled(): boolean;
    /**
     * is OSS Enabled for this organization.
     * @returns boolean
     */
    getIsOSSEnabled(): boolean;
    /**
     * is SES Enabled for this organization.
     * @returns boolean
     */
    getIsSESEnabled(): boolean;
    /**
     *
     * @returns string | null
     */
    getJsonType(): string | null;
    /**
     * Organization logo.
     * @returns string | null
     */
    getLogo(): string | null;
    /**
     * The organization.
     * @returns Organization | null
     */
    getOrganization(): Organization | null;
    /**
     * CREATE, DELETE, UPDATE
     */
    _setEntityState(_entityState: string | null): SettingOrganization;
    /**
     * Is a JSON string that passes the state of attributes from client to server, example: '{'attributes':[{'name':'userName','isMutated':true},{'name':'roles','isMutated':true}]}'
     */
    _setJsonStateStr(_jsonStateStr: string | null): SettingOrganization;
    /**
     * A system attribute to identify the relationship persisable type.
     */
    _setRelationshipPersistableType(_relationshipPersistableType: number): SettingOrganization;
    /**
     *
     */
    setCreatedDate(createdDate: Date | null): SettingOrganization;
    /**
     * The modified date of the document
     */
    setModifiedDate(modifiedDate: Date | null): SettingOrganization;
    /**
* ```
     * Indicates if the ID was set by the system and that the ID is used to create the documet.
* ```
     */
    _setIsIdSetBySystem(_idSetBySystem: boolean): SettingOrganization;
    /**
* ```
     * This is a key that is used to initialize data one time. Example: setting the USState information.
* ```
     */
    _setInitializedDataKey(_initializedDataKey: string | null): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsInitializedDataKeyMutated(_initializedDataKeyIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationship(_isAddToRelationship: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsAddToRelationshipMutated(_isAddToRelationshipIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsBPSEnabledMutated(_isBPSEnabledIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsCALEnabledMutated(_isCALEnabledIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsCNSEnabledMutated(_isCNSEnabledIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsCSPEnabledMutated(_isCSPEnabledIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsDefaultMutated(_isDefaultIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsDGSEnabledMutated(_isDGSEnabledIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsOSSEnabledMutated(_isOSSEnabledIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsSESEnabledMutated(_isSESEnabledIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsLogoMutated(_logoIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    _setIsOrganizationMutated(_organizationIsMutated: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    setId(id: string | null): SettingOrganization;
    /**
* ```
     * is BPS Enabled for this organization.
* ```
     */
    setIsBPSEnabled(isBPSEnabled: boolean): SettingOrganization;
    /**
* ```
     * is CAL Enabled for this organization.
* ```
     */
    setIsCALEnabled(isCALEnabled: boolean): SettingOrganization;
    /**
* ```
     * is CNS Enabled for this organization.
* ```
     */
    setIsCNSEnabled(isCNSEnabled: boolean): SettingOrganization;
    /**
* ```
     * is CSP Enabled for this organization.
* ```
     */
    setIsCSPEnabled(isCSPEnabled: boolean): SettingOrganization;
    /**
* ```
     * Is setting default.
* ```
     */
    setIsDefault(isDefault: boolean): SettingOrganization;
    /**
* ```
     * is DGS Enabled for this organization.
* ```
     */
    setIsDGSEnabled(isDGSEnabled: boolean): SettingOrganization;
    /**
* ```
     * is OSS Enabled for this organization.
* ```
     */
    setIsOSSEnabled(isOSSEnabled: boolean): SettingOrganization;
    /**
* ```
     * is SES Enabled for this organization.
* ```
     */
    setIsSESEnabled(isSESEnabled: boolean): SettingOrganization;
    /**
* ```
     *
* ```
     */
    setJsonType(jsonType: string | null): SettingOrganization;
    /**
* ```
     * Organization logo.
* ```
     */
    setLogo(logo: string | null): SettingOrganization;
    /**
* ```
     * The organization.
     * persistanceType?: PersistenceType   If the persistanceType is not set and the Entity.id is null or undefined, will be set to PersistenceType.CREATE.
* ```
     */
    setOrganization(organization: Organization | null, persistanceType?: PersistenceType): SettingOrganization;
    _getIsMutated(): boolean;
    _trackMutations(): this;
    getHashCode(): number;
}
export {};
