"use strict";
/**
 * This file is auto generated DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Field = void 0;
const ClassFor_1 = require("../../../../data/ClassFor");
const JsonApiRecordBase_1 = require("../../../../jsonApi/JsonApiRecordBase");
const HashCodeUtil_1 = require("../../../../utils/HashCodeUtil");
class EntityAttributes {
    constructor() {
        this._nameIsMutated = "_nameIsMutated";
        this._placeholderIsMutated = "_placeholderIsMutated";
        this._uuidIsMutated = "_uuidIsMutated";
        this._valueIsMutated = "_valueIsMutated";
        this.name = "name";
        this.placeholder = "placeholder";
        this.uuid = "uuid";
        this.value = "value";
    }
}
class MongoVirtual {
}
class MongoAttributes {
    constructor() {
        this.virtual = new MongoVirtual();
        this._nameIsMutated = "_nameIsMutated";
        this._placeholderIsMutated = "_placeholderIsMutated";
        this._uuidIsMutated = "_uuidIsMutated";
        this._valueIsMutated = "_valueIsMutated";
        this.name = "name";
        this.placeholder = "placeholder";
        this.uuid = "uuid";
        this.value = "value";
    }
}
class MetaData {
    constructor() {
        this.namespace = "com.salesstryke.entity.classes.record.pandadocapi.Field";
        this.entityAttributes = new EntityAttributes();
        this.mongoAttributes = new MongoAttributes();
    }
}
class Field extends JsonApiRecordBase_1.JsonApiRecordBase {
    constructor(p) {
        super(p);
        this._nameIsMutated = false;
        this._placeholderIsMutated = false;
        this._uuidIsMutated = false;
        this._valueIsMutated = false;
        this.name = null;
        this.placeholder = null;
        this.uuid = null;
        this.value = null;
    }
    /**
     * Sets all isMutated flags to be false
     * @returns
     */
    _clearIsMutated() {
        return (this);
    }
    getClassName() {
        return ("com.salesstryke.entity.classes.record.pandadocapi.Field");
    }
    /**
     *
     * @returns boolean
     */
    _getIsNameMutated() {
        return (this._nameIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsPlaceholderMutated() {
        return (this._placeholderIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsUuidMutated() {
        return (this._uuidIsMutated);
    }
    /**
     *
     * @returns boolean
     */
    _getIsValueMutated() {
        return (this._valueIsMutated);
    }
    /**
     * The name of the field.
     * @returns string | null
     */
    getName() {
        return (this.name);
    }
    /**
     * The placehoder of the field. The label in the UI that is displayed.
     * @returns string | null
     */
    getPlaceholder() {
        return (this.placeholder);
    }
    /**
     * The UUID of the field.
     * @returns string | null
     */
    getUuid() {
        return (this.uuid);
    }
    /**
     * The data value of the field.
     * @returns string | null
     */
    getValue() {
        return (this.value);
    }
    /**
* ```
     *
* ```
     */
    _setIsNameMutated(_nameIsMutated) {
        this._nameIsMutated = _nameIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsPlaceholderMutated(_placeholderIsMutated) {
        this._placeholderIsMutated = _placeholderIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsUuidMutated(_uuidIsMutated) {
        this._uuidIsMutated = _uuidIsMutated;
        return (this);
    }
    /**
* ```
     *
* ```
     */
    _setIsValueMutated(_valueIsMutated) {
        this._valueIsMutated = _valueIsMutated;
        return (this);
    }
    /**
* ```
     * The name of the field.
* ```
     */
    setName(name) {
        if (this.name !== name) {
            this._setIsNameMutated(true);
        }
        this.name = name;
        return (this);
    }
    /**
* ```
     * The placehoder of the field. The label in the UI that is displayed.
* ```
     */
    setPlaceholder(placeholder) {
        if (this.placeholder !== placeholder) {
            this._setIsPlaceholderMutated(true);
        }
        this.placeholder = placeholder;
        return (this);
    }
    /**
* ```
     * The UUID of the field.
* ```
     */
    setUuid(uuid) {
        if (this.uuid !== uuid) {
            this._setIsUuidMutated(true);
        }
        this.uuid = uuid;
        return (this);
    }
    /**
* ```
     * The data value of the field.
* ```
     */
    setValue(value) {
        if (this.value !== value) {
            this._setIsValueMutated(true);
        }
        this.value = value;
        return (this);
    }
    _getIsMutated() {
        let isMutated = false;
        this._setCurrentState2({
            attributeName: 'name',
            value: this.name
        });
        this._setCurrentState2({
            attributeName: 'placeholder',
            value: this.placeholder
        });
        this._setCurrentState2({
            attributeName: 'uuid',
            value: this.uuid
        });
        this._setCurrentState2({
            attributeName: 'value',
            value: this.value
        });
        this._currentHashcode2 = this.getHashCode();
        isMutated = super._getIsMutated();
        return (isMutated);
    }
    _trackMutations() {
        if (this._isTrackingingMutations) {
            return (this);
        }
        this._setInitializedState2({
            attributeName: 'name',
            value: this.name
        });
        this._setInitializedState2({
            attributeName: 'placeholder',
            value: this.placeholder
        });
        this._setInitializedState2({
            attributeName: 'uuid',
            value: this.uuid
        });
        this._setInitializedState2({
            attributeName: 'value',
            value: this.value
        });
        super._trackMutations();
        if (!this._hasInitializedHashCode2) {
            this._initializedHashcode2 = this.getHashCode();
        }
        this._hasInitializedHashCode2 = true;
        return (this);
    }
    getHashCode() {
        let hashCode_n = -1;
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.name);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.placeholder);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.uuid);
        hashCode_n += HashCodeUtil_1.HashCodeUtil.getHashCodeFromValue(this.value);
        return (hashCode_n);
    }
}
exports.Field = Field;
Field.metaDataForField = new MetaData();
ClassFor_1.ClassFor.getInstance().addClass("com.salesstryke.entity.classes.record.pandadocapi.Field", Field);
//# sourceMappingURL=Field.js.map