"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionTypeEnum = void 0;
const EnumBase_1 = require("../../lang/EnumBase");
const PermissionType_1 = require("../classes/persistable/PermissionType");
const NAMESPACE = 'com.salesstryke.entity.enums.PermissionTypeEnum';
class PermissionTypeEnum extends EnumBase_1.EnumBase {
    constructor(p) {
        super({
            idOverride: p.enumId,
            name: p.name,
            namespace: NAMESPACE
        });
        this.permissionType = new PermissionType_1.PermissionType()
            .setId(p.databaseUUID)
            .setName(p.name)
            .setJsonType(NAMESPACE)
            .setCreatedDate(new Date())
            .setModifiedDate(new Date());
        this.permissionType._setIsUserSetId(true);
    }
    getPermissionType() {
        return this.permissionType;
    }
}
exports.PermissionTypeEnum = PermissionTypeEnum;
PermissionTypeEnum.CREATE = new PermissionTypeEnum({ enumId: 1, name: 'CREATE', description: 'Create Permission', databaseUUID: '507f1f77bcf86cd799439021' });
PermissionTypeEnum.READ = new PermissionTypeEnum({ enumId: 2, name: 'READ', description: 'Read Permission', databaseUUID: '507f1f77bcf86cd799439022' });
PermissionTypeEnum.UPDATE = new PermissionTypeEnum({ enumId: 3, name: 'UPDATE', description: 'Update Permission', databaseUUID: '507f1f77bcf86cd799439023' });
PermissionTypeEnum.DELETE = new PermissionTypeEnum({ enumId: 4, name: 'DELETE', description: 'Delete Permission', databaseUUID: '507f1f77bcf86cd799439024' });
//# sourceMappingURL=PermissionTypeEnum.js.map