"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CnsCampaignListItemClientApi = void 0;
const tslib_1 = require("tslib");
const ApiBase_1 = require("./ApiBase");
const endpoint_1 = require("../../endpoint");
const log_1 = require("../../utils/log");
const NAMESPACE = 'com.salesstryke.client.api.CnsCampaignListItemClientApi';
const LOGGER = log_1.LogManager.getLogger(NAMESPACE);
/*

    Make sure this file is added to the correct index.ts

    Add To SalesStrykeClientApi:
        public cnsCampaignListItem : CnsCampaignListItemClientApi;


        this.cnsCampaignListItem = new CnsCampaignListItemClientApi(this.httpClient);
    

    Copy to EndPoint.ts

        public static CNS_CAMPAIGN_LIST_ITEM__DELETE:     EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/cns_campaign_list_item/delete");
        public static CNS_CAMPAIGN_LIST_ITEM__GET_ALL:    EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/cns_campaign_list_item/getall");
        public static CNS_CAMPAIGN_LIST_ITEM__GET_BY_ID : EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/cns_campaign_list_item/getbyid");
        public static CNS_CAMPAIGN_LIST_ITEM__SAVE:       EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/cns_campaign_list_item/save");

*/
class CnsCampaignListItemClientApi extends ApiBase_1.ApiBase {
    constructor(httpClient) {
        super(httpClient);
        this.delete = this.delete.bind(this);
        this.getAll = this.getAll.bind(this);
        this.getById = this.getById.bind(this);
        this.save = this.save.bind(this);
    }
    /**
     * Delete Entity: CnsCampaignListItem
     * @param request
     * @returns
     */
    delete(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.CNS_CAMPAIGN_LIST_ITEM__DELETE }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.delete.name, uuid: 'a06c2ab5-92fd-420b-b21a-c69cf0c9f370', error: error });
                throw error;
            }
        });
    }
    getAll(jsonApiQuery) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.callEndPointUrlAndReturnEntityArray({ endPointUrl: endpoint_1.EndPoint.CNS_CAMPAIGN_LIST_ITEM__GET_ALL, jsonApiQuery: jsonApiQuery }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getAll.name, uuid: 'edce6ae4-db69-4415-bf91-05cdfe2c840e', error: error });
                throw error;
            }
        });
    }
    /**
     * Get Entity: CnsCampaignListItem by Id
     * @param request
     * @returns
     */
    getById(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.CNS_CAMPAIGN_LIST_ITEM__GET_BY_ID }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getById.name, uuid: '7f912ec4-38bd-4a40-b921-d118632ca13a', error: error });
                throw error;
            }
        });
    }
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.CNS_CAMPAIGN_LIST_ITEM__SAVE }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.save.name, uuid: '8d1e2ead-503c-44a9-9ae4-55aa4392402a', error: error });
                throw error;
            }
        });
    }
}
exports.CnsCampaignListItemClientApi = CnsCampaignListItemClientApi;
//# sourceMappingURL=CnsCampaignListItemClientApi.js.map