import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { CartProductRule } from "../../entity/classes/persistable/CartProductRule";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
export declare class CartProductRuleClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: CartProductRule
     * @param request
     * @returns
     */
    delete(request: CartProductRule): Promise<CartProductRule | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<Array<CartProductRule> | null>;
    /**
     * Get Entity: CartProductRule by Id
     * @param request
     * @returns
     */
    getById(request: CartProductRule): Promise<CartProductRule | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: CartProductRule): Promise<CartProductRule>;
}
