import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { ProductCategoryRule } from "../../entity/classes/persistable/ProductCategoryRule";
import { JsonApiQuery } from "../../jsonApi";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
export declare class ProductCategoryRuleClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: ProductCategoryRule
     * @param request
     * @returns
     */
    delete(request: ProductCategoryRule): Promise<ProductCategoryRule | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<ProductCategoryRule>>;
    /**
     * Get Entity: ProductCategoryRule by Id
     * @param request
     * @returns
     */
    getById(request: ProductCategoryRule): Promise<ProductCategoryRule | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: ProductCategoryRule): Promise<ProductCategoryRule>;
}
