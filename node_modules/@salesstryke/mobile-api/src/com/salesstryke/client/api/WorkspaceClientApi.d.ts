import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { Workspace } from "../../entity/classes/persistable/Workspace";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
export declare class WorkspaceClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: Workspace
     * @param request
     * @returns
     */
    delete(request: Workspace): Promise<Workspace | null>;
    /**
     * Save Entity: Workspace
     * @param request
     * @returns
     */
    save(request: Workspace): Promise<Workspace>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<Workspace>>;
    /**
     * Get Entity: Workspace by Id
     * @param request
     * @returns
     */
    getById(request: Workspace): Promise<Workspace | null>;
    getDocumentReport(request: Workspace): Promise<Workspace | null>;
    sync(request: Workspace): Promise<Workspace | null>;
}
