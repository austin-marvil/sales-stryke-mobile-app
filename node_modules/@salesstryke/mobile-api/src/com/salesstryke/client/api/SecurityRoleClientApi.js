"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityRoleClientApi = void 0;
const tslib_1 = require("tslib");
const ApiBase_1 = require("./ApiBase");
const ClientToServerApiCall_1 = require("../call/ClientToServerApiCall");
const endpoint_1 = require("../../endpoint");
const log_1 = require("../../utils/log");
const ProcessApiDataListUtil_1 = require("../../jsonApi/util/ProcessApiDataListUtil");
const NAMESPACE = "com.salesstryke.client.api.SecurityRoleClientApi";
const LOGGER = log_1.LogManager.getLogger(NAMESPACE);
class SecurityRoleClientApi extends ApiBase_1.ApiBase {
    constructor(httpClient) {
        super(httpClient);
        this.getById = this.getById.bind(this);
        this.getAll = this.getAll.bind(this);
        this.save = this.save.bind(this);
        this.delete = this.delete.bind(this);
    }
    delete(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({ httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.SECURITY_ROLE_DELETE })
                    .addEntity(request)
                    .request();
                let response = (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
                return (response);
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.save.name, uuid: '45fede77-68ac-4c4e-b573-d829db34124e', error: error });
                throw (error);
            }
        });
    }
    getById(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({ httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.SECURITY_ROLE_GET_BY_ID })
                    .addEntity(request)
                    .request();
                let response = (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
                return (response);
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getById.name, uuid: '51bef841-8d5c-4514-8386-3c8e66312171', error: error });
                throw (error);
            }
        });
    }
    getAll(jsonApiQuery) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.SECURITY_ROLE_GET_ALL
                })
                    .setJsonApiQuery(jsonApiQuery)
                    .request();
                return ProcessApiDataListUtil_1.ProcessApiDataListUtil.parseData(response_api.getJsonApiDocument());
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getAll.name, uuid: '930e09f1-d31a-4d5c-a5c2-b8cd0acfad37', error: error });
                throw (error);
            }
        });
    }
    save(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({ httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.SECURITY_ROLE_SAVE })
                    .addEntity(request)
                    .request();
                let response = response_api.getJsonApiDocument().getDataAsItem();
                return (response);
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.save.name, uuid: "bdbca6c7-eab2-4f57-bfe6-7d4c2dd2b036", error: error });
                throw (error_any);
            }
        });
    }
}
exports.SecurityRoleClientApi = SecurityRoleClientApi;
//# sourceMappingURL=SecurityRoleClientApi.js.map