import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { DurationType } from "../../entity/classes/persistable/DurationType";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
export declare class DurationTypeClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: DurationType
     * @param request
     * @returns
     */
    delete(request: DurationType): Promise<DurationType | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<DurationType>>;
    /**
     * Get Entity: DurationType by Id
     * @param request
     * @returns
     */
    getById(request: DurationType): Promise<DurationType | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: DurationType): Promise<DurationType>;
}
