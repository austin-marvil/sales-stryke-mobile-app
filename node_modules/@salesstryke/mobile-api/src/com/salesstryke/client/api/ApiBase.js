"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiBase = void 0;
const tslib_1 = require("tslib");
const ClientToServerApiCall_1 = require("../call/ClientToServerApiCall");
class ApiBase {
    constructor(httpClient) {
        this.jsonApiDocumentMapByName = new Map();
        this.httpClient = httpClient;
    }
    getHttpClient() {
        return (this.httpClient);
    }
    addEntityAndCallEndPointUrlAndReturnEntity(p) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let request = p.entity;
            let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                httpClient: this.getHttpClient(), endPointUrl: p.endPointUrl
            })
                .addEntity(request)
                .setJsonApiQuery(p.jsonApiQuery)
                .request();
            return (response_api.getJsonApiDocument().getDataAs()[0]);
        });
    }
    callEndPointUrlAndReturnEntityArray(p) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                httpClient: this.getHttpClient(), endPointUrl: p.endPointUrl
            })
                .setJsonApiQuery(p.jsonApiQuery)
                .request();
            return ((_a = response_api.getJsonApiDocument().getDataAs()) !== null && _a !== void 0 ? _a : null);
        });
    }
    getJsonApiDocumentByName(name_s) {
        let jad = null;
        let temp_any = this.jsonApiDocumentMapByName.get(name_s);
        if (temp_any) {
            jad = temp_any;
        }
        return (jad);
    }
    setJsonApiDocumentByName(name_s, jsonApiDocument) {
        if (jsonApiDocument) {
            this.jsonApiDocumentMapByName.set(name_s, jsonApiDocument);
        }
    }
}
exports.ApiBase = ApiBase;
//# sourceMappingURL=ApiBase.js.map