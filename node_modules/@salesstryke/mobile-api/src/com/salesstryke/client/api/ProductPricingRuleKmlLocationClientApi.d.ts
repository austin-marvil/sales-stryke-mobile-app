import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { ProductPricingRuleKmlLocation } from "../../entity/classes/persistable/ProductPricingRuleKmlLocation";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
export declare class ProductPricingRuleKmlLocationClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: ProductPricingRuleKmlLocation
     * @param request
     * @returns
     */
    delete(request: ProductPricingRuleKmlLocation): Promise<ProductPricingRuleKmlLocation | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<ProductPricingRuleKmlLocation>>;
    /**
     * Get Entity: ProductPricingRuleKmlLocation by Id
     * @param request
     * @returns
     */
    getById(request: ProductPricingRuleKmlLocation): Promise<ProductPricingRuleKmlLocation | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: ProductPricingRuleKmlLocation): Promise<ProductPricingRuleKmlLocation>;
}
