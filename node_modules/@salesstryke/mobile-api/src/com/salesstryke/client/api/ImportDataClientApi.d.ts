import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { ImportData } from "../../entity/classes/persistable/ImportData";
import { ImportDataAttributeType } from "../../entity/classes/persistable";
import { DataArray } from "../../entity/classes/persistable/DataArray";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
interface SearchAddressResult {
    id: string;
    address: string;
}
export declare class ImportDataClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: ImportData
     * @param request
     * @returns
     */
    delete(request: ImportData): Promise<ImportData | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<Array<ImportData> | null>;
    /**
     * Get Entity: ImportData[] by ImportDataFileUpload Id
     * @param request - importData.getByImportDataFileUpload();
     * @returns
     */
    getAllByImportDataFileId(jsonApiQuery: JsonApiQuery): Promise<Array<ImportData> | null>;
    /**
     * Get Entity: ImportData by ArrayData of string id
     * @param request
     * @returns
     */
    getByBatchId(request: DataArray): Promise<ImportData[] | null>;
    /**
     * Get Entity: ImportData by Id
     * @param request
     * @returns
     */
    getById(request: ImportData): Promise<ImportData | null>;
    /**
     * Get Entity: ImportData by Id
     * @param request
     * @returns
     */
    getByIndexedVar(request: ImportData): Promise<ImportData | null>;
    /**
     * Get Entity: ImportData index attribute type
     * @param request
     * @returns
     */
    getIndexAttributeType(request: ImportDataAttributeType): Promise<Array<ImportData> | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: ImportData): Promise<ImportData>;
    /**
     * update Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    update(request: ImportData): Promise<ImportData | null>;
    searchAddress(jsonApiQuery: JsonApiQuery): Promise<SearchAddressResult[]>;
}
export {};
