import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { HttpApiUsage } from "../../entity/classes/persistable/HttpApiUsage";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
export declare class HttpApiUsageClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: HttpApiUsage
     * @param request
     * @returns
     */
    delete(request: HttpApiUsage): Promise<HttpApiUsage | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<Array<HttpApiUsage> | null>;
    /**
     * Get Entity: HttpApiUsage by Id
     * @param request
     * @returns
     */
    getById(request: HttpApiUsage): Promise<HttpApiUsage | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: HttpApiUsage): Promise<HttpApiUsage | null>;
}
