import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
import { SettingWorkspace } from "../../entity/classes/persistable/SettingWorkspace";
export declare class SettingWorkspaceClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: SettingWorkspace
     * @param request
     * @returns
     */
    delete(request: SettingWorkspace): Promise<SettingWorkspace | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<SettingWorkspace>>;
    /**
     * Get Entity: SettingWorkspace by Id
     * @param request
     * @returns
     */
    getById(request: SettingWorkspace): Promise<SettingWorkspace | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: SettingWorkspace): Promise<SettingWorkspace>;
}
