"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.USStateClientApi = void 0;
const tslib_1 = require("tslib");
const endpoint_1 = require("../../endpoint");
const lang_1 = require("../../lang");
const log_1 = require("../../utils/log");
const ClientToServerApiCall_1 = require("../call/ClientToServerApiCall");
const ApiBase_1 = require("./ApiBase");
const ProcessApiDataListUtil_1 = require("../../jsonApi/util/ProcessApiDataListUtil");
const NAMESPACE = "com.salesstryke.client.api.USStateClientApi";
const LOGGER = log_1.LogManager.getLogger(NAMESPACE);
// We should only be able to get all US state and or search for one and not be able to add them in the frontend.
// TODO: add a search api, fix get all endpoint
class USStateClientApi extends ApiBase_1.ApiBase {
    constructor(httpClient) {
        super(httpClient);
        this.getAll = this.getAll.bind(this);
    }
    /**
     * Return Array<USState>
     * @returns
     */
    getAll(jsonApiQuery) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.USERTYPE_GET_ALL
                })
                    .request();
                return ProcessApiDataListUtil_1.ProcessApiDataListUtil.parseData(response_api.getJsonApiDocument());
            }
            catch (error_any) {
                let error = error_any;
                let errorBase = new lang_1.ErrorBase(error.message, NAMESPACE, this.getAll.name, "76b704d0-ed7a-4295-a451-18fe58a40cee", error);
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.logErrorBase(errorBase);
                }
                throw (error_any);
            }
        });
    }
}
exports.USStateClientApi = USStateClientApi;
//# sourceMappingURL=USStateClientApi.js.map