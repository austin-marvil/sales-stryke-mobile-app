import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
import { ProductKmlLocation } from "../../entity/classes/persistable/ProductKmlLocation";
export declare class ProductKmlLocationClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: ProductKmlLocation
     * @param request
     * @returns
     */
    delete(request: ProductKmlLocation): Promise<ProductKmlLocation | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<ProductKmlLocation>>;
    /**
     * Get Entity: ProductKmlLocation by Id
     * @param request
     * @returns
     */
    getById(request: ProductKmlLocation): Promise<ProductKmlLocation | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: ProductKmlLocation): Promise<ProductKmlLocation>;
}
