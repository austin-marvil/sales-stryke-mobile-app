import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { RuleBuilder } from "../../entity/classes/persistable/RuleBuilder";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
export declare class RuleBuilderClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: RuleBuilder
     * @param request
     * @returns
     */
    delete(request: RuleBuilder): Promise<RuleBuilder | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<Array<RuleBuilder> | null>;
    /**
     * Get Entity: RuleBuilder by Id
     * @param request
     * @returns
     */
    getById(request: RuleBuilder): Promise<RuleBuilder | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: RuleBuilder): Promise<RuleBuilder>;
}
