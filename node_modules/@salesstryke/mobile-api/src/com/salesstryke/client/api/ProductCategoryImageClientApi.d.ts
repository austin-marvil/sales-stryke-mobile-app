import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { ProductCategoryImage } from "../../entity/classes/persistable/ProductCategoryImage";
import { JsonApiQuery } from "../../jsonApi";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
export declare class ProductCategoryImageClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: ProductCategoryImage
     * @param request
     * @returns
     */
    delete(request: ProductCategoryImage): Promise<ProductCategoryImage | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<ProductCategoryImage>>;
    /**
     * Get Entity: ProductCategoryImage by Id
     * @param request
     * @returns
     */
    getById(request: ProductCategoryImage): Promise<ProductCategoryImage | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: ProductCategoryImage): Promise<ProductCategoryImage>;
}
