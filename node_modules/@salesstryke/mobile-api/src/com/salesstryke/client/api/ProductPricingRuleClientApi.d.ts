import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { ProductPricingRule } from "../../entity/classes/persistable/ProductPricingRule";
import { JsonApiQuery } from "../../jsonApi";
export declare class ProductPricingRuleClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: ProductPricingRule
     * @param request
     * @returns
     */
    delete(request: ProductPricingRule): Promise<ProductPricingRule | null>;
    getAll(jsonApiQuery: JsonApiQuery | undefined): Promise<Array<ProductPricingRule> | null>;
    /**
     * Get Entity: ProductPricingRule by Id
     * @param request
     * @returns
     */
    getById(request: ProductPricingRule): Promise<ProductPricingRule | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: ProductPricingRule): Promise<ProductPricingRule>;
}
