import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { ProductImageKmlLocation } from "../../entity/classes/persistable/ProductImageKmlLocation";
import { JsonApiQuery } from "../../jsonApi";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
export declare class ProductImageKmlLocationClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: ProductImageKmlLocation
     * @param request
     * @returns
     */
    delete(request: ProductImageKmlLocation): Promise<ProductImageKmlLocation | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<ProductImageKmlLocation>>;
    /**
     * Get Entity: ProductImageKmlLocation by Id
     * @param request
     * @returns
     */
    getById(request: ProductImageKmlLocation): Promise<ProductImageKmlLocation | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: ProductImageKmlLocation): Promise<ProductImageKmlLocation>;
}
