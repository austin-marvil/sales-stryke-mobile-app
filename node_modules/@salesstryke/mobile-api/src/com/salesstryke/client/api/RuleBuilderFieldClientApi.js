"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuleBuilderFieldClientApi = void 0;
const tslib_1 = require("tslib");
const ApiBase_1 = require("./ApiBase");
const endpoint_1 = require("../../endpoint");
const log_1 = require("../../utils/log");
const NAMESPACE = 'com.salesstryke.client.api.RuleBuilderFieldClientApi';
const LOGGER = log_1.LogManager.getLogger(NAMESPACE);
/*

    Make sure this file is added to the correct index.ts

    Add To SalesStrykeClientApi:
        public ruleBuilderField : RuleBuilderFieldClientApi;


        this.ruleBuilderField = new RuleBuilderFieldClientApi(this.httpClient);
    

    Copy to EndPoint.ts

        public static RULE_BUILDER_FIELD__DELETE:     EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/rule_builder_field/delete");
        public static RULE_BUILDER_FIELD__GET_ALL:    EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/rule_builder_field/getall");
        public static RULE_BUILDER_FIELD__GET_BY_ID : EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/rule_builder_field/getbyid");
        public static RULE_BUILDER_FIELD__SAVE:       EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/rule_builder_field/save");

*/
class RuleBuilderFieldClientApi extends ApiBase_1.ApiBase {
    constructor(httpClient) {
        super(httpClient);
        this.delete = this.delete.bind(this);
        this.getAll = this.getAll.bind(this);
        this.getById = this.getById.bind(this);
        this.save = this.save.bind(this);
    }
    /**
     * Delete Entity: RuleBuilderField
     * @param request
     * @returns
     */
    delete(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.RULE_BUILDER_FIELD__DELETE }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.delete.name, uuid: 'f2f2613a-627f-4980-8387-0161fddce485', error: error });
                throw error;
            }
        });
    }
    getAll(jsonApiQuery) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.callEndPointUrlAndReturnEntityArray({ endPointUrl: endpoint_1.EndPoint.RULE_BUILDER_FIELD__GET_ALL, jsonApiQuery: jsonApiQuery }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getAll.name, uuid: 'fef2685f-7dea-4db2-83a0-55886c7892e9', error: error });
                throw error;
            }
        });
    }
    /**
     * Get Entity: RuleBuilderField by Id
     * @param request
     * @returns
     */
    getById(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.RULE_BUILDER_FIELD__GET_BY_ID }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getById.name, uuid: '844e2433-949c-4d28-817a-5ea3819362dd', error: error });
                throw error;
            }
        });
    }
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.RULE_BUILDER_FIELD__SAVE }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.save.name, uuid: '2e651f6b-90ca-4bda-8178-e1821ee2a734', error: error });
                throw error;
            }
        });
    }
}
exports.RuleBuilderFieldClientApi = RuleBuilderFieldClientApi;
//# sourceMappingURL=RuleBuilderFieldClientApi.js.map