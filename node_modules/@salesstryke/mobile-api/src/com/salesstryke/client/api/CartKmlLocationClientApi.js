"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartKmlLocationClientApi = void 0;
const tslib_1 = require("tslib");
const ApiBase_1 = require("./ApiBase");
const endpoint_1 = require("../../endpoint");
const log_1 = require("../../utils/log");
const NAMESPACE = 'com.salesstryke.client.api.CartKmlLocationClientApi';
const LOGGER = log_1.LogManager.getLogger(NAMESPACE);
/*

    Make sure this file is added to the correct index.ts

    Add To SalesStrykeClientApi:
        public cartKmlLocation : CartKmlLocationClientApi;


        this.cartKmlLocation = new CartKmlLocationClientApi(this.httpClient);
    

    Copy to EndPoint.ts

        public static CART_KML_LOCATION__DELETE:     EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/cart_kml_location/delete");
        public static CART_KML_LOCATION__GET_ALL:    EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/cart_kml_location/getall");
        public static CART_KML_LOCATION__GET_BY_ID : EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/cart_kml_location/getbyid");
        public static CART_KML_LOCATION__SAVE:       EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/cart_kml_location/save");

*/
class CartKmlLocationClientApi extends ApiBase_1.ApiBase {
    constructor(httpClient) {
        super(httpClient);
        this.delete = this.delete.bind(this);
        this.getAll = this.getAll.bind(this);
        this.getById = this.getById.bind(this);
        this.save = this.save.bind(this);
    }
    /**
     * Delete Entity: CartKmlLocation
     * @param request
     * @returns
     */
    delete(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.CART_KML_LOCATION__DELETE }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.delete.name, uuid: 'bcad2d96-5676-4665-b60f-105f778f45a3', error: error });
                throw error;
            }
        });
    }
    getAll() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.callEndPointUrlAndReturnEntityArray({ endPointUrl: endpoint_1.EndPoint.CART_KML_LOCATION__GET_ALL }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getAll.name, uuid: 'f7c9ee2d-8e6c-4741-9084-9e0d84fbcb46', error: error });
                throw error;
            }
        });
    }
    /**
     * Get Entity: CartKmlLocation by Id
     * @param request
     * @returns
     */
    getById(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.CART_KML_LOCATION__GET_BY_ID }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getById.name, uuid: '8894eb5d-b171-4d20-b581-5e52987a4265', error: error });
                throw error;
            }
        });
    }
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.CART_KML_LOCATION__SAVE }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.save.name, uuid: 'db8d4d9a-821c-4e80-99cb-11d137e60407', error: error });
                throw error;
            }
        });
    }
}
exports.CartKmlLocationClientApi = CartKmlLocationClientApi;
//# sourceMappingURL=CartKmlLocationClientApi.js.map