"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceWidgetClientApi = void 0;
const tslib_1 = require("tslib");
const ApiBase_1 = require("./ApiBase");
const ClientToServerApiCall_1 = require("../call/ClientToServerApiCall");
const endpoint_1 = require("../../endpoint");
const lang_1 = require("../../lang");
const log_1 = require("../../utils/log");
const NAMESPACE = "com.salesstryke.client.api.WorkspaceWidgetClientApi";
const LOGGER = log_1.LogManager.getLogger(NAMESPACE);
class WorkspaceWidgetClientApi extends ApiBase_1.ApiBase {
    constructor(httpClient) {
        super(httpClient);
        this.save = this.save.bind(this);
        this.getById = this.getById.bind(this);
        this.saveWithDefault = this.saveWithDefault.bind(this);
        this.delete = this.delete.bind(this);
        this.getWorkspaceTemplate = this.getWorkspaceTemplate.bind(this);
        this.getWidgetBySecurityToken = this.getWidgetBySecurityToken.bind(this);
        this.getWidgetBySecurityToken2 = this.getWidgetBySecurityToken2.bind(this);
    }
    getById(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.WORKSPACE_WIDGET_GET_BY_ID
                })
                    .addEntity(request)
                    .request();
                return (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
            }
            catch (error_any) {
                let error = error_any;
                let errorBase = new lang_1.ErrorBase(error.message, NAMESPACE, this.getById.name, "a74269b3-51dd-4f86-aa71-74ce10f9b367", error);
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.logErrorBase(errorBase);
                }
                throw (error_any);
            }
        });
    }
    save(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.WORKSPACE_WIDGET_SAVE
                })
                    .addEntity(request)
                    .request();
                return (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
            }
            catch (error_any) {
                let error = error_any;
                let errorBase = new lang_1.ErrorBase(error.message, NAMESPACE, this.save.name, "2c39cfb5-d922-438c-9bcb-b14c7c1ee149", error);
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.logErrorBase(errorBase);
                }
                throw (error_any);
            }
        });
    }
    saveWithDefault(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.WORKSPACE_WIDGET_SAVE_WITH_DEFAULTS
                })
                    .addEntity(request)
                    .request();
                return (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
            }
            catch (error_any) {
                let error = error_any;
                let errorBase = new lang_1.ErrorBase(error.message, NAMESPACE, this.saveWithDefault.name, "78a78905-f9bb-4fc1-8775-b3eb3cb8742c", error);
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.logErrorBase(errorBase);
                }
                throw (error_any);
            }
        });
    }
    delete(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.WORKSPACE_WIDGET_DELETE
                })
                    .addEntity(request)
                    .request();
                return (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
            }
            catch (error_any) {
                let error = error_any;
                let errorBase = new lang_1.ErrorBase(error.message, NAMESPACE, this.delete.name, "294dd4a7-18f4-4172-90cf-e2437a390fbb", error);
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.logErrorBase(errorBase);
                }
                throw (error_any);
            }
        });
    }
    getWorkspaceTemplate(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.WORKSPACE_WIDGET_GET_WORK_SPACE_TEMPLATES
                })
                    .addEntity(request)
                    .request();
                return (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
            }
            catch (error_any) {
                let error = error_any;
                let errorBase = new lang_1.ErrorBase(error.message, NAMESPACE, this.getWorkspaceTemplate.name, "66856c1e-4017-4ea5-b367-839216076060", error);
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.logErrorBase(errorBase);
                }
                throw (error_any);
            }
        });
    }
    getWidgetBySecurityToken(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.WORKSPACE_WIDGET_BY_SECURITY_TOKEN
                })
                    .addEntity(request)
                    .request();
                return (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
            }
            catch (error_any) {
                let error = error_any;
                let errorBase = new lang_1.ErrorBase(error.message, NAMESPACE, this.getWidgetBySecurityToken.name, "66856c1e-4017-4ea5-b367-839216076060", error);
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.logErrorBase(errorBase);
                }
                throw (error_any);
            }
        });
    }
    getWidgetBySecurityToken2(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            var _a;
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.WORKSPACE_WIDGET_BY_SECURITY_TOKEN2
                })
                    .addEntity(request)
                    .request();
                return (_a = response_api.getJsonApiDocument().getDataAs()[0]) !== null && _a !== void 0 ? _a : null;
            }
            catch (error_any) {
                let error = error_any;
                let errorBase = new lang_1.ErrorBase(error.message, NAMESPACE, this.getWidgetBySecurityToken2.name, "66856c1e-4017-4ea5-b367-839216076060", error);
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.logErrorBase(errorBase);
                }
                throw (error_any);
            }
        });
    }
}
exports.WorkspaceWidgetClientApi = WorkspaceWidgetClientApi;
//# sourceMappingURL=WorkspaceWidgetClientApi.js.map