"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductPricingKmlLocationClientApi = void 0;
const tslib_1 = require("tslib");
const ApiBase_1 = require("./ApiBase");
const ClientToServerApiCall_1 = require("../call/ClientToServerApiCall");
const endpoint_1 = require("../../endpoint");
const log_1 = require("../../utils/log");
const ProcessApiDataListUtil_1 = require("../../jsonApi/util/ProcessApiDataListUtil");
const NAMESPACE = 'com.salesstryke.client.api.ProductPricingKmlLocationClientApi';
const LOGGER = log_1.LogManager.getLogger(NAMESPACE);
/*

    Make sure this file is added to the correct index.ts

    Add To SalesStrykeClientApi:
        public productPricingKmlLocation : ProductPricingKmlLocationClientApi;


        this.productPricingKmlLocation = new ProductPricingKmlLocationClientApi(this.httpClient);
    

    Copy to EndPoint.ts

        public static PRODUCT_PRICING_KML_LOCATION__DELETE:     EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/product_pricing_kml_location/delete");
        public static PRODUCT_PRICING_KML_LOCATION__GET_ALL:    EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/product_pricing_kml_location/getall");
        public static PRODUCT_PRICING_KML_LOCATION__GET_BY_ID : EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/product_pricing_kml_location/getbyid");
        public static PRODUCT_PRICING_KML_LOCATION__SAVE:       EndPointUrl = new EndPointUrl(HttpMethodType.POST, "/product_pricing_kml_location/save");

*/
class ProductPricingKmlLocationClientApi extends ApiBase_1.ApiBase {
    constructor(httpClient) {
        super(httpClient);
        this.delete = this.delete.bind(this);
        this.getAll = this.getAll.bind(this);
        this.getById = this.getById.bind(this);
        this.save = this.save.bind(this);
    }
    /**
     * Delete Entity: ProductPricingKmlLocation
     * @param request
     * @returns
     */
    delete(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.PRODUCT_PRICING_KML_LOCATION__DELETE }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.delete.name, uuid: 'c564177a-7a80-4f79-9cbb-983d0d7dff94', error: error });
                throw error;
            }
        });
    }
    getAll(jsonApiQuery) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                let response_api = yield new ClientToServerApiCall_1.ClientToServerApiCall({
                    httpClient: this.getHttpClient(), endPointUrl: endpoint_1.EndPoint.PRODUCT_PRICING_KML_LOCATION__GET_ALL
                })
                    .setJsonApiQuery(jsonApiQuery)
                    .request();
                return ProcessApiDataListUtil_1.ProcessApiDataListUtil.parseData(response_api.getJsonApiDocument());
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getAll.name, uuid: 'b63708b4-ab33-4049-a692-02a691c84057', error: error });
                throw error;
            }
        });
    }
    /**
     * Get Entity: ProductPricingKmlLocation by Id
     * @param request
     * @returns
     */
    getById(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.PRODUCT_PRICING_KML_LOCATION__GET_BY_ID }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.getById.name, uuid: 'a5b5b93e-a8e0-4c7e-9145-5613d7917987', error: error });
                throw error;
            }
        });
    }
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                return (this.addEntityAndCallEndPointUrlAndReturnEntity({ entity: request, endPointUrl: endpoint_1.EndPoint.PRODUCT_PRICING_KML_LOCATION__SAVE }));
            }
            catch (error_any) {
                let error = error_any;
                LOGGER.logError({ message: error.message, methodName: this.save.name, uuid: 'abf5a7aa-a472-4b4f-baf4-e6184da94578', error: error });
                throw error;
            }
        });
    }
}
exports.ProductPricingKmlLocationClientApi = ProductPricingKmlLocationClientApi;
//# sourceMappingURL=ProductPricingKmlLocationClientApi.js.map