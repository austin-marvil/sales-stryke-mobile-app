import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { Organization } from "../../entity/classes/persistable";
import { JsonApiQuery } from "../../jsonApi";
import { TProcessApiDataListType } from "../../jsonApi/util/ProcessApiDataListUtil";
export declare class OrganizationClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    save(request: Organization): Promise<Organization>;
    delete(request: Organization): Promise<Organization>;
    getById(request: Organization): Promise<Organization | null>;
    getAllChildOrganizations(jsonApiQuery?: JsonApiQuery): Promise<TProcessApiDataListType<Organization>>;
    getRoot(p: {
        request: Organization;
    }): Promise<Array<Organization> | null>;
    removeApplication(request: Organization): Promise<Organization | null>;
    addApplication(request: Organization): Promise<Organization | null>;
    getTokenValidAfter(): Promise<Organization | null>;
}
