import { ApiBase } from "./ApiBase";
import { HttpClient } from "../../utils/httpclient";
import { CnsMessageTemplate } from "../../entity/classes/persistable/CnsMessageTemplate";
import { JsonApiQuery } from "../../jsonApi/JsonApiQuery";
export declare class CnsMessageTemplateClientApi extends ApiBase {
    constructor(httpClient: HttpClient);
    /**
     * Delete Entity: CnsMessageTemplate
     * @param request
     * @returns
     */
    delete(request: CnsMessageTemplate): Promise<CnsMessageTemplate | null>;
    getAll(jsonApiQuery?: JsonApiQuery): Promise<Array<CnsMessageTemplate> | null>;
    /**
     * Get Entity: CnsMessageTemplate by Id
     * @param request
     * @returns
     */
    getById(request: CnsMessageTemplate): Promise<CnsMessageTemplate | null>;
    /**
     * Save Entity: {clientApiSentitySimpleNameimpleName}
     * @param request
     * @returns
     */
    save(request: CnsMessageTemplate): Promise<CnsMessageTemplate>;
    /**
     * Save Email Template Entity: Creates or updates an email template in AWS SES
     * @param request CnsMessageTemplate object with EMAIL channel type and AWS template data
     * @returns
     */
    saveEmailTemplate(request: CnsMessageTemplate): Promise<CnsMessageTemplate>;
}
