"use strict";
var _a, _SalesStrykeClientApi_constructorMethodName_s;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SalesStrykeClientApi = void 0;
const httpclient_1 = require("../utils/httpclient");
const SecureIdentityClientApi_1 = require("./api/SecureIdentityClientApi");
// import { SystemWidgetTemplateApi }                  from "./api/SystemWidgetTemplateApi";
// import { SystemWidgetViewTemplateApi }              from "./api/SystemWidgetViewTemplateApi";
// import { SystemWidgetAttributeTemplateApi }         from "./api/SystemWidgetAttributeTemplateApi";
const FileIOClientApi_1 = require("./api/FileIOClientApi");
const EmailNotificationClientApi_1 = require("./api/EmailNotificationClientApi");
const api_1 = require("./api");
const SecurityRoleClientApi_1 = require("./api/SecurityRoleClientApi");
const ImportNotificationUserSyncClientApi_1 = require("./api/ImportNotificationUserSyncClientApi");
const ImportDataClientApi_1 = require("./api/ImportDataClientApi");
const ImportDataAttributeTypeClientApi_1 = require("./api/ImportDataAttributeTypeClientApi");
const ImportDataAttributeClientApi_1 = require("./api/ImportDataAttributeClientApi");
const I18nLocaleTypeClientApi_1 = require("./api/I18nLocaleTypeClientApi");
const I18nKeyTypeClientApi_1 = require("./api/I18nKeyTypeClientApi");
const I18nTextClientApi_1 = require("./api/I18nTextClientApi");
const CnsEndPointClientApi_1 = require("./api/CnsEndPointClientApi");
const CnsEndPointChannelTypeClientApi_1 = require("./api/CnsEndPointChannelTypeClientApi");
const RoutingSoftwareVersionClientApi_1 = require("./api/RoutingSoftwareVersionClientApi");
const RoutingSoftwareTypeClientApi_1 = require("./api/RoutingSoftwareTypeClientApi");
const RoutingSoftwareAccountClientApi_1 = require("./api/RoutingSoftwareAccountClientApi");
// // Make sure the SalesStrykeModule is loaded.
// (async () => {
//     await SalesStrykeModule.getInstanceAsync();
// })();
// const NAMESPACE:    string = "com.salesstryke.module.salesstryke.SalesStrykeApi";
// const LOGGER:       Logger = LogManager.getLogger(NAMESPACE);
class SalesStrykeClientApi {
    constructor(scheme, domain, port) {
        this.httpClient = new httpclient_1.HttpClient(scheme, domain, port);
        // All httpClient should be after this
        /* Autogenerate httpClient */
        this.I18nCategory = new api_1.I18nCategoryClientApi(this.httpClient);
        this.I18nKeyType = new I18nKeyTypeClientApi_1.I18nKeyTypeClientApi(this.httpClient);
        this.I18nLocaleType = new I18nLocaleTypeClientApi_1.I18nLocaleTypeClientApi(this.httpClient);
        this.I18nText = new I18nTextClientApi_1.I18nTextClientApi(this.httpClient);
        this.SoftPakTaxBodyCode = new api_1.SoftPakTaxBodyCodeClientApi(this.httpClient);
        this.address = new api_1.AddressClientApi(this.httpClient);
        this.agreementDocument = new api_1.AgreementDocumentClientApi(this.httpClient);
        this.agreementDocumentVersion = new api_1.AgreementDocumentVersionClientApi(this.httpClient);
        this.agreementType = new api_1.AgreementTypeClientApi(this.httpClient);
        this.application = new api_1.ApplicationClientApi(this.httpClient);
        this.calendarItem = new api_1.CalendarItemClientApi(this.httpClient);
        this.cartItem = new api_1.CartItemClientApi(this.httpClient);
        this.cartKmlLocation = new api_1.CartKmlLocationClientApi(this.httpClient);
        this.cartProductRule = new api_1.CartProductRuleClientApi(this.httpClient);
        this.cartProductRuleKmlLocation = new api_1.CartProductRuleKmlLocationClientApi(this.httpClient);
        this.cartProductRuleType = new api_1.CartProductRuleTypeClientApi(this.httpClient);
        this.cartPromotionMax = new api_1.CartPromotionMaxClientApi(this.httpClient);
        this.cartServiceDayOfWeek = new api_1.CartServiceDayOfWeekClientApi(this.httpClient);
        this.cartServiceGeo = new api_1.CartServiceGeoClientApi(this.httpClient);
        this.cartSession = new api_1.CartSessionClientApi(this.httpClient);
        this.cnsCampaign = new api_1.CnsCampaignClientApi(this.httpClient);
        this.cnsCampaignList = new api_1.CnsCampaignListClientApi(this.httpClient);
        this.cnsCampaignListItem = new api_1.CnsCampaignListItemClientApi(this.httpClient);
        this.cnsEndPoint = new CnsEndPointClientApi_1.CnsEndPointClientApi(this.httpClient);
        this.cnsEndPointChannelType = new CnsEndPointChannelTypeClientApi_1.CnsEndPointChannelTypeClientApi(this.httpClient);
        this.cnsEndPointSignupStatusType = new api_1.CnsEndPointSignupStatusTypeClientApi(this.httpClient);
        this.cnsMessageTemplate = new api_1.CnsMessageTemplateClientApi(this.httpClient);
        this.cnsSegment = new api_1.CnsSegmentClientApi(this.httpClient);
        this.cnsSync = new api_1.CnsSyncClientApi(this.httpClient);
        this.cnsSyncStatusType = new api_1.CnsSyncStatusTypeClientApi(this.httpClient);
        this.dataArray = new api_1.DataArrayClientApi(this.httpClient);
        this.durationType = new api_1.DurationTypeClientApi(this.httpClient);
        this.email = new EmailNotificationClientApi_1.EmailNotificationClientApi(this.httpClient);
        this.emailAddress = new api_1.EmailAddressClientApi(this.httpClient);
        this.fileIOClient = new FileIOClientApi_1.FileIOClientApi(this.httpClient);
        this.httpApiUsage = new api_1.HttpApiUsageClientApi(this.httpClient);
        this.importData = new ImportDataClientApi_1.ImportDataClientApi(this.httpClient);
        this.importDataAttribute = new ImportDataAttributeClientApi_1.ImportDataAttributeClientApi(this.httpClient);
        this.importDataAttributeType = new ImportDataAttributeTypeClientApi_1.ImportDataAttributeTypeClientApi(this.httpClient);
        this.importDataFileUpload = new api_1.ImportDataFileUploadClientApi(this.httpClient);
        this.importDataMap = new api_1.ImportDataMapClientApi(this.httpClient);
        this.importDataMapAttribute = new api_1.ImportDataMapAttributeClientApi(this.httpClient);
        this.importDataMapType = new api_1.ImportDataMapTypeClientApi(this.httpClient);
        this.importDataMapTypeAttributeType = new api_1.ImportDataMapTypeAttributeTypeClientApi(this.httpClient);
        this.importNotificationUserSync = new ImportNotificationUserSyncClientApi_1.ImportNotificationUserSyncClientApi(this.httpClient);
        this.kml = new api_1.KmlClientApi(this.httpClient);
        this.kmlGeometry = new api_1.KmlGeometryClientApi(this.httpClient);
        this.kmlLayer = new api_1.KmlLayerClientApi(this.httpClient);
        this.kmlType = new api_1.KmlTypeClientApi(this.httpClient);
        this.organization = new api_1.OrganizationClientApi(this.httpClient);
        this.pandaDoc = new api_1.PandaDocClientApi(this.httpClient);
        this.permissionType = new api_1.PermissionTypeClientApi(this.httpClient);
        this.product = new api_1.ProductClientApi(this.httpClient);
        this.productCategory = new api_1.ProductCategoryClientApi(this.httpClient);
        this.productCategoryImage = new api_1.ProductCategoryImageClientApi(this.httpClient);
        this.productCategoryImageKmlLocation = new api_1.ProductCategoryImageKmlLocationClientApi(this.httpClient);
        this.productCategoryImageRoute = new api_1.ProductCategoryImageRouteClientApi(this.httpClient);
        this.productCategoryKmlLocation = new api_1.ProductCategoryKmlLocationClientApi(this.httpClient);
        this.productCategoryProduct = new api_1.ProductCategoryProductClientApi(this.httpClient);
        this.productCategoryRoute = new api_1.ProductCategoryRouteClientApi(this.httpClient);
        this.productCategoryRule = new api_1.ProductCategoryRuleClientApi(this.httpClient);
        this.productColor = new api_1.ProductColorClientApi(this.httpClient);
        this.productColorKmlLocation = new api_1.ProductColorKmlLocationClientApi(this.httpClient);
        this.productColorRoute = new api_1.ProductColorRouteClientApi(this.httpClient);
        this.productColorType = new api_1.ProductColorTypeClientApi(this.httpClient);
        this.productImage = new api_1.ProductImageClientApi(this.httpClient);
        this.productImageKmlLocation = new api_1.ProductImageKmlLocationClientApi(this.httpClient);
        this.productImageRoute = new api_1.ProductImageRouteClientApi(this.httpClient);
        this.productKmlLocation = new api_1.ProductKmlLocationClientApi(this.httpClient);
        this.productPricing = new api_1.ProductPricingClientApi(this.httpClient);
        this.productPricingKmlLocation = new api_1.ProductPricingKmlLocationClientApi(this.httpClient);
        this.productPricingRecurringPeriodType = new api_1.ProductPricingRecurringPeriodTypeClientApi(this.httpClient);
        this.productPricingRoute = new api_1.ProductPricingRouteClientApi(this.httpClient);
        this.productPricingRule = new api_1.ProductPricingRuleClientApi(this.httpClient);
        this.productPricingRuleKmlLocation = new api_1.ProductPricingRuleKmlLocationClientApi(this.httpClient);
        this.productRoute = new api_1.ProductRouteClientApi(this.httpClient);
        this.productServiceDayOfWeek = new api_1.ProductServiceDayOfWeekClientApi(this.httpClient);
        this.productServiceDayOfWeekKmlLocation = new api_1.ProductServiceDayOfWeekKmlLocationClientApi(this.httpClient);
        this.productServiceDayOfWeekRoute = new api_1.ProductServiceDayOfWeekRouteClientApi(this.httpClient);
        this.productServiceViewStatusAudit = new api_1.ProductServiceViewStatusAuditClientApi(this.httpClient);
        this.productStartServiceMinimumDaysFromPurchase = new api_1.ProductStartServiceMinimumDaysFromPurchaseClientApi(this.httpClient);
        this.productStartServiceMinimumDaysFromPurchaseKmlLocation = new api_1.ProductStartServiceMinimumDaysFromPurchaseKmlLocationClientApi(this.httpClient);
        this.productTaxes = new api_1.ProductTaxesClientApi(this.httpClient);
        this.promotion = new api_1.PromotionClientApi(this.httpClient);
        this.route = new api_1.RouteClientApi(this.httpClient);
        this.routingSoftwareAccount = new RoutingSoftwareAccountClientApi_1.RoutingSoftwareAccountClientApi(this.httpClient);
        this.routingSoftwareType = new RoutingSoftwareTypeClientApi_1.RoutingSoftwareTypeClientApi(this.httpClient);
        this.routingSoftwareVersion = new RoutingSoftwareVersionClientApi_1.RoutingSoftwareVersionClientApi(this.httpClient);
        this.ruleBuilder = new api_1.RuleBuilderClientApi(this.httpClient);
        this.ruleBuilderField = new api_1.RuleBuilderFieldClientApi(this.httpClient);
        this.secureIdentity = new SecureIdentityClientApi_1.SecureIdentityClientApi(this.httpClient);
        this.securityPermission = new api_1.SecurityPermissionClientApi(this.httpClient);
        this.securityRole = new SecurityRoleClientApi_1.SecurityRoleClientApi(this.httpClient);
        this.serviceGeo = new api_1.ServiceGeoClientApi(this.httpClient);
        this.serviceGeoKmlLocation = new api_1.ServiceGeoKmlLocationClientApi(this.httpClient);
        this.setting = new api_1.SettingClientApi(this.httpClient);
        this.settingIntegration = new api_1.SettingIntegrationClientApi(this.httpClient);
        this.settingIntegrationType = new api_1.SettingIntegrationTypeClientApi(this.httpClient);
        this.settingNotification = new api_1.SettingNotificationClientApi(this.httpClient);
        this.settingOrganization = new api_1.SettingOrganizationClientApi(this.httpClient);
        this.settingToken = new api_1.SettingTokenClientApi(this.httpClient);
        this.settingWorkspace = new api_1.SettingWorkspaceClientApi(this.httpClient);
        this.settingWorkspaceBPS = new api_1.SettingWorkspaceBPSClientApi(this.httpClient);
        this.settingWorkspaceCAL = new api_1.SettingWorkspaceCALClientApi(this.httpClient);
        this.settingWorkspaceCNS = new api_1.SettingWorkspaceCNSClientApi(this.httpClient);
        this.settingWorkspaceDGS = new api_1.SettingWorkspaceDGSClientApi(this.httpClient);
        this.settingWorkspaceOSS = new api_1.SettingWorkspaceOSSClientApi(this.httpClient);
        this.settingWorkspaceSES = new api_1.SettingWorkspaceSESClientApi(this.httpClient);
        this.softPakSizeAndChargeCode = new api_1.SoftPakSizeAndChargeCodeClientApi(this.httpClient);
        this.systemWidgetAttributeTemplate = new api_1.SystemWidgetAttributeTemplateClientApi(this.httpClient);
        this.systemWidgetTemplate = new api_1.SystemWidgetTemplateClientApi(this.httpClient);
        this.systemWidgetViewTemplate = new api_1.SystemWidgetViewTemplateClientApi(this.httpClient);
        this.tax = new api_1.TaxClientApi(this.httpClient);
        this.taxKmlLocation = new api_1.TaxKmlLocationClientApi(this.httpClient);
        this.usState = new api_1.USStateClientApi(this.httpClient);
        this.user = new api_1.UserClientApi(this.httpClient);
        this.userType = new api_1.UserTypeClientApi(this.httpClient);
        this.workspace = new api_1.WorkspaceClientApi(this.httpClient);
        this.workspaceDocument = new api_1.WorkspaceDocumentClientApi(this.httpClient);
        this.workspaceTemplate = new api_1.WorkspaceTemplateClientApi(this.httpClient);
        this.workspaceTemplateAttribute = new api_1.WorkspaceTemplateAttributeClientApi(this.httpClient);
        this.workspaceWidget = new api_1.WorkspaceWidgetClientApi(this.httpClient);
        this.workspaceWidgetAttribute = new api_1.WorkspaceWidgetAttributeClientApi(this.httpClient);
        this.workspaceWidgetEndpoint = new api_1.WorkspaceWidgetEndpointClientApi(this.httpClient);
        this.workspaceWidgetView = new api_1.WorkspaceWidgetViewClientApi(this.httpClient);
        /* End Autogenerate httpClient */
    }
    // Should this be expose or is it even needed?
    getHttpClient() {
        return (this.httpClient);
    }
}
exports.SalesStrykeClientApi = SalesStrykeClientApi;
_a = SalesStrykeClientApi;
_SalesStrykeClientApi_constructorMethodName_s = { value: "constructor" };
//# sourceMappingURL=SalesStrykeClientApi.js.map