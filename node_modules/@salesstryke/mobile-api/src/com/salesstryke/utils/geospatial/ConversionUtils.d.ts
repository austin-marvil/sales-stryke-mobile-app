import { LatLngLiteral, LatLng, MVCArrayLike } from './geospatial.types';
/**
 * Utility functions for converting between different coordinate formats
 */
export declare class ConversionUtils {
    /**
     * Convert a LatLng object to a LatLngLiteral object
     */
    static convertLatLngToLatLngLiteral: (latLng: LatLng) => LatLngLiteral;
    /**
     * Convert an MVC Array path to an array of LatLngLiteral
     */
    static convertGeometryPathToLatLngLiteralArray: (path: MVCArrayLike<LatLng>) => LatLngLiteral[];
    /**
     * Get the Southwest and Northeast corners from two points
     */
    static getSWandNE: ({ point1, point2, }: {
        point1: LatLng;
        point2: LatLng;
    }) => {
        SW: LatLngLiteral;
        NE: LatLngLiteral;
    };
    /**
     * Calculate the haversine distance between two points in kilometers
     */
    static haversine: (point1: LatLng, point2: LatLng) => number;
}
