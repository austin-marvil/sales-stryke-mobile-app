import { Feature, Polygon } from 'geojson';
import { LatLngLiteral } from './geospatial.types';
/**
 * Utility functions for creating concave polygons from points
 */
export declare class ConcaveUtils {
    /**
     * Creates a concave hull (polygon) from a set of points
     *
     * @param points - Array of [x, y] points (longitude, latitude) or LatLngLiteral
     * @param concavity - Concavity factor, between 0 and infinity.
     *                    Lower values mean a more detailed shape, higher means more convex.
     *                    Default is 2.
     * @param lengthThreshold - Maximum segment length. Default is 0.
     * @returns A GeoJSON Feature<Polygon>
     */
    static createConcavePolygon: (points: number[][] | LatLngLiteral[], concavity?: number, lengthThreshold?: number) => Promise<Feature<Polygon>>;
}
