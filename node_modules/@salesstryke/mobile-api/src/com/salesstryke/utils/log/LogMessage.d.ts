export type TLogMessageConstructor = {
    message: string;
    namespace?: string | null;
    methodName?: string | null;
    errorUUID?: string | null;
    originalError?: Error | null;
};
/**
 * DO NOT USE, TO BE DELETED.
 */
declare class LogMessage {
    private error;
    private message_s;
    protected methodName_s: string | null;
    protected namespace_s: string | null;
    private uuid_s;
    /**
     * ```
     * type TLogMessageConstructor =
     * {
     *     messages : string;
     *     namespace?: string | null;
     *     methodName?: string | null;
     *     errorUUID?: string | null;
     *     originalError?: Error | null;
     * }
     * ```
     */
    constructor(p: TLogMessageConstructor);
    constructor(message_s: string, namespace_s?: string, methodName_s?: string, errorUUID_s?: string, originalError?: Error);
    getMethodName(): string | null;
    /**
     * Returns the errorMessage, namespace, methodname, and error uuid.
     * @returns
     */
    getFullMessage(): string;
    /**
     * Returns the error message and the error uuid.
     * @returns
     */
    getMessage(): string;
    getNamespace(): string | null;
    getOriginalError(): Error | null;
    getErrorUUID(): string | null;
}
export { LogMessage };
