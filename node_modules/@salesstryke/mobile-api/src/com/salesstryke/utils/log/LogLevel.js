"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Level = void 0;
const EnumBase_1 = require("../../lang/EnumBase");
const NAMESPACE = 'com.salesstryke.utils.log.Level';
/**
 * '''
 * Level order: ALL > FINEST > FINER > FINE > CONFIG > INFO > WARNING > ERROR > SEVERE > OFF
 * '''
 */
class Level extends EnumBase_1.EnumBase {
    constructor(p) {
        super({ name: p.name, namespace: NAMESPACE });
        this.levelIndex_i_c = -1;
    }
    getLevelIndex() {
        return (this.getId());
    }
    /**
     * ```
     * type TGetLevelByName =
     * {
     *     name    : string;
     * }
     * ```
     */
    static getLevelByName(p) {
        let level = undefined;
        if (p.name) {
            if (p.name === Level.OFF.getName()) {
                level = Level.OFF;
            }
            else if (p.name === Level.SEVERE.getName()) {
                level = Level.SEVERE;
            }
            else if (p.name === Level.ERROR.getName()) {
                level = Level.ERROR;
            }
            else if (p.name === Level.WARNING.getName()) {
                level = Level.WARNING;
            }
            else if (p.name === Level.INFO.getName()) {
                level = Level.INFO;
            }
            else if (p.name === Level.CONFIG.getName()) {
                level = Level.CONFIG;
            }
            else if (p.name === Level.FINE.getName()) {
                level = Level.FINE;
            }
            else if (p.name === Level.FINER.getName()) {
                level = Level.FINER;
            }
            else if (p.name === Level.FINEST.getName()) {
                level = Level.FINEST;
            }
            else if (p.name === Level.ALL.getName()) {
                level = Level.ALL;
            }
        }
        return (level);
    }
}
exports.Level = Level;
Level.OFF = new Level({ name: "OFF" });
Level.SEVERE = new Level({ name: "SEVERE" });
Level.ERROR = new Level({ name: "ERROR" });
Level.WARNING = new Level({ name: "WARNING" });
Level.CONFIG = new Level({ name: "CONFIG" });
Level.INFO = new Level({ name: "INFO" });
Level.FINE = new Level({ name: "FINE" });
Level.FINER = new Level({ name: "FINER" });
Level.FINEST = new Level({ name: "FINEST" });
Level.ALL = new Level({ name: "ALL" });
//# sourceMappingURL=LogLevel.js.map