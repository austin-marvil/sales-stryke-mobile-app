"use strict";
/**
 *
 * Status [0-99] = standard sync status
 * every 100 onward are a intergration per software
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingSoftwareSyncStatusType = void 0;
var RoutingSoftwareSyncStatusType;
(function (RoutingSoftwareSyncStatusType) {
    // 0-99 general status
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["NOT_SYNCED"] = 0] = "NOT_SYNCED";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["PENDING"] = 1] = "PENDING";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["FAILED"] = 10] = "FAILED";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["ROUTING_SOFTWARE_API_ERROR"] = 11] = "ROUTING_SOFTWARE_API_ERROR";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["FAILED_TO_GEOLOCATE_ADDRESS"] = 12] = "FAILED_TO_GEOLOCATE_ADDRESS";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["MISSING_ACCESS_TOKEN"] = 13] = "MISSING_ACCESS_TOKEN";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["MISSING_ROUTING_SOFTWARE_ACCOUNT"] = 14] = "MISSING_ROUTING_SOFTWARE_ACCOUNT";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["MISSING_ORGANIZATION"] = 15] = "MISSING_ORGANIZATION";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["FAILED_TO_PARSE_CUSTOMER_ID"] = 16] = "FAILED_TO_PARSE_CUSTOMER_ID";
    // 100-199 = SOFTPAK
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["SOFTPAK_CUSTOMER_SYNCED"] = 100] = "SOFTPAK_CUSTOMER_SYNCED";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["SOFTPAK_TAX_BODY_CODE_ERROR"] = 111] = "SOFTPAK_TAX_BODY_CODE_ERROR";
    // 200-299 = HAULER_HERO
    // lockbox sync or final api sync
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["COMPLETED"] = 100000] = "COMPLETED";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["TO_BE_COMPLETE_BY_CLIENT"] = 100001] = "TO_BE_COMPLETE_BY_CLIENT";
    RoutingSoftwareSyncStatusType[RoutingSoftwareSyncStatusType["TEST_COMPLETED"] = 200000] = "TEST_COMPLETED";
})(RoutingSoftwareSyncStatusType || (exports.RoutingSoftwareSyncStatusType = RoutingSoftwareSyncStatusType = {}));
/**
 * Softpak status flow:
 *      NOT_SYNCED [0] => FAILED STATUS [10-16] | PENDING [1] | SOFTPAK_CUSTOMER_SYNCED [100]
 *          FAILED STATUS [10-16] | PENDING [1] => COMPLETED_BY_CLIENT [100001]
 *          SOFTPAK_CUSTOMER_SYNCED => COMPLETED [100000]
 *
 * Hauler Hero status flow:
 *      NOT_SYNCED [0] => FAILED STATUS [10-16] | PENDING [1] | COMPLETED [100000]
 *          FAILED STATUS [10-16] | PENDING [1] => COMPLETED_BY_CLIENT [100001]
 *
 */
//# sourceMappingURL=RoutingSoftwareSyncStatusType.js.map