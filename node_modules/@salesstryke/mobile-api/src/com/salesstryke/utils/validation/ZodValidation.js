"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZodValidation = void 0;
const zod_1 = require("zod");
const EntityManager_1 = require("../../data/EntityManager");
const util_1 = require("../../jsonApi/util");
const entity_1 = require("../entity");
class ZodValidation {
    static isAttributeValid(p) {
        let namespace = p.entity.getClassName();
        let entityWrapper = EntityManager_1.EntityManager.getInstance().getEntityWrapperByNamespace(namespace);
        let zodValidator = undefined;
        let zodError = null;
        if (entityWrapper) {
            let attribute = entityWrapper.getAttributeByName(p.attributeName);
            if (attribute) {
                let value = util_1.EntityWebReflectionUtils.getValue(attribute, p.entity);
                zodValidator = attribute.getValidator();
                if (zodValidator) {
                    try {
                        zodValidator.parse(value);
                    }
                    catch (error_any) {
                        if (error_any instanceof zod_1.ZodError) {
                            zodError = error_any;
                        }
                    }
                }
            }
        }
        return (zodError);
    }
    static isEntityValid(p) {
        let zodError = null;
        let entitySchema = entity_1.EntityUtils.getAsZodSchema({ entity: p.entity });
        if (entitySchema) {
            try {
                entitySchema.parse(p.entity);
            }
            catch (error_any) {
                if (error_any instanceof zod_1.ZodError) {
                    zodError = error_any;
                }
            }
        }
        return (zodError);
    }
}
exports.ZodValidation = ZodValidation;
//# sourceMappingURL=ZodValidation.js.map