"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Regex = void 0;
exports.Regex = {
    notEmpty: /^(?!\s*$).+/,
    // email: /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,32})+$/, 
    email: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,32}$/,
    alphanumericWithoutSpace: /^[a-zA-Z0-9]*$/,
    alphanumericWithSpace: /^[a-zA-Z0-9 ]*$/,
    alphaWithoutSpace: /^[a-zA-Z]*$/,
    alphaWithSpace: /^[a-zA-Z ]*$/,
    numberOnly: /^[0-9]*$/,
    hasNumber: /\d/,
    addressUnit: /[#].{1,3}/, // start with a # follow by any character, max lenth 2-4
    phoneNumber: /^(\+?\d{1,3})?[-.\s]?(\d{3})[-.\s]?(\d{3})[-.\s]?(\d{4})$/,
    imageWebUrl: /^(https?:\/\/)[a-zA-Z0-9\-_.]+\/[a-zA-Z0-9\-_/]+(\.jpg|\.jpeg|\.png|\.gif|\.webp|\.bmp|\.svg)$/,
    // fix later... change min back to 8. leaving it at 3 for testing atm
    password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{3,}$/, // Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character
};
//# sourceMappingURL=RegularExpressionRegexConstUtil.js.map