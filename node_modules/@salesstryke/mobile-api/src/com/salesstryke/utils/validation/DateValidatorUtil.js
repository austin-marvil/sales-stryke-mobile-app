"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateValidatorUtil = void 0;
const log_1 = require("../log");
const LogManager_1 = require("../log/LogManager");
const NAMESPACE = "com.salesstryke.utils.entity.DateValidatorUtils";
const LOGGER = LogManager_1.LogManager.getLogger(NAMESPACE);
LOGGER.setLogLevel(log_1.Level.WARNING);
/**
 * Utility functions for date-based validations
 */
class DateValidatorUtil {
    /**
     * Checks if pass in date is less then today's date
     * @param paramDate - The pass in date to check against (can be Date, string, or null)
     * @returns boolean - True if current date is before pass in date, false otherwise
     */
    static isBeforeCurrentDate(paramDate) {
        if (!paramDate)
            return false;
        const currentDate = new Date();
        currentDate.setHours(0, 0, 0, 0); // Reset time part for date-only comparison
        const startDate = paramDate instanceof Date ? paramDate : new Date(paramDate);
        startDate.setHours(0, 0, 0, 0);
        return currentDate < startDate;
    }
    /**
     * Checks if pass in date is today or after today's date
     * @param paramDate - The pass in date to check against (can be Date, string, or null)
     * @returns boolean - True if current date is on or after pass in date, false otherwise
     */
    static isTodayOrAfter(paramDate) {
        if (!paramDate)
            return false;
        const currentDate = new Date();
        currentDate.setHours(0, 0, 0, 0); // Reset time part for date-only comparison
        const startDate = paramDate instanceof Date ? paramDate : new Date(paramDate);
        startDate.setHours(0, 0, 0, 0);
        return currentDate <= startDate;
    }
    // TODO: move to dateUtil this should only be validtation if we are to have are not going to combine them
    /**
     * Gets the formatted date string for consistent date handling
     * @param date - Date to format
     * @returns string - Formatted date string
     */
    static getFormattedDate(date) {
        return date.toISOString().split('T')[0];
    }
}
exports.DateValidatorUtil = DateValidatorUtil;
//# sourceMappingURL=DateValidatorUtil.js.map