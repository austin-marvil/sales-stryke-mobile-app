"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonApiDocument = void 0;
const JsonApiPersistableBase_1 = require("./JsonApiPersistableBase");
class JsonApiDocument {
    constructor() {
        this.data = new Array();
        this.errors = new Array();
        this.query = null;
    }
    addError(jsonApiError) {
        this.errors.push(jsonApiError);
        return (this);
    }
    addData(dataItem) {
        if (dataItem !== undefined && dataItem !== null) {
            if (dataItem instanceof JsonApiPersistableBase_1.JsonApiPersistableBase) {
                let japb = dataItem;
                if (japb._createJsonStateStr) {
                    japb._createJsonStateStr();
                }
            }
            this.data.push(dataItem);
        }
        return (this);
    }
    /**
     * Returns all data as Array<ResourceObject>;
     * @returns
     */
    getDataItems() {
        return (this.data);
    }
    /**
     * Returns all data as Array<Object>;
     * @returns
     */
    getData() {
        return (this.data);
    }
    /**
     * Returns an Array of the Entity type.
     * @returns
     */
    getDataAs() {
        const data = this.data;
        return (data);
    }
    /**
     * Returns single Entity.
     * @returns
     */
    getDataAsItem() {
        const data_lst_m = new Array();
        let item_m = null;
        if (this.data !== null && this.data.length > 0) {
            item_m = this.data[0];
        }
        return (item_m);
    }
    getErrors() {
        return (this.errors);
    }
    getQuery() {
        return (this.query);
    }
    setQuery(jsonApiQuery) {
        this.query = jsonApiQuery;
        return (this);
    }
}
exports.JsonApiDocument = JsonApiDocument;
//# sourceMappingURL=JsonApiDocument.js.map