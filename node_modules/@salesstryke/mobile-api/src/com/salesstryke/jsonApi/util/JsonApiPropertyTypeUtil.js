"use strict";
var _a, _JsonApiPropertyTypeUtil_getAsJsonApiPropertyTypeFunctionName;
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonApiPropertyTypeUtil = void 0;
const LogManager_1 = require("../../utils/log/LogManager");
const JsonApiPropertyType_1 = require("../JsonApiPropertyType");
const NAMESPACE = "com.salesstryke.jsonapi.util.JsonApiPropertyTypeUtil";
const LOGGER = LogManager_1.LogManager.getLogger(NAMESPACE);
class JsonApiPropertyTypeUtil {
    static getAsJsonApiPropertyType(typeName) {
        let jsonApiPropertyType = JsonApiPropertyType_1.JsonApiPropertyType.NONE;
        if (typeName === JsonApiPropertyType_1.JsonApiPropertyType.FIELD.toLocaleLowerCase()) {
            jsonApiPropertyType = JsonApiPropertyType_1.JsonApiPropertyType.FIELD;
        }
        else if (typeName === JsonApiPropertyType_1.JsonApiPropertyType.ATTRIBUTES.toLocaleLowerCase()) {
            jsonApiPropertyType = JsonApiPropertyType_1.JsonApiPropertyType.ATTRIBUTES;
        }
        else if (typeName === JsonApiPropertyType_1.JsonApiPropertyType.RELATIONSHIPS.toLocaleLowerCase()) {
            jsonApiPropertyType = JsonApiPropertyType_1.JsonApiPropertyType.RELATIONSHIPS;
        }
        else if (typeName === JsonApiPropertyType_1.JsonApiPropertyType.ID.toLocaleLowerCase()) {
            jsonApiPropertyType = JsonApiPropertyType_1.JsonApiPropertyType.ID;
        }
        else if (typeName === JsonApiPropertyType_1.JsonApiPropertyType.TYPE.toLocaleLowerCase()) {
            jsonApiPropertyType = JsonApiPropertyType_1.JsonApiPropertyType.TYPE;
        }
        else if (typeName === JsonApiPropertyType_1.JsonApiPropertyType.LINKS.toLocaleLowerCase()) {
            jsonApiPropertyType = JsonApiPropertyType_1.JsonApiPropertyType.LINKS;
        }
        else if (typeName === JsonApiPropertyType_1.JsonApiPropertyType.META.toLocaleLowerCase()) {
            jsonApiPropertyType = JsonApiPropertyType_1.JsonApiPropertyType.META;
        }
        else {
            let errorMsg = "Unknown JsonApiPropertyType: " + typeName;
            LOGGER.logSevere({ message: errorMsg, methodName: this.getAsJsonApiPropertyType.name, uuid: "b17ea561-7e82-4003-99a9-6551e9c80659" });
        }
        return (jsonApiPropertyType);
    }
}
exports.JsonApiPropertyTypeUtil = JsonApiPropertyTypeUtil;
_a = JsonApiPropertyTypeUtil;
_JsonApiPropertyTypeUtil_getAsJsonApiPropertyTypeFunctionName = { value: "getAsJsonApiPropertyType" };
//# sourceMappingURL=JsonApiPropertyTypeUtil.js.map