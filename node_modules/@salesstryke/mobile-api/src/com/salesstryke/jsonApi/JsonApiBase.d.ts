export declare class JsonState {
    private mutatedAttributesMap;
    private persistenceType;
    constructor(p: {
        jsonStateStr: string | null;
    });
    getIsAttributeMutated(p: {
        attributeName: string;
    }): boolean;
    getIsEntityMutated(): boolean;
    getPersistenceType(): number | null;
}
type TAttribute = {
    name: string;
    isMutated?: boolean;
};
export type TJsonState = {
    attributes?: Array<TAttribute>;
    persistenceType?: number | null;
};
export declare class JsonApiBase {
    protected _initialAttributeState_map: Map<string, any>;
    protected _isMutatedFromMap: boolean;
    protected _currentAttributeHashCodeMap2: Map<string, number> | null;
    protected _attributeByNameMap2: Map<string, any> | null;
    protected _currentHashcode2: number;
    protected _hasInitializedHashCode2: boolean;
    private _initializedAttributeHashCodeMap2;
    protected _initializedHashcode2: number;
    protected _isTrackingingMutations: boolean;
    private _jsonStateStr2;
    private _jsonState;
    constructor(p?: {
        isTrackingMutations: boolean;
    });
    /**
     * ```
     * For relationships:
     *    MONGO_REF,
     *    MONGO_REF_ARRAY,
     *    MANY_TO_MANY,
     *    MANY_TO_ONE,
     *    ONE_TO_MANY,
     *    ONE_TO_ONE, identifies if the value is to be:
     *
     *    ATTACH         = 10:  identifies to attach an existing Entity by id to a MONGO_REF_ARRAY
     *    CREATE         = 20:  identifies to create a MONGO_REF is it does not contain an ObjectId.
     *    UPDATE         = 30:  identifies if the system is to update a MONGO_REF that is a member of an Entity.
     *    DETACH         = 40:  identifies to detach an existing Entity by id from a MONGO_REF_ARRY.
     *    DELETE         = 50:  identifies to delete a MONGO_REF if allowed.
     *    DELETE_CASCADE = 60:  identifies to cascase delete MONGO_REF items if allowed.
     * ```
     */
    protected _relationshipPersistableType: number;
    getClassName(): string;
    getHashCode(): number;
    /**
     * CREATE, DELETE, READ, UPDATE
     * @returns string | null
     */
    _getEntityState(): string | null;
    _getIsMutated(): boolean;
    _getIsTrackingMutations(): boolean;
    _createJsonStateStr(): string | null;
    _getJsonStateStr(): string | null;
    _getJsonState(): JsonState | null;
    _setCurrentState2(p: {
        attributeName: string;
        value: any;
    }): JsonApiBase;
    _setInitializedState2(p: {
        attributeName: string;
        value: any;
    }): JsonApiBase;
    _setJsonStateStr(jsonStateStr2: string | null): JsonApiBase;
    _trackMutations(): this;
    /**
     * CREATE, DELETE, READ, UPDATE
     */
    _setEntityState(_entityState: string | null): JsonApiBase;
    getI18n(): string | null;
    static getSimpleName(): string;
    getUIUUID(): string | null;
    setI18n(i18n: string | null): JsonApiBase;
    setUIUUID(UIUUID: string | null): JsonApiBase;
}
export {};
