import { Product, ProductPricing } from '../entity/classes/persistable';
export declare enum CustomerServiceType {
    BULK_PICKUP = "BULK_PICKUP",
    DISPOSAL_GUIDE = "DISPOSAL_GUIDE"
}
export declare enum DisposalMethodType {
    COMPOST = "compost",
    RECYCLE = "recycle",
    DROP_OFF = "drop-off",
    HAZARDOUS_WASTE = "hazardous-waste",
    YARD_WASTE = "yard-waste",
    CURBSIDE_PICKUP = "curbside-pickup"
}
export interface DisposalMethod {
    method: string;
    description: string;
}
export interface CartItem {
    product: Product;
    quantity: number;
    acceptedTerms: boolean;
    addedAt: Date;
    acceptedAt?: Date;
    pricing?: ProductPricing;
}
export interface CustomerAddress {
    address: string;
    coordinates?: {
        lat: number;
        lng: number;
    };
    serviceArea?: string;
}
export interface BulkPickupSchedule {
    preferredDate: Date;
    alternateDate?: Date;
    timeWindow?: string;
    specialInstructions?: string;
}
export interface CheckoutData {
    customer: {
        firstName: string;
        lastName: string;
        email: string;
        phone: string;
        address: string;
    };
    schedule: BulkPickupSchedule;
    items: CartItem[];
    billing: {
        sameAsService: boolean;
        address?: string;
    };
    payment: {
        method: 'credit' | 'debit' | 'paypal';
    };
    totals: {
        subtotal: number;
        tax: number;
        pickupFee: number;
        total: number;
    };
}
export interface ProductWithServiceData extends Product {
    bulkPickupData?: {
        requiresTerms: boolean;
        minimumQuantity?: number;
        maximumQuantity?: number;
        estimatedWeight?: string;
    };
    disposalData?: {
        disposalMethods: DisposalMethod[];
        instructions: string;
        dropOffLocations?: DisposalLocation[];
        specialInstructions?: string;
        hazardousWarnings?: string[];
        isHazardous?: boolean;
        fees?: string;
        category?: string;
    };
}
export interface MockHauler {
    id: string;
    name: string;
    serviceAreas: Array<string>;
    basePickupFee: number;
    pricePerItem: number;
    availableDays: Array<string>;
    blockedDates: Array<string>;
    contactPhone: string;
    contactEmail: string;
    responseTime: string;
    rating: number;
    acceptedPayments: Array<string>;
}
export interface DisposalMethod {
    method: string;
    description: string;
    requirements?: Array<string>;
    restrictions?: Array<string>;
}
export interface DisposalLocation {
    name: string;
    address: string;
    phone?: string;
    hours?: string;
    website?: string;
    coordinates?: {
        lat: number;
        lng: number;
    };
    driveTime?: number;
    accepts?: Array<string>;
    restrictions?: Array<string>;
}
export interface ServiceResponse<T> {
    success: boolean;
    data?: T;
    error?: string;
}
export interface CheckoutFormData {
    firstName: string;
    lastName: string;
    email: string;
    phone: string;
    pickupDate: Date;
    specialNotes: string;
    cardNumber: string;
    cardHolder: string;
    expiryDate: string;
    cvv: string;
    billingAddress?: string;
    sameAsPickup: boolean;
    termsAccepted: boolean;
    privacyAccepted: boolean;
}
export interface BulkPickupOrder {
    orderId: string;
    orderNumber: string;
    customerDetails: {
        firstName: string;
        lastName: string;
        email: string;
        phone: string;
        address: string;
    };
    items: Array<CartItem>;
    hauler: MockHauler;
    scheduledDate: Date;
    totalAmount: number;
    status: string;
    createdAt: Date;
}
